{"version":3,"sources":["themes/themes.ts","themes/palettes.ts","themes/classes.ts","graphql/client.ts","graphql/query/getDepartments.ts","graphql/query/getCategories.ts","graphql/query/getBrands.ts","graphql/query/getGroups.ts","graphql/query/getEmployees.ts","graphql/query/getCustomers.ts","graphql/query/getServices.ts","graphql/query/getItems.ts","graphql/query/getEvents.ts","graphql/query/getProducts.ts","graphql/query/getNoStockProducts.ts","graphql/query/getUsers.ts","graphql/query/getInvoices.ts","graphql/query/getLastNos.ts","graphql/query/getBranches.ts","graphql/query/getAccounts.ts","graphql/query/getFinances.ts","graphql/query/getGeneralFinances.ts","graphql/query/getReportEvents.ts","graphql/query/getRasseds.ts","graphql/query/getCompany.ts","graphql/query/getSalesReport.ts","graphql/query/getEventsInfo.ts","graphql/query/getChartsData.ts","graphql/query/getOperationItems.ts","graphql/query/getMonthlyReport.ts","graphql/query/getFinanceReport.ts","graphql/query/getLandingChartData.ts","graphql/query/getSimpleChartsData.ts","graphql/query/getTodaySales.ts","graphql/query/getTodayEvents.ts","graphql/query/getDaysEvents.ts","graphql/query/getDaysSales.ts","graphql/query/getMonthsSales.ts","graphql/query/getMonthsEvents.ts","graphql/query/getAccountsRaseed.ts","graphql/query/getSuppliers.ts","graphql/query/getPurchaseInvoices.ts","graphql/query/getExpenses.ts","graphql/query/getActions.ts","graphql/query/getReminders.ts","graphql/mutation/createDepartment.ts","graphql/mutation/createCategory.ts","graphql/mutation/deleteCategory.ts","graphql/mutation/updateCategory.ts","graphql/mutation/createAction.ts","graphql/mutation/deleteAction.ts","graphql/mutation/updateAction.ts","graphql/mutation/createBrand.ts","graphql/mutation/deleteBrand.ts","graphql/mutation/updateBrand.ts","graphql/mutation/createGroup.ts","graphql/mutation/deleteGroup.ts","graphql/mutation/updateGroup.ts","graphql/mutation/deleteDepartment.ts","graphql/mutation/updateDepartment.ts","graphql/mutation/createEmployee.ts","graphql/mutation/deleteEmployee.ts","graphql/mutation/updateEmployee.ts","graphql/mutation/createCustomer.ts","graphql/mutation/deleteCustomer.ts","graphql/mutation/updateCustomer.ts","graphql/mutation/createItem.ts","graphql/mutation/deleteItem.ts","graphql/mutation/updateItem.ts","graphql/mutation/createEvent.ts","graphql/mutation/deleteEvent.ts","graphql/mutation/updateEvent.ts","graphql/mutation/createInvoice.ts","graphql/mutation/deleteInvoice.ts","graphql/mutation/updateInvoice.ts","graphql/mutation/createFinance.ts","graphql/mutation/deleteFinance.ts","graphql/mutation/updateFinance.ts","graphql/mutation/createGeneralFinance.ts","graphql/mutation/deleteGeneralFinance.ts","graphql/mutation/updateGeneralFinance.ts","graphql/mutation/createAccount.ts","graphql/mutation/deleteAccount.ts","graphql/mutation/updateAccount.ts","graphql/mutation/login.ts","graphql/mutation/signup.ts","graphql/mutation/updateUser.ts","graphql/mutation/deleteUser.ts","graphql/mutation/updateBranch.ts","graphql/mutation/backupDB.ts","graphql/mutation/restoreDB.ts","graphql/mutation/updateCompany.ts","graphql/mutation/runClosing.ts","graphql/mutation/deleteEventById.ts","graphql/mutation/createSupplier.ts","graphql/mutation/createPurchaseInvoice.ts","graphql/mutation/updatePurchaseInvoice.ts","graphql/mutation/deletePurchaseInvoice.ts","graphql/mutation/updateSupplier.ts","graphql/mutation/deleteSupplier.ts","graphql/mutation/createExpenses.ts","graphql/mutation/updateExpenses.ts","graphql/mutation/deleteExpenses.ts","graphql/mutation/changePassword.ts","graphql/mutation/blockUser.ts","store/helpers.ts","store/initStore.ts","store/storeReducer.ts","common/roles.ts","constants/menu.ts","constants/colors.ts","constants/sizes.ts","constants/yupSchemas.ts","constants/datatypes.ts","contexts/calendar/index.ts","contexts/calendar/calendarReducer.ts","contexts/events/index.ts","contexts/events/eventsReducer.ts","contexts/finance/index.ts","contexts/finance/financeReducer.ts","contexts/receipt/index.ts","contexts/receipt/receiptReducer.ts","contexts/expensesReport/index.ts","contexts/expensesReport/expensesReportReducer.ts","contexts/customerReport/index.ts","contexts/customerReport/customerReportReducer.ts","contexts/expenses/index.ts","contexts/expenses/expensesReducer.ts","contexts/global.tsx","contexts/sales/index.ts","contexts/sales/salesReducer.ts","contexts/salesreport/index.ts","contexts/purchase/purchaseReducer.ts","contexts/salesreport/salesReducer.ts","contexts/purchasereport/index.ts","contexts/purchasereport/purchaseReducer.ts","pages/login/index.tsx","Shared/MyIcon.tsx","components/drawer/renders.tsx","components/drawer/MenuItem.tsx","components/drawer/Menu.tsx","common/color.ts","constants/branch.ts","constants/kaid.ts","common/helpers.ts","constants/reports.ts","Shared/Avatar.tsx","Shared/AvatarColor.tsx","Shared/colorFormat.tsx","common/time.ts","common/calendar.ts","common/columns.ts","common/check.ts","Shared/Command.tsx","Shared/CommandAppointment.tsx","Shared/CloseCancel.tsx","Shared/AlertMsg.tsx","Shared/helpers.ts","Shared/yupSchemas.ts","Shared/PopupDialog.tsx","Shared/PopupTextField.tsx","Shared/OptionItem.tsx","Shared/OptionItemData.tsx","Shared/Loading.tsx","Shared/UserBox.tsx","Shared/AutoField.tsx","Shared/UserRoles.tsx","Shared/PopupEditing.tsx","Shared/ColorPicker.tsx","components/drawer/index.tsx","components/charts/common.tsx","components/charts/InfoBox.tsx","common/reports.ts","pages/calendar/common/DateViewSwitcher.tsx","components/filters/DateNavigator.tsx","components/filters/SearchTable.tsx","components/fields/AlertLocal.tsx","components/fields/CalenderLocal.tsx","components/fields/TextFieldLocal.tsx","components/appbar/AppBar.tsx","components/charts/ChartHeader.tsx","components/charts/SalesDaysChart.tsx","components/charts/MonthsChart.tsx","components/charts/DaysEvents.tsx","components/charts/EventsDaysChart.tsx","components/charts/PercentChart.tsx","components/charts/MonthsEmpChart.tsx","components/charts/InfoBoxDark.tsx","hooks/useDepartments.tsx","pages/main/PageLayout.tsx","languages/translation.tsx","languages/index.ts","hooks/useEmployees.tsx","hooks/useServices.ts","hooks/useCustomers.ts","hooks/useLastNos.tsx","graphql/query/getDecryptedLicense.ts","hooks/useBranches.ts","pages/main/Landing.tsx","hooks/useLandingChart.tsx","pages/main/PopupLayout.tsx","pages/calendar/common/SelectLocalNoby.tsx","pubups/PopupDeprtment.tsx","Shared/DaysOffView.tsx","components/fields/AutoFieldLocal.tsx","pubups/PopupEmployee.tsx","pubups/PopupCustomer.tsx","pubups/PopupService.tsx","Shared/AutoPopper.tsx","Shared/ServiceItemForm.tsx","Shared/CommandSmall.tsx","pubups/PopupItem.tsx","Shared/ItemsTable.tsx","Shared/TotalPrice.tsx","pages/options/PaymentSelect.tsx","Shared/LoadingInline.tsx","common/InvoicePrintA5.tsx","graphql/query/getTasks.ts","hooks/useTasks.ts","hooks/useCompany.ts","pubups/PopupInvoice.tsx","common/accounts.ts","pubups/PopupAccount.tsx","pages/calendar/common/StatusIcon.tsx","pages/calendar/common/StatusSelect.tsx","pages/calendar/common/SelectLocal.tsx","constants/rrule.ts","pubups/PopupAction.tsx","pages/calendar/common/AppointForm.tsx","pubups/PopupAppointInvoice.tsx","pages/calendar/common/AppointTooltip.tsx","pages/calendar/common/AppointContent.tsx","Shared/OptionFilterItem.tsx","Shared/FilterSelect.tsx","pages/options/DepartemplSelect.tsx","Shared/EventsCalFilter.tsx","pages/main/PopupLayoutBox.tsx","pages/calendar/Main.tsx","pages/calendar/MainCalendar.tsx","pages/options/LanguageSelect.tsx","pages/options/ThemeSelect.tsx","Shared/BackupRestoreDB.tsx","hooks/useBackup.ts","pages/options/CalendarOptions.tsx","common/upload.tsx","pages/options/Company.tsx","pages/options/Names.tsx","pages/options/index.tsx","pubups/PopupPassword.tsx","pubups/PopupUser.tsx","pages/adds/Users.tsx","hooks/useUsers.ts","pages/adds/Departments.tsx","hooks/useHResourses.tsx","pages/adds/Employees.tsx","graphql/query/getObjectEvents.ts","common/getRruleData.ts","Shared/SelectMulti.tsx","pubups/PopupAddMultiEvents.tsx","pubups/PopupAppointmentCustomer.tsx","Shared/EventsCustomer.tsx","Shared/FilterSelectMulti.tsx","Shared/ReportsFilter.tsx","pages/calendar/common/ReportGroupBySwitcher.tsx","components/filters/DateNavigatorReports.tsx","pages/reports/SalesReport.tsx","Shared/InvoicesCustomer.tsx","hooks/useAccounts.ts","graphql/query/getReceipts.ts","graphql/query/getInvoicesList.ts","pubups/PopupReceipt.tsx","Shared/ReceiptCustomer.tsx","pubups/PopupExpenses.tsx","Shared/ExpensesCustomer.tsx","pubups/PopupTaskAppointment.tsx","Shared/EventsTable.tsx","pubups/PopupTask.tsx","graphql/mutation/createTask.ts","graphql/mutation/updateTask.ts","graphql/mutation/deleteTaskById.ts","Shared/TableComponent.tsx","pubups/PopupTaskInvoice.tsx","graphql/query/getTaskItems.ts","pubups/PopupTaskView.tsx","Shared/TasksCustomer.tsx","pubups/PopupCustomerView.tsx","pages/adds/Customers.tsx","pages/adds/Services.tsx","pages/adds/Invoices.tsx","pages/adds/Accounts.tsx","pages/options/CashTransfareSelect.tsx","pubups/PopupFinance.tsx","pages/adds/Finance.tsx","pubups/PopupAppointment.tsx","pubups/PopupDepartmentView.tsx","pubups/PopupEmployeeView.tsx","pages/adds/Appointments.tsx","Shared/FilterSelectCkeckBox.tsx","pages/reports/FinanceReport.tsx","contexts/eventsreport/salesReducer.ts","contexts/eventsreport/index.ts","pages/reports/EventsReport.tsx","pages/reports/CustomerReport.tsx","contexts/calendarReport/eventsReducer.ts","contexts/calendarReport/index.ts","pages/adds/Expenses.tsx","pages/reports/PurchaseReport.tsx","pages/reports/ExpensesReport.tsx","hooks/useOResourses.tsx","pubups/PopupResourses.tsx","pages/adds/Resourses.tsx","pages/adds/Receipt.tsx","Shared/KaidsTable.tsx","graphql/query/getOperationKaids.ts","pubups/PopupFinanceAll.tsx","pages/adds/FinanceAll.tsx","contexts/tasks/index.ts","pages/calendar/TasksGantt.tsx","pubups/PopupGantt.tsx","pages/adds/Tasks.tsx","contexts/tasks/tasksReducer.ts","graphql/query/getReportDocuments.ts","contexts/documentsReport/index.ts","pages/reports/DocumentsReport.tsx","contexts/documentsReport/documentsReducer.ts","contexts/servicesReport/index.ts","graphql/query/getReportServices.ts","pages/reports/ServicesReport.tsx","contexts/servicesReport/servicesReducer.ts","pages/adds/ManageEmployees.tsx","pages/adds/ManageDepartments.tsx","pages/calendar/Employees.tsx","pages/calendar/EmployeesCalendar.tsx","pages/main/Content.tsx","hooks/useSuppliers.ts","pages/main/Layout.tsx","App.tsx","themes/createTheme.ts","hooks/useTranslate.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["themeEnData","props","MuiButton","size","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","sizeSmall","marginLeft","marginRight","padding","themeArData","direction","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palettes","palette","primary","main","secondary","background","default","loginClasses","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","form","width","submit","layoutClasses","createStyles","root","toolbar","mixins","content","flex","cardClasses","popup","height","maxWidth","media","daySwitchClasses","formControl","selectEmpty","invoiceClasses","smallFont","itemClasses","popupadd","stringstore","localStorage","getItem","store","JSON","parse","token","httpLink","createHttpLink","uri","process","GRAPHQL_URI","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","gql","setStoreItem","name","value","removeItem","setItem","stringify","getStoreItem","defaultValue","initStore","lang","themeId","user","calendar","duration","start","end","network","weburi","names","tasks","customers","employees","departments","localuri","storeReducer","state","action","type","payload","Error","systems","cal","pos","pur","exp","inv","hr","ass","acc","roles","isSuperAdmin","isBranchAdmin","branch","admin","isSystemAdmin","system","isEditor","isSystemEditor","isViewer","menuRoles","applyRole","role","mainmenu","id","titleAr","titleEn","icon","req","dep","subMenu","mainId","systemsNames","nameAr","colors","drawerWidth","imageUploadOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","phoneRegExp","brandSchema","yup","shape","required","min","max","brandResolver","resolver","yupResolver","loginSchema","username","password","loginResolver","catSchema","catResolver","departSchema","color","departResolver","custSchema","phone","matches","email","custResolver","itmSchema","price","itmResolver","emplSchema","emppResolver","invItemSchema","qty","invItemResolver","operationTypes","salesInvoice","salesQoutation","salesDelivery","salesReturn","customerReceipt","customerDiscount","purchaseInvoice","purchaseOrder","purchaseDelivery","purchaseReturn","supplierPayemnt","supplierDiscount","interDeliveryIn","interDeliveryOut","expenses","deposet","ownerDraw","ownerDeposit","event","task","project","kaid","opTypesNames","10","ref","11","12","13","14","15","30","31","32","33","34","35","50","51","60","70","71","72","80","90","eventStatusEn","1","2","3","4","eventStatusAr","eventStatus","eventColors","weekdays","sat","sun","mon","tue","wed","thu","fri","weekdaysNNo","6","0","5","weekdaysObj","short","dayslist","CalendarContext","createContext","initCalendar","mainResourceName","currentViewName","currentDate","Date","departvalue","emplvalue","status","data","sort","columnName","calendarReducer","EventsContext","initEventsContext","endDate","eventsReducer","FinanceContext","initFinanceContext","servicevalue","custvalue","catvalue","accvalue","taskvalue","groupby","group","sumcolumn","financeReducer","ReceiptContext","initReceiptContext","receiptReducer","ExpensesReportContext","initExpensesReportContext","expensesReportReducer","CustomerReportContext","initCustomerReportContext","customerReportReducer","ExpensesContext","initExpensesContext","expensesReducer","GlobalContext","SalesContext","initSalesContext","salesReducer","SalesReportContext","initSalesReportContext","itemType","salesReportReducer","PurchaseReportContext","initPurchaseReportContext","suppvalue","brandvalue","purchaseReportReducer","Login","classes","useState","error","seterror","useForm","register","handleSubmit","errors","useContext","dispatch","isRTL","translate","useMutation","login","dologin","onSubmit","dt","a","variables","userData","ok","accessToken","refreshToken","resetStore","window","location","reload","keyPress","e","keyCode","Container","component","CssBaseline","className","Avatar","Typography","noValidate","TextField","autoFocus","label","inputRef","onKeyDown","fullWidth","helperText","undefined","Button","style","onClick","Box","mt","align","Link","href","getFullYear","MyIcon","renderIcon","isSelected","fade","ListItemIcon","MenuItem","item","submenu","setMenuitem","menuitem","i","setMobileOpen","React","open","setOpen","ListItem","dir","child","cursor","ListItemText","txtrtl","txtltr","paddingTop","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","subitem","textDecoration","to","button","child2","dark","subMenuItem","Menu","menu","logout","history","push","nameToColor","s","l","hash","length","charCodeAt","h","systemTypes","taskTypes","getTaskName","taskname","filter","tt","actionType","accountType","closedAccounts","parents","accountCodes","7","8","9","parentsAccounts","CASH","parentcode","parent","parentAr","accType","closedAcc","ACCOUNTS_RECEIVABLE","INVENTORY","OTHER_CURRENT_ASSETS","FIXED_ASSETS","ACCUMULATED_DEPRECIATION","ACCOUNTS_PAYABLE","OTHER_CURRENT_LIABILITIES","LONG_TERM_LIABILITIES","EQUITY_RETAINED_EARNINGS","EQUITY_DOESNT_CLOSE","EQUITY_GETS_CLOSED","INCOME","COST_OF_SALES","EXPENCES","parentsAccountsList","parentsBasicAccountsList","parentsSalesAccountsList","parentsPurAccountsList","parentsExpAccountsList","parentsInvAccountsList","parentsGeneralAccountsList","accountCode","accounts","cash","code","card","bank","accounts_receivable","inventory","accounts_payable","sales_income","purchase_discount","purchase_returns","sales_income_other","partner_current_acc","accrued_expenses","cost_of_sales","purchase_nonstock","sales_discount","sales_returns","cost_of_sales_other","expenses_legal","expenses_salary","expenses_rent","expenses_other","other_current_assets","fixed_assets","accumulated_depreciation","long_term_liabilities","retained_earnings","paid_in_capital","dividends_paid","getResourses","navigator","userAgent","toLowerCase","indexOf","resourse","fieldName","title","instances","res","text","_id","resourses","isValidMenu","includes","getEventsList","rrule","actionslist","starthour","startDate","getHours","startminute","getMinutes","endhour","endminute","dates","all","ritems","items","trim","da","year","month","getMonth","day","getDate","actionsl","al","timeunit","timerelate","sendtime","getSendTime","actions","unitms","fms","final","getTime","groupList","documentTypes","sectionTypes","bc","bg","uname","split","letters","substring","toUpperCase","Tooltip","border","justifyContent","borderRadius","borderColor","AvatarColor","colorFormatter","daysoffFormatter","days","obj","Object","keys","k","avatarPatternFormatter","row","sectionsTypeFormatter","nameObj","st","avatarFormatter","activeFormatter","covertToDate","time","toLocaleString","covertToTimeDateDigit","hour","minute","covertToTimeOnly","hour12","getDateDayTimeFormat","weekday","getDateDay","getDateDayWeek","getDateFormat","getDateMonthFormat","timeFormatter","documentTimeFormatter","opType","createdAtFormatter","fromToFormatter","samllFormatter","dateTimeFormatter","eventStatusFormatter","es","eventStatusPrintDataFormatter","moneyFormat","amount","isNaN","toFixed","replace","moneyFormatEmpty","moneyFormatSimple","amountFormatter","total","discount","currencyFormatter","currencyFormatterEmpty","dueAmountFormatter","due","totalinvoiced","totalpaid","red","incomeAmountFormatter","inc","toatlExpenses","green","doneFormatter","editEvent","Checkbox","blue","checked","onChange","optimisticResponse","__typename","updateEvent","invoiceReceiptFormatter","valuePercent","position","bottom","right","fontWeight","taskIdFormatter","tsk","nameLinkFormat","setOpenItem","textAlign","deepPurple","taskNameFormatter","progressFormatter","parseInt","opTypeFormatter","actionTypeFormatter","calculateAmount","credit","debit","accountFormatter","account","customerAccountFormatter","customer","customerId","creditAcc","customerNameAr","customerName","getStartEndEventView","view","setHours","period","getDateDayFormat","setDate","dayno","getDay","minnus","plus","date","periodEnd","getAppStartEndPeriod","startPeriod","endPeriod","getLastDays","list","md","Math","ceil","getLastMonths","num","setMonth","compressEvents","events","times","ev","commitAppointmentChanges","added","changed","deleted","addEvent","removeEvent","department","employee","rest","alert","customerPhone","departmentId","departmentName","departmentNameAr","departmentColor","employeeId","employeeName","employeeNameAr","employeeColor","employeePhone","Number","console","log","timeToHourMinute","zone","getRowId","getColumns","words","no","tasktype","timedate","opTime","docNo","opDocNo","service","category","supplier","opAcc","kaidType","refNo","eventNo","progress","evQty","taskId","fromto","done","invo","desc","amountdebit","amountcredit","createdAt","check","commandComponents","add","onExecute","m","Fab","edit","IconButton","marginBottom","delete","confirm","Command","CommandButton","saveButton","deleteButton","cancelButton","CommandAppointment","AlertMsg","msg","top","Alert","left","severity","sleep","ms","Promise","resolve","setTimeout","showAlert","setAlrt","show","successAlert","dublicateAlert","errorAlert","errorAlertMsg","errorAccountAlert","errorDeleteAlert","messageAlert","messageShow","getReturnItem","mutation","addUserSchema","addUserResolver","editUserSchema","editUserResolver","passSchema","newPassword","newPassword2","passResolver","barcode","depositSchema","positive","disc","depositResolver","invoeSchema","invoiceResolver","PopupDialog","onClose","children","Dialog","PopupTextField","newtext","autoComplete","OptionItem","col","basename","showphone","daysoff","isred","paddingLeft","paddingRight","ccyFormat","OptionItemData","categoryName","categoryNameAr","brandName","brandNameAr","Loading","CircularProgress","UserBox","mobile","Fragment","AutoField","options","setSelectValue","setSelectError","selectError","refernce","openAdd","nolabel","noPlus","openOnFocus","autoSelect","setEmplvalue","resetRelated","disabled","Autocomplete","getOptionLabel","option","getOptionSelected","values","renderOption","newValue","marginInlineStart","input","renderInput","params","InputLabelProps","current","phoneNumber","disableFocusRipple","UserRoles","branches","handleChangeRoles","brch","manager","FormControlLabel","control","bs","FormGroup","minWidth","indeterminate","PopupEditing","editedRow","rowId","rows","addedRows","editingRowIds","rowChanges","stopEditRows","cancelAddedRows","cancelChangedRows","commitChangedRows","commitAddedRows","isNew","targetRow","rowIds","cloneElement","addAction","editAction","applyChanges","ColorPicker","setColor","setbg","disableAlpha","hex","drawerClasses","drawerPaper","drawerContainer","overflow","drawer","breakpoints","up","flexShrink","paddingBottom","light","hide","appBar","menuButton","flexGrow","AppDrawer","useHistory","useTheme","mobileOpen","handleDrawerToggle","container","document","body","Hidden","smUp","implementation","AppBar","Toolbar","aria-label","edge","clsx","Drawer","ModalProps","keepMounted","xsDown","InfoAmount","InfoIcon","InfoTitle","InfoBox","Paper","p","Grid","xs","Divider","alignSelf","groupSumCount","groupBy","array","key","count","uniqBy","sumBy","DateViewSwitcher","views","currentDateChange","FormControl","Select","tdays","week","DateNavigator","setStart","setEnd","currentViewNameChange","timeFormat","setTimeFormat","useEffect","stepForward","tomorrow","next3days","nextweek","nextmonth","nextyear","setFullYear","stepBackward","yestarday","last3days","lastweek","lastmonth","lastyear","moment","isSame","zIndex","locale","arLocale","enLocale","utils","DateFnsUtils","DatePicker","autoOk","inputVariant","format","rightArrowIcon","leftArrowIcon","SearchTable","Input","placeholder","AlertLocal","innerWidth","CalenderLocal","minDateMessage","maxDateMessage","KeyboardButtonProps","DateTimePicker","TextFieldLocal","mb","titleSt","grey","appBarButton","appBarButtonLang","ChartHeader","SalesDaysChart","dataKey","prim","ResponsiveContainer","AreaChart","syncId","CartesianGrid","strokeDasharray","vertical","XAxis","axisLine","tickLine","YAxis","mirror","tickFormatter","formatter","Legend","Area","stroke","fill","MonthsChart","ucolor","BarChart","Bar","DaysEvents","rdata","d","ds","stats","getThemeStatus","stackId","EventsDaysChart","pricolor","seccolor","PercentChart","pctComplete","completed","endPosition","round","Pie","innerRadius","outerRadius","startAngle","endAngle","startPosition","isAnimationActive","paddingAngle","cornerRadius","labelLine","animationBegin","animationDuration","Label","MonthsEmpChart","emp","en","InfoBoxDark","salesColor","eventColor","cf","useLazyQuery","getDepartments","getDeparts","depData","createDepartment","refetchQueries","query","addDepartment","updateDepartment","editDepartment","deleteDepartment","removeDepartment","refreshdepartment","refetch","PageLayout","refresh","bgcolor","isMobile","useMediaQuery","pt","elevation","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","translation","newInvoice","addInvoice","addCategory","addEmployee","product","services","products","serviceproduct","newService","serviceName","serviceNameAr","newCustomer","addBrand","newProducts","productName","newspecialproducts","serailNo","newCustomers","newSupplier","supplierName","brand","cost","used","underSale","save","cancel","close","nameEn","signup","edituser","adduser","deleteuser","grandtotal","profit","paid","cashbox","finance","partner","income","sales","appointments","past","today","coming","discounts","print","printsave","from","description","depdraw","depositbank","addpartner","drawpartner","customerpay","fromdate","todate","companyName","companyNameAr","fax","phone2","website","address","theaddress","unit","info","hresource","oresource","generalkaid","interval","addaction","receipts","notification","reminder","subject","messages","itemadded","itemexist","erroronadd","require","ar","getEmployees","getemparts","empData","createEmployee","updateEmployee","editEmployee","deleteEmployee","removeEmployee","refreshemployee","getServices","getsevs","itmData","createItem","addService","updateItem","editService","deleteItem","removeService","refreshservice","getCustomers","getCusts","custData","createCustomer","addCustomer","updateCustomer","editCustomer","deleteCustomer","removeCustomer","refreshcustomer","getLastNos","fetchPolicy","freshlastNos","invNopData","lastNosdata","numbers","lastNos","sequenceValue","getBranches","getbras","branchData","updateBranch","editBranch","Landing","useDepartments","useEmployees","getLandingChartData","freshChartData","chartData","salesDays","eventDays","todaySales","nextEventDays","todayEvents","salesTodayTotal","eventsTodayCount","salesMonths","eventMonths","salesMonth","salesMonthTotal","eventsMonthCount","raseeds","fname","dfname","efname","sfname","charts","daysEvents","daysSales","monthsEvents","monthsSales","todayEventsData","todaySalesData","daysSale","daysList","is","daydata","daysEvent","orderBy","spredstatus","mapValues","keyBy","mdata","monthsSale","departs","mname","sm","monthsEvent","refreshChartData","useLandingChart","innerHeight","resType","depType","PaperComponent","handle","PopupLayout","alrt","onlyclose","savetitle","preventclose","saving","bgc","aria-describedby","aria-labelledby","DialogContent","dividers","DialogActions","SelectLocalNoby","PopupDeprtment","setNewValue","setSaving","setDepType","reset","userId","apply","mutate","mutateName","nitem","onCloseForm","onError","message","target","multiline","rowsMax","InputProps","DaysOffView","daysoffChange","AutoFieldLocal","setPricevalue","nm","PopupEmployee","setDepartvalue","depError","setDepError","setDaysoff","setResType","emplRef","useRef","depart","closeModal","resetAll","PopupCustomer","PopupService","departError","setDepartError","departRef","emplError","setEmplError","emplslist","setEmplslist","filtered","depId","empId","empl","RadioGroup","Radio","styles","popper","AutoPopper","Popper","placement","ServiceItemForm","addItem","itemError","setItemError","itemvalue","setItemvalue","itemqty","setItemqty","itemprice","setItemprice","itemRef","itememp","itemdep","it","PopperComponent","onFocus","select","inputProps","focus","itemdata","itemtotal","itemtotalcost","CommandSmall","PopupItem","useServices","servId","serv","se","onFormClose","index","CurrencyFormatter","CurrencyTypeProvider","formatterComponent","NumberTypeProvider","TableComponent","withStyles","tableStriped","restProps","Table","ItemsTable","editItem","columns","tableColumnExtensions","commitChanges","maxHeight","minHeight","onCommitChanges","noDataCellComponent","columnExtensions","tableComponent","for","showDeleteCommand","showEditCommand","commandComponent","computed","tableColumns","TableEditColumn","COLUMN_TYPE","c","PriceTotal","PaymentSelect","ptype","setPtype","isCash","setIsCash","LoadingInline","contHeader","contItem","InvoicePrintA5","renderTableHeader","borderWidth","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","renderGrandTotal","borderRightWidth","borderRightColor","printData","renderItem","trimmed","borderLeftWidth","borderLeftColor","sn","renderEmptyItem","renderTableItems","len","empt","Array","newitems","invoice","this","company","src","logo","alt","objectFit","tel1","textTransform","letterSpacing","invoiceNo","PureComponent","getTasks","getfins","finData","bt","getCompany","getComp","compData","updateCompany","editCompany","comp1","refreshcompany","indexTheList","PopupInvoice","servicesproducts","loading","setLoading","useTasks","selectedDate","setSelectedDate","invNo","setInvNo","itemsList","setItemsList","setAccounts","setDiscount","totals","setTotals","useCompany","setCustvalue","setTaskvalue","openCust","setOpenCust","setNewtext","getOperationItems","getItems","itemsData","useLastNos","useCustomers","dept","ids","itemId","servlist","ser","itemsWqtyprice","categoryId","itemPrice","b","indx","handleDateChange","getOverallTotal","opId","cust","ts","paymentType","sum","litem","reduce","psum","costsum","itemsSum","itemsCostSum","costAmount","debitAcc","toString","isPaid","amountPaid","componentRef","handleReactPrint","useReactToPrint","documentTitle","removeAfterPrint","em","newArray","listwithindex","newList","splice","nextValue","getNewCode","parentvalue","range","codes","find","getValidCode","fc","getAccountsNumbers","accountSchema","noLabel","accountEditSchema","accountResolver","accountEditResolver","PopupAccount","setParentvalue","parentError","setParentError","parentRef","branchvalue","setBranchvalue","filteredParents","setFilteredParents","setRange","setCode","useBranches","rng","getAccountCodeRange","newcode","par","pra","canedit","closeForm","renderStatusIcon","StatusSelect","setStatus","onNewFieldChange","labelId","selected","SelectLocal","freqOptions","RRule","DAILY","WEEKLY","MONTHLY","YEARLY","byweekdayOptions","SA","SU","MO","TU","WE","TH","FR","actionOptions","timeRelationOptions","timeUnitOptions","manamentTabs","taskManamentTabs","PopupAction","setType","setTimeunit","setTimerelate","setQty","setBody","setAddreess","setSendtime","addresstitle","AppointForm","onFieldChange","appointmentData","itemName","itemNameAr","newrow","setRowFromAppointment","setStartDate","setEndDate","openAction","setOpenAction","setActionslist","setSelected","tasktitle","setTasktitle","getActions","loadActions","actionsData","eventId","tks","t","act","newlist","il","removeActionFromList","PopupAppointInvoice","appoint","onCloseAppoint","refresQuery","getInvoices","createInvoice","RenderToolTip","setVisible","viewonly","setIsEditor","isCalPOSEditor","empColor","departColor","desabledSave","Card","CardContent","gutterBottom","CardActions","AppointmentContent","flexWrap","FilterSelectCkeckBox","setValue","DepartemplSelect","EventsCalFilter","setMainResourceName","PopupLayoutBox","Main","visible","resourseData","setResourseData","setRows","getEvents","createEvent","deleteEvent","getCalEvents","evnData","eventsData","ap","startend","isMonth","curDate","firstDayOfWeek","currentAndFollowing","menuEditingTitle","menuDeletingTitle","commitButton","onCurrentViewNameChange","onCurrentDateChange","cellDuration","startDayHour","endDayHour","displayName","intervalCount","appointmentContentComponent","showCloseButton","showOpenButton","onVisibilityChange","contentComponent","overlayComponent","args","onHide","basicLayoutComponent","pr","commandButtonComponent","shadePreviousCells","MainCalendar","GenLanguage","setLang","GenTheme","setThemeId","pal","pallet","BackupRestoreDB","dialog","btype","setBtype","pathlist","backupDB","backup","restoreDB","restore","useBackup","hendleBackup","hendleRestore","filepath","path","TableContainer","TableBody","TableRow","TableCell","scope","calSchema","CalendarOptions","setCalendar","defaultValues","ImageOnlineUpload","url","setUrl","image","setImage","localimage","setLocalImage","fileInput","removeImage","URL","createObjectURL","opacity","img","files","click","uploadPhotoOnline","imageCompression","compressedImage","FormData","append","fetch","method","json","Company","setLogo","active","setActive","iconimage","setIconimage","iconurl","setIconurl","tel2","mob","appid","appversion","Names","setNames","initcalendar","Options","PopupPassword","editPassword","changePassword","PopupUser","block","setRoles","setBrch","blockUser","setBlockUser","openPass","setOpenPass","isBA","rols","keep","rol","sys","branchesToEmptyWithKeep","rolesObj","Users","getUsers","getUsrs","usrData","addUser","updateUser","editUser","deleteUser","removeUser","users","refreshuser","useUsers","noData","estimatedRowHeight","showSortingControls","rolesFormatter","showAddCommand","inputComponent","Departments","resTypes","Employees","useHResourses","UTC","checkedIcon","SelectMulti","nomulti","multiple","disableCloseOnSelect","disableListWrap","PopupAddMultiEvents","freq","setFreq","setWeekdays","byweekday","setByweekday","dtstart","setDtstart","until","setUntil","setInterval","setCount","bwd","wd","rule","str","txt","toText","getRruleData","fullwidth","PopupAppointmentCustomer","custError","setCustError","custRef","setRrule","openMulti","setOpenMulti","openInvoice","setOpenInvoice","setMinutes","custId","statNo","rRule","cu","stat","EventsCustomer","getObjectEvents","deleteEventById","removeEventById","FilterSelectMulti","limitTags","SalesFilter","setServicevalue","types","setTypes","emplvalueLocal","setEmplvalueLocal","servicevalueLocal","setServicevalueLocal","departvalueLocal","setDepartvalueLocal","custvalueLocal","setCustvalueLocal","taskvalueLocal","setTaskvalueLocal","typesvalueLocal","setTypesvalueLocal","scroll","setScroll","handleClose","descriptionElementRef","descriptionElement","scrollType","filtercounts","x","DialogTitle","ReportGroupBySwitcher","DateNavigatorReports","setSortDispatch","endDateChange","timeFormatEnd","setTimeFormatEnd","openEnd","setOpenEnd","minDate","TableComponentBase","TableComponent2","SalesReport","printRows","setPrintRows","setTotal","totalRows","setTotalRows","activecolumns","setActivecolumns","togglingEnabled","tableColumnVisibilityColumnExtensions","getMonthlyReport","getSummary","summaryData","setGroupbyDispatch","setGroupDispatch","slsData","updatedRows","forEach","getIds","sv","accPCode","serviceIds","departmentIds","employeeIds","customerIds","taskIds","fetchData","exporterRef","startExport","useCallback","exportGrid","inActiveColumns","ac","printrows","totalSummaryItems","grouping","groupSummaryItems","alignByColumn","groupOptions","cols","readyItems","totl","totalamount","reportname","now","co","filters","setItemType","defaultSorting","onSortingChange","srt","totalItems","groupItems","onHiddenColumnNamesChange","hcs","newcol","sumOf","countOf","showColumnsWhenGrouped","onSave","workbook","xlsx","writeBuffer","then","buffer","saveAs","Blob","InvoicesCustomer","loadInvoices","opData","updateInvoice","editInvoice","deleteInvoice","removeInvoice","getAccounts","getAccs","accData","createAccount","addAccount","updateAccount","editAccount","deleteAccount","removeAccount","filterd","refreshAccount","PopupReceipt","debaccounts","setDebaccounts","setDebitAcc","setCreditAcc","invoices","setInvoices","invoicevalue","setInvoicevalue","useAccounts","getInvoicesList","invoicesData","ndata","ca","filteredcredit","filtereddebits","ReceiptCustomer","getReceipts","loadFinances","financeData","createFinance","addFinance","updateFinance","editFinance","deleteFinance","removeFinance","PopupExpenses","cridaccounts","setCridaccounts","fullwidtth","ExpensesCustomer","getExpenses","loadExpenses","expensesData","createExpenses","addExpenses","updateExpenses","editExpenses","deleteExpenses","removeExpenses","PopupTaskAppointment","addEventsToList","eventlist","EventsTable","removeEventFromList","departmentFormatter","employeeFormatter","PopupTask","startrange","endrange","openEvent","setOpenEvent","evList","setEvList","evssum","evDone","isTaskNew","sorted","sortBy","orange","PopupTaskInvoice","TabPanel","other","hidden","useStyles","tabs","borderRight","divider","PopupTaskView","setRow","opened","getTaskItems","finalItems","autoNo","viewtotal","Tabs","orientation","Tab","TasksCustomer","openItem","loadTasks","tasksData","tsks","createTask","addTask","updateTask","editTask","deleteTaskById","removeTaskById","defaultHiddenColumnNames","PopupCustomerView","Customers","Services","Invoices","Accounts","br","CashTransfareSelect","PopupFinance","ot","Finance","getFinances","PopupAppointment","number","Tafgeet","PopupDepartmentView","PopupEmployeeView","Appointments","setDue","periodvalue","setPeriodvalue","setName","openTaskItem","setOpenTaskItem","openCustomerItem","setOpenCustomerItem","openEmployeeItem","setOpenEmployeeItem","openDepartmentItem","setOpenDepartmentItem","setEmployeeItem","setDepartmentItem","setCustomerItem","loadEvents","pointerEvents","taskIdLinkFormat","FilterSelect","FinanceReport","mainaccounts","balance","unshift","accNameAr","accName","accountIds","categoryIds","showInGroupFooter","initEventsReportContext","eventsReportReducer","EventsReportContext","getReportEvents","CustomerReport","initCalendarReportContext","calendarReportReducer","CalendarReportContext","Expenses","PurchaseReport","suppliers","categories","brands","supplierIds","setCatvalue","ExpensesReport","expensesAccounts","PopupResourses","Resourses","useOResourses","Receipt","KaidsTable","PopupFinanceAll","setAmount","setDesc","crdRef","maindesc","setMaindesc","getOperationKaids","ari","accCode","addItemToList","resetForm","FinanceAll","getGeneralFinances","createGeneralFinance","updateGeneralFinance","deleteGeneralFinance","TasksContext","ViewSwitcher","onViewModeChange","onViewListChange","isChecked","ViewMode","Day","Week","Month","defaultChecked","PopupGantt","setView","setIsChecked","columnWidth","newrows","viewMode","listCellWidth","ganttHeight","barProgressColor","barBackgroundColor","barProgressSelectedColor","todayColor","Tasks","openGantt","setOpenGantt","initTasksContext","tasksReducer","DocumentsReportContext","DocumentsReport","getReportDocuments","getTypesValue","initDocumentsReportContext","documentsReportReducer","ServicesReportContext","ServicesReport","getReportServices","initServicesReportContext","servicesReportReducer","ManageEmployees","ManageDepartments","EmployeesAppoints","resourceName","setMainResourceNameDispatch","EmployeesCalendar","setstate","emps","Content","getSuppliers","createSupplier","addSupplier","updateSupplier","editSupplier","deleteSupplier","removeSupplier","refreshsupplier","useSuppliers","useReducer","calendarStore","calendarDispatch","eventsStore","eventsDispatch","documentsStore","documentsDispatch","servicesStore","servicesDispatch","tasksStore","tasksDispatch","salesStore","salesDispatch","salesReportStore","salesReportDispatch","purchaseReportStore","purchaseReportDispatch","eventsReportStore","eventsReportDispatch","financeStore","financeDispatch","receiptStore","receiptDispatch","expensesStore","expensesDispatch","expensesReportStore","expensesReportDispatch","customerReportStore","customerReportDispatch","calendarReportStore","calendarReportDispatch","barnch","mnu","submenus","filterMenu","accs","basic","purchase","general","pl","getparentAccounts","filteredAccounts","exact","Provider","Layout","config","jss","create","plugins","jssPreset","rtl","App","storeState","themeData","paletteData","createMuiTheme","createThem","transD","setTranslate","useTranslate","ApolloProvider","StylesProvider","ThemeProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","response","contentType","get","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0b9ebf6b.chunk.js","sourcesContent":["export const themeEnData = {\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const themeArData = {\r\n  direction: \"rtl\",\r\n  typography: {\r\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n    fontSize: 13,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiFilledInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormControl: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFormHelperText: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiIconButton: {\r\n      size: \"small\",\r\n    },\r\n    MuiInputBase: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiInputLabel: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiListItem: {\r\n      dense: true,\r\n    },\r\n    MuiOutlinedInput: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiFab: {\r\n      size: \"small\",\r\n    },\r\n    MuiTable: {\r\n      size: \"small\",\r\n    },\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n    },\r\n    MuiToolbar: {\r\n      variant: \"dense\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      sizeSmall: {\r\n        // Adjust spacing to reach minimal touch target hitbox\r\n        marginLeft: 4,\r\n        marginRight: 4,\r\n        padding: 12,\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const palettes = [\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#252B3B\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#be0c5f\",\r\n      },\r\n      secondary: {\r\n        main: \"#ce93d8\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#472D30\",\r\n      },\r\n      secondary: {\r\n        main: \"#929487\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#0068B8\",\r\n      },\r\n      secondary: {\r\n        main: \"#FFC107\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    palette: {\r\n      primary: {\r\n        main: \"#874cbe\",\r\n      },\r\n      secondary: {\r\n        main: \"#59c783\",\r\n      },\r\n      background: {\r\n        default: \"#F8F5F5\",\r\n      },\r\n    },\r\n  },\r\n];\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const loginClasses = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginTop: theme.spacing(8),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport const layoutClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport const categoryClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"45vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const appointClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      width: \"85vh\",\r\n      height: \"80vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardClasses = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport const daySwitchClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const invoiceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"120vh\",\r\n      width: \"140vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\nexport const eventsFormClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"80vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const itemClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"20vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    smallFont: {\r\n      fontSize: 12,\r\n    },\r\n  })\r\n);\r\n\r\nexport const departmentClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"55vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const employeeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"65vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const financeClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"75vh\",\r\n      width: \"75vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const serviceClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\nexport const userClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"80vh\",\r\n      width: \"70vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n\r\nexport const productClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"70vh\",\r\n      width: \"90vh\",\r\n    },\r\n    margin: {\r\n      marginTop: 18,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\nexport const simpleOrderClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popupadd: {\r\n      height: \"65vh\",\r\n      width: \"100vh\",\r\n      \"overflow-y\": \"overlay\",\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"80ch\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n  })\r\n);\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nconst stringstore = localStorage.getItem(\"store\");\r\nconst store = stringstore ? JSON.parse(stringstore) : null;\r\n\r\nconst token = store ? store.token : null;\r\n\r\n// local\r\n// uri: \"http://jadwal-server:4000/graphql\",\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.GRAPHQL_URI,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Jadwal ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDepartments($isRTL: Boolean) {\r\n    getDepartments(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        depType\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        desc\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCategories($isRTL: Boolean) {\r\n    getCategories(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        catType\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBrands($isRTL: Boolean) {\r\n    getBrands(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGroups($isRTL: Boolean) {\r\n    getGroups(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        userId\r\n        tasks\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEmployees($isRTL: Boolean, $resTypes: [Int]) {\r\n    getEmployees(isRTL: $isRTL, resTypes: $resTypes) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        color\r\n        resType\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        phone\r\n        email\r\n        comPercent\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        daysoff\r\n        info\r\n        userId\r\n\r\n        documentNo\r\n        startDate\r\n        endDate\r\n        cost\r\n        model\r\n        type\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCustomers($isRTL: Boolean) {\r\n    getCustomers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n        mobile\r\n        address\r\n        email\r\n\r\n        amount\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        progress\r\n        evQty\r\n        evDone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getServices($isRTL: Boolean) {\r\n    getServices(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        price\r\n        unit\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getItems($isRTL: Boolean) {\r\n    getItems(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        qty\r\n        cost\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEvents(\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n    $taskId: Int\r\n    $due: Boolean\r\n  ) {\r\n    getEvents(\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n      taskId: $taskId\r\n      due: $due\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getProducts($isRTL: Boolean) {\r\n    getProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getNoStockProducts($isRTL: Boolean) {\r\n    getNoStockProducts(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        itemType\r\n        barcode\r\n\r\n        name\r\n        nameAr\r\n        desc\r\n        cost\r\n        qty\r\n        price\r\n        photo\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getUsers {\r\n    getUsers {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoices(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoices(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLastNos {\r\n    getLastNos {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getBranches {\r\n    getBranches {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        basename\r\n        systems\r\n        users\r\n\r\n        name\r\n        nameAr\r\n        logo\r\n        tel1\r\n        tel2\r\n        fax\r\n        mob\r\n        email\r\n        website\r\n        address\r\n        poBox\r\n        CR\r\n        city\r\n        country\r\n        location {\r\n          lat\r\n          lon\r\n        }\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccounts {\r\n    getAccounts {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n\r\n        branch\r\n        code\r\n        name\r\n        nameAr\r\n        parent\r\n        parentAr\r\n        parentcode\r\n        accType\r\n        balance\r\n        canedit\r\n        closedAcc\r\n        note\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinances($start: Date, $end: Date, $search: String) {\r\n    getFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getGeneralFinances($start: Date, $end: Date, $search: String) {\r\n    getGeneralFinances(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportEvents(\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportEvents(\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getRasseds {\r\n    getRasseds {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getCompany {\r\n    getCompany {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSalesReport(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getSalesReport(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n        amount\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getEventsInfo {\r\n    getEventsInfo {\r\n      ok\r\n      error\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getChartsData(\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getChartsData(\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationItems($opId: String) {\r\n    getOperationItems(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthlyReport(\r\n    $accPCode: Int\r\n    $itemType: Int\r\n    $accountIds: [String]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getMonthlyReport(\r\n      accPCode: $accPCode\r\n      itemType: $itemType\r\n      accountIds: $accountIds\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        eventId\r\n        taskId\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n        desc\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getFinanceReport(\r\n    $accCode: Int\r\n    $accPCode: Int\r\n    $opaccCode: Int\r\n    $opaccPCode: Int\r\n    $itemId: String\r\n    $categoryId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $supplierId: String\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getFinanceReport(\r\n      accCode: $accCode\r\n      accPCode: $accPCode\r\n      opaccCode: $opaccCode\r\n      opaccPCode: $opaccPCode\r\n      itemId: $itemId\r\n      categoryId: $categoryId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      supplierId: $supplierId\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        accCode\r\n        accName\r\n        accNameAr\r\n\r\n        opaccCode\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n        accType\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getLandingChartData {\r\n    getLandingChartData {\r\n      ok\r\n      error\r\n      message\r\n      data\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSimpleChartsData($start: Date, $end: Date) {\r\n    getSimpleChartsData(start: $start, end: $end) {\r\n      ok\r\n      accounts\r\n      events {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n      sales {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n      }\r\n      error\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodaySales {\r\n    getTodaySales {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n\r\n        refNo\r\n        refType\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        qty\r\n        itemPrice\r\n\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        accName\r\n        accNameAr\r\n        accType\r\n        kaidType\r\n\r\n        opaccName\r\n        opaccNameAr\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTodayEvents {\r\n    getTodayEvents {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        reminder\r\n        rRule\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysEvents($qty: Int) {\r\n    getDaysEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDaysSales($qty: Int) {\r\n    getDaysSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsSales($qty: Int) {\r\n    getMonthsSales(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getMonthsEvents($qty: Int) {\r\n    getMonthsEvents(qty: $qty) {\r\n      ok\r\n      error\r\n      message\r\n      data {\r\n        _id\r\n        amount\r\n        count\r\n        date\r\n        day\r\n        month\r\n        year\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmenColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        statusAr\r\n        statusEn\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getAccountsRaseed {\r\n    getAccountsRaseed {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getSuppliers($isRTL: Boolean) {\r\n    getSuppliers(isRTL: $isRTL) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        name\r\n        nameAr\r\n        phone\r\n\r\n        email\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getPurchaseInvoices($start: Date, $end: Date, $search: String) {\r\n    getPurchaseInvoices(start: $start, end: $end, search: $search) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getExpenses(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getExpenses(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getActions($type: Int, $active: Boolean, $eventId: Int, $taskId: Int) {\r\n    getActions(\r\n      type: $type\r\n      active: $active\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        indx\r\n        type\r\n        active\r\n        sendtime\r\n        phone\r\n        email\r\n        userId\r\n        title\r\n        body\r\n        eventId\r\n        taskId\r\n        data\r\n\r\n        timeunit\r\n        timerelate\r\n        qty\r\n        address\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReminders {\r\n    getReminders {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createDepartment(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    createDepartment(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCategory(\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    createCategory(\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCategory($_id: String) {\r\n    deleteCategory(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCategory(\r\n    $_id: String\r\n    $branch: String\r\n    $catType: Int\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateCategory(\r\n      _id: $_id\r\n      branch: $branch\r\n      catType: $catType\r\n      name: $name\r\n      nameAr: $nameAr\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAction(\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    createAction(\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAction($_id: String) {\r\n    deleteAction(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAction(\r\n    $_id: String\r\n    $branch: String\r\n    $type: Int\r\n    $active: Boolean\r\n    $sendtime: Date\r\n    $phone: String\r\n    $email: String\r\n    $userId: String\r\n    $title: String\r\n    $body: String\r\n    $eventId: Int\r\n    $taskId: Int\r\n    $data: String\r\n    $timeunit: String\r\n    $timerelate: String\r\n    $qty: Int\r\n    $address: String\r\n  ) {\r\n    updateAction(\r\n      _id: $_id\r\n      branch: $branch\r\n      type: $type\r\n      active: $active\r\n      sendtime: $sendtime\r\n      phone: $phone\r\n      email: $email\r\n      userId: $userId\r\n      title: $title\r\n      body: $body\r\n      eventId: $eventId\r\n      taskId: $taskId\r\n      data: $data\r\n      timeunit: $timeunit\r\n      timerelate: $timerelate\r\n      qty: $qty\r\n      address: $address\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createBrand($branch: String, $name: String, $nameAr: String) {\r\n    createBrand(branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteBrand($_id: String) {\r\n    deleteBrand(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBrand(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n  ) {\r\n    updateBrand(_id: $_id, branch: $branch, name: $name, nameAr: $nameAr) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGroup(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    createGroup(branch: $branch, name: $name, nameAr: $nameAr, tasks: $tasks) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGroup($_id: String) {\r\n    deleteGroup(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGroup(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $tasks: [Int]\r\n  ) {\r\n    updateGroup(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tasks: $tasks\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteDepartment($_id: String) {\r\n    deleteDepartment(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateDepartment(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $depType: Int\r\n    $desc: String\r\n    $color: String\r\n  ) {\r\n    updateDepartment(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      depType: $depType\r\n      desc: $desc\r\n      color: $color\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEmployee(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    createEmployee(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEmployee($_id: String) {\r\n    deleteEmployee(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEmployee(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $color: String\r\n    $resType: Int\r\n    $department: DepartmentInput\r\n    $comPercent: Float\r\n    $phone: String\r\n    $email: String\r\n    $daysoff: String\r\n    $info: String\r\n    $documentNo: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $cost: Float\r\n    $model: String\r\n    $type: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      color: $color\r\n      resType: $resType\r\n      department: $department\r\n      comPercent: $comPercent\r\n      phone: $phone\r\n      email: $email\r\n      daysoff: $daysoff\r\n      info: $info\r\n      documentNo: $documentNo\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      cost: $cost\r\n      model: $model\r\n      type: $type\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createCustomer(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createCustomer(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteCustomer($_id: String) {\r\n    deleteCustomer(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCustomer(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $mobile: String\r\n    $email: String\r\n    $address: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateCustomer(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      mobile: $mobile\r\n      email: $email\r\n      address: $address\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createItem(\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    createItem(\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteItem($_id: String) {\r\n    deleteItem(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateItem(\r\n    $_id: String\r\n    $branch: String\r\n    $itemType: Int\r\n    $barcode: String\r\n    $name: String\r\n    $nameAr: String\r\n    $desc: String\r\n    $photo: String\r\n    $cost: Float\r\n    $price: Float\r\n    $unit: String\r\n    $category: CategoryInput\r\n    $brand: BrandInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n  ) {\r\n    updateItem(\r\n      _id: $_id\r\n      branch: $branch\r\n      itemType: $itemType\r\n      barcode: $barcode\r\n      name: $name\r\n      nameAr: $nameAr\r\n      desc: $desc\r\n      photo: $photo\r\n      cost: $cost\r\n      price: $price\r\n      unit: $unit\r\n      category: $category\r\n      brand: $brand\r\n      employee: $employee\r\n      department: $department\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createEvent(\r\n    $branch: String\r\n    $taskId: Int\r\n    $title: String\r\n    $prefix: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createEvent(\r\n      branch: $branch\r\n      taskId: $taskId\r\n      title: $title\r\n      prefix: $prefix\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEvent($id: Int) {\r\n    deleteEvent(id: $id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateEvent(\r\n    $branch: String\r\n    $id: Int\r\n    $taskId: Int\r\n    $title: String\r\n    $docNo: String\r\n    $rRule: String\r\n    $prefix: String\r\n    $startDate: Date\r\n    $endDate: Date\r\n    $allDay: Boolean\r\n    $reminder: Boolean\r\n    $priority: Int\r\n    $amount: Float\r\n    $status: Int\r\n    $items: String\r\n    $actions: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateEvent(\r\n      branch: $branch\r\n      id: $id\r\n      taskId: $taskId\r\n      title: $title\r\n      docNo: $docNo\r\n      rRule: $rRule\r\n      prefix: $prefix\r\n      startDate: $startDate\r\n      endDate: $endDate\r\n      allDay: $allDay\r\n      reminder: $reminder\r\n      priority: $priority\r\n      amount: $amount\r\n      status: $status\r\n      items: $items\r\n      actions: $actions\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      id\r\n      taskId\r\n      branch\r\n      title\r\n      startDate\r\n      endDate\r\n      allDay\r\n      rRule\r\n      exDate\r\n      allowDrag\r\n\r\n      autoNo\r\n      docNo\r\n      priority\r\n      amount\r\n      status\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      itemId\r\n      itemName\r\n      itemNameAr\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $eventNo: String\r\n  ) {\r\n    createInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteInvoice($_id: String) {\r\n    deleteInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $taskId: Int\r\n    $eventId: Int\r\n    $userId: String\r\n  ) {\r\n    updateInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      taskId: $taskId\r\n      eventId: $eventId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    createFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      refNo: $refNo\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteFinance($_id: String) {\r\n    deleteFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $refNo: String\r\n    $userId: String\r\n  ) {\r\n    updateFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      refNo: $refNo\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createGeneralFinance(\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createGeneralFinance(\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteGeneralFinance($_id: String) {\r\n    deleteGeneralFinance(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateGeneralFinance(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $opType: Int\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $items: String\r\n    $customer: CustomerInput\r\n    $employee: EmployeeInput\r\n    $department: DepartmentInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateGeneralFinance(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      opType: $opType\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      items: $items\r\n      customer: $customer\r\n      employee: $employee\r\n      department: $department\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createAccount(\r\n    $code: Int\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $canedit: Boolean\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    createAccount(\r\n      code: $code\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      canedit: $canedit\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteAccount($_id: String) {\r\n    deleteAccount(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateAccount(\r\n    $_id: String\r\n    $branch: String\r\n    $code: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $parentcode: Int\r\n    $parent: String\r\n    $parentAr: String\r\n    $accType: Int\r\n    $balance: Float\r\n    $closedAcc: Int\r\n    $note: String\r\n  ) {\r\n    updateAccount(\r\n      _id: $_id\r\n      branch: $branch\r\n      code: $code\r\n      name: $name\r\n      nameAr: $nameAr\r\n      parentcode: $parentcode\r\n      parent: $parent\r\n      parentAr: $parentAr\r\n      accType: $accType\r\n      balance: $balance\r\n      closedAcc: $closedAcc\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation login($username: String, $password: String) {\r\n    login(username: $username, password: $password) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        isSuperAdmin\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation signup(\r\n    $branch: String\r\n    $username: String\r\n    $password: String\r\n    $phone: String\r\n    $roles: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    signup(\r\n      branch: $branch\r\n      username: $username\r\n      password: $password\r\n      phone: $phone\r\n      roles: $roles\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data {\r\n        _id\r\n        branch\r\n        type\r\n        username\r\n        name\r\n        email\r\n        phone\r\n        avatar\r\n        address\r\n        color\r\n        lang\r\n        tel\r\n        fax\r\n        mob\r\n\r\n        roles\r\n\r\n        isDepartAdmin\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeePhone\r\n        employeeColor\r\n\r\n        block\r\n\r\n        userId\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      accessToken\r\n      refreshToken\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateUser(\r\n    $_id: String\r\n    $branch: String\r\n    $roles: String\r\n    $phone: String\r\n    $name: String\r\n    $email: String\r\n    $avatar: String\r\n    $department: DepartmentInput\r\n    $isDepartAdmin: Boolean\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateUser(\r\n      _id: $_id\r\n      branch: $branch\r\n      roles: $roles\r\n      phone: $phone\r\n      name: $name\r\n      email: $email\r\n      avatar: $avatar\r\n      department: $department\r\n      isDepartAdmin: $isDepartAdmin\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteUser($_id: String) {\r\n    deleteUser(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateBranch(\r\n    $_id: String\r\n    $basename: String\r\n    $systems: [String]\r\n    $users: Int\r\n    $name: String\r\n    $nameAr: String\r\n    $logo: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $poBox: String\r\n    $CR: String\r\n    $city: String\r\n    $country: String\r\n    $location: LocationInput\r\n    $note: String\r\n  ) {\r\n    updateBranch(\r\n      _id: $_id\r\n      basename: $basename\r\n      systems: $systems\r\n      users: $users\r\n      name: $name\r\n      nameAr: $nameAr\r\n      logo: $logo\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      poBox: $poBox\r\n      CR: $CR\r\n      city: $city\r\n      country: $country\r\n      location: $location\r\n      note: $note\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation backupDB {\r\n    backupDB {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation restoreDB($path: String) {\r\n    restoreDB(path: $path) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateCompany(\r\n    $name: String\r\n    $nameAr: String\r\n    $tel1: String\r\n    $tel2: String\r\n    $fax: String\r\n    $mob: String\r\n    $email: String\r\n    $website: String\r\n    $address: String\r\n    $logo: String\r\n  ) {\r\n    updateCompany(\r\n      name: $name\r\n      nameAr: $nameAr\r\n      tel1: $tel1\r\n      tel2: $tel2\r\n      fax: $fax\r\n      mob: $mob\r\n      email: $email\r\n      website: $website\r\n      address: $address\r\n      logo: $logo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation runClosing {\r\n    runClosing {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteEventById($_id: String) {\r\n    deleteEventById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createSupplier(\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createSupplier(\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createPurchaseInvoice(\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n    $eventId: String\r\n    $eventNo: String\r\n  ) {\r\n    createPurchaseInvoice(\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n      eventId: $eventId\r\n      eventNo: $eventNo\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updatePurchaseInvoice(\r\n    $_id: String\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $time: Date\r\n    $desc: String\r\n    $supplier: SupplierInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $accounts: [AccountInput]\r\n    $items: String\r\n    $costAmount: Float\r\n    $total: Float\r\n    $discount: Float\r\n    $amount: Float\r\n    $profit: Float\r\n    $paymentType: String\r\n    $inhand: Float\r\n    $change: Float\r\n    $amountPaid: Float\r\n    $isPaid: Boolean\r\n    $isCash: Boolean\r\n    $opId: String\r\n    $userId: String\r\n  ) {\r\n    updatePurchaseInvoice(\r\n      _id: $_id\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      time: $time\r\n      desc: $desc\r\n      supplier: $supplier\r\n      department: $department\r\n      employee: $employee\r\n      accounts: $accounts\r\n      items: $items\r\n      costAmount: $costAmount\r\n      total: $total\r\n      discount: $discount\r\n      amount: $amount\r\n      profit: $profit\r\n      paymentType: $paymentType\r\n      inhand: $inhand\r\n      change: $change\r\n      amountPaid: $amountPaid\r\n      isPaid: $isPaid\r\n      isCash: $isCash\r\n      opId: $opId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deletePurchaseInvoice($_id: String) {\r\n    deletePurchaseInvoice(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateSupplier(\r\n    $_id: String\r\n    $branch: String\r\n    $name: String\r\n    $nameAr: String\r\n    $phone: String\r\n    $email: String\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateSupplier(\r\n      _id: $_id\r\n      branch: $branch\r\n      name: $name\r\n      nameAr: $nameAr\r\n      phone: $phone\r\n      email: $email\r\n      employee: $employee\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteSupplier($_id: String) {\r\n    deleteSupplier(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createExpenses(\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    createExpenses(\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateExpenses(\r\n    $_id: String\r\n    $time: Date\r\n    $branch: String\r\n    $docNo: String\r\n    $prefix: String\r\n    $title: String\r\n    $desc: String\r\n    $amount: Float\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n    $debitAcc: Int\r\n    $creditAcc: Int\r\n    $taskId: Int\r\n    $userId: String\r\n  ) {\r\n    updateExpenses(\r\n      _id: $_id\r\n      time: $time\r\n      branch: $branch\r\n      docNo: $docNo\r\n      prefix: $prefix\r\n      title: $title\r\n      desc: $desc\r\n      amount: $amount\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n      debitAcc: $debitAcc\r\n      creditAcc: $creditAcc\r\n      taskId: $taskId\r\n      userId: $userId\r\n    ) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteExpenses($_id: String) {\r\n    deleteExpenses(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation changePassword(\r\n    $_id: String\r\n    $password: String\r\n    $newPassword: String\r\n  ) {\r\n    changePassword(_id: $_id, password: $password, newPassword: $newPassword) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation blockUser($_id: String, $block: Boolean) {\r\n    blockUser(_id: $_id, block: $block) {\r\n      ok\r\n      message\r\n      data\r\n      error\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const setStoreItem = (name: string, value: any) => {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (value === null) {\r\n    localStorage.removeItem(name);\r\n    return true;\r\n  }\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\nexport const getStoreItem = (name: string, defaultValue?: any) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  const value = localStorage.getItem(name);\r\n  if (value) {\r\n    return JSON.parse(value);\r\n  } else {\r\n    if (defaultValue) {\r\n      const setdefaultValue = setStoreItem(name, defaultValue);\r\n      if (setdefaultValue === true) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","export const initStore = {\r\n  lang: \"ar\",\r\n  themeId: \"0\",\r\n  user: null,\r\n  token: null,\r\n  calendar: {\r\n    duration: 30,\r\n    start: 8.5,\r\n    end: 21.5,\r\n  },\r\n  network: null, // web / local\r\n  weburi: null, // jadwal.webredirect.org\r\n  names: {\r\n    tasks: \"المهام\",\r\n    customers: \"العملاء\",\r\n    employees: \"الموظفين\",\r\n    departments: \"الأقسام\",\r\n  },\r\n  localuri: \"jadwal-server:4000\", // jadwal-server\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { StoreTypes } from \"../types\";\r\n\r\nexport const storeReducer = (state: StoreTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setLang\":\r\n      return { ...state, lang: action.payload };\r\n    case \"setCalendar\":\r\n      return { ...state, calendar: action.payload };\r\n    case \"setThemeId\":\r\n      return { ...state, themeId: action.payload };\r\n    case \"setNetwork\":\r\n      return { ...state, network: action.payload };\r\n    case \"setWeburi\":\r\n      return { ...state, weburi: action.payload };\r\n    case \"setLocaluri\":\r\n      return { ...state, localuri: action.payload };\r\n    case \"setNames\":\r\n      return { ...state, names: action.payload };\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      };\r\n    case \"logout\":\r\n      return { ...state, user: null, token: null };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const systems = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const roles = {\r\n  view: \"view\",\r\n  add: \"add\",\r\n  edit: \"edit\",\r\n  delete: \"delete\",\r\n  report: \"report\",\r\n};\r\n\r\n// export const user: any = {\r\n//   branch: 'brnach1',\r\n//   isSuperAdmin: false,\r\n//   roles: {\r\n//     brnach1: {\r\n//       admin: false,\r\n//       pos: {\r\n//         admin: false,\r\n//         view: true,\r\n//       },\r\n//       cal: {\r\n//         view: false,\r\n//       },\r\n//       exp: {\r\n//         view: false,\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const branchesToInitRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    rol[branch.basename].admin = false;\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n      rol[branch.basename][sys].admin = false;\r\n      rol[branch.basename][sys].delete = false;\r\n      rol[branch.basename][sys].view = false;\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyRoles = (branches: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    rol[branch.basename] = {};\r\n    branch.systems.map((sys: any) => {\r\n      rol[branch.basename][sys] = {};\r\n    });\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyWithKeep = (branches: any, keep: any) => {\r\n  const rol = {};\r\n  if (branches.length === 0) return rol;\r\n  branches.map((branch: any) => {\r\n    if (branch.basename === keep) {\r\n      rol[branch.basename] = {};\r\n      branch.systems.map((sys: any) => {\r\n        rol[branch.basename][sys] = {};\r\n      });\r\n    }\r\n  });\r\n  return rol;\r\n};\r\nexport const branchesToEmptyBranchRoles = (branch: any) => {\r\n  const rol = {};\r\n  rol[branch.basename] = {};\r\n  branch.systems.map((sys: any) => {\r\n    rol[branch.basename][sys] = {};\r\n  });\r\n\r\n  return rol;\r\n};\r\n\r\nexport const RolesToBrSy = (rols: any) => {\r\n  let syss: any = [];\r\n  const branches = Object.keys(rols);\r\n  branches.map((branch: any) => {\r\n    const asyss = Object.keys(rols[branch]);\r\n    syss = asyss.filter((it: any) => it !== \"admin\");\r\n  });\r\n  return { branches, systems: syss };\r\n};\r\n\r\nexport const removeFalsy = (obj: any) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((prop) => {\r\n    if (obj[prop]) {\r\n      newObj[prop] = obj[prop];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n\r\n// ==========================================\r\n\r\nexport const isSuperAdmin = (user: any) => {\r\n  return user?.isSuperAdmin;\r\n};\r\n\r\nexport const isBranchAdmin = (user: any) => {\r\n  return user?.isSuperAdmin || user?.roles?.[user?.branch]?.admin;\r\n};\r\n\r\nexport const isSystemAdmin = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user.branch]?.[system]?.admin\r\n  );\r\n};\r\n\r\nexport const isReproter = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report]\r\n  );\r\n};\r\n\r\nexport const isEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\nexport const isSystemEditor = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit]\r\n  );\r\n};\r\n\r\nexport const isAdder = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add]\r\n  );\r\n};\r\n\r\nexport const isViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\nexport const isSystemViewer = (user: any, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.report] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.edit] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.add] ||\r\n    user?.roles?.[user?.branch]?.[system]?.[roles.view]\r\n  );\r\n};\r\n\r\n// special\r\nexport const isSpesificBranchAdmin = (user: any, branch: string) => {\r\n  return user?.isSuperAdmin || user?.roles?.[branch]?.admin;\r\n};\r\n\r\n// special\r\nexport const hasRole = (user: any, role: string, system: string) => {\r\n  return (\r\n    user?.isSuperAdmin ||\r\n    user?.roles?.[user?.branch]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.admin ||\r\n    user?.roles?.[user?.branch]?.[system]?.[role]\r\n  );\r\n};\r\n\r\nexport const menuRoles = {\r\n  superAdmin: \"superAdmin\",\r\n  branchAdmin: \"branchAdmin\",\r\n  calAdmin: \"calAdmin\",\r\n  posAdmin: \"posAdmin\",\r\n};\r\n\r\nexport const applyRole = (role: string, user: any) => {\r\n  switch (role) {\r\n    case menuRoles.superAdmin:\r\n      return isSuperAdmin(user);\r\n    case menuRoles.branchAdmin:\r\n      return isBranchAdmin(user);\r\n    case menuRoles.calAdmin:\r\n      return isSystemAdmin(user, systems.cal);\r\n    case menuRoles.posAdmin:\r\n      return isSystemAdmin(user, systems.pos);\r\n\r\n    default:\r\n      return () => null;\r\n  }\r\n};\r\n","import { menuRoles } from \"../common/roles\";\r\nimport { getStoreItem } from \"../store\";\r\nconst store = getStoreItem(\"store\");\r\nconst { names } = store;\r\nexport const mainmenu = [\r\n  {\r\n    id: 0,\r\n    name: \"home\",\r\n    uri: \"/\",\r\n    titleAr: \"الرئيسية\",\r\n    titleEn: \"Home\",\r\n    icon: \"home\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 0.5,\r\n    name: \"calendar\",\r\n    uri: \"calendar\",\r\n    titleAr: \"التقويم\",\r\n    titleEn: \"Calendar\",\r\n    icon: \"calendar\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"appointments\",\r\n    uri: \"appointments\",\r\n    titleAr: \"المواعيد\",\r\n    titleEn: \"Appointments\",\r\n    icon: \"event\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.5,\r\n    name: \"tasks\",\r\n    uri: \"tasks\",\r\n    titleAr: names?.tasks ? names?.tasks : \"المهام\",\r\n    titleEn: names?.tasks ? names?.tasks : \"Operations\",\r\n    icon: \"work\",\r\n    req: \"cal\",\r\n    dep: \"pos\",\r\n  },\r\n  {\r\n    id: 1.7,\r\n    name: \"customers\",\r\n    uri: \"customers\",\r\n    titleAr: names?.customers ? names?.customers : \"العملاء\",\r\n    titleEn: names?.customers ? names?.customers : \"Customers\",\r\n    icon: \"business\",\r\n    req: \"pos\",\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.8,\r\n    name: \"manageemployees\",\r\n    uri: \"manageemployees\",\r\n    titleAr: names?.employees ? names?.employees : \"الموظفين\",\r\n    titleEn: names?.employees ? names?.employees : \"Employees\",\r\n    icon: \"group\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  {\r\n    id: 1.9,\r\n    name: \"managedepartments\",\r\n    uri: \"managedepartments\",\r\n    titleAr: names?.departments ? names?.departments : \"الأقسام\",\r\n    titleEn: names?.departments ? names?.departments : \"Departments\",\r\n    icon: \"depart\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: \"finance\",\r\n    uri: \"finance\",\r\n    titleAr: \"الوثائق\",\r\n    titleEn: \"Finance\",\r\n    icon: \"sales\",\r\n    req: \"pos\",\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 41,\r\n        name: \"sales\",\r\n        uri: \"sales\",\r\n        titleAr: \"ادارة الفواتير\",\r\n        titleEn: \"Sales\",\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      // {\r\n      //   id: 42,\r\n      //   name: \"cash\",\r\n      //   uri: \"cash\",\r\n      //   titleAr: \"ادارة النقدية\",\r\n      //   titleEn: \"Cash\",\r\n      //   icon: \"finance\",\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      {\r\n        id: 43,\r\n        name: \"receipts\",\r\n        uri: \"receipts\",\r\n        titleAr: \"ادارة المقبوضات\",\r\n        titleEn: \"Receipts\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 44,\r\n        name: \"expenses\",\r\n        uri: \"expenses\",\r\n        titleAr: \"ادارة المصاريف\",\r\n        titleEn: \"Expenses\",\r\n        icon: \"expenses\",\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 45,\r\n        name: \"financeall\",\r\n        uri: \"financeall\",\r\n        titleAr: \"ادارة القيود العامة\",\r\n        titleEn: \"General Accounting\",\r\n        icon: \"finance\",\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: \"adds\",\r\n    uri: \"adds\",\r\n    titleAr: \"الاضافات\",\r\n    titleEn: \"Additions\",\r\n    icon: \"add\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 62,\r\n        name: \"departments\",\r\n        uri: \"departments\",\r\n        titleAr: names?.departments ? names?.departments : \"الأقسام\",\r\n        titleEn: names?.departments ? names?.departments : \"Departments\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 63,\r\n        name: \"employees\",\r\n        uri: \"employees\",\r\n        titleAr: names?.employees ? names?.employees : \"الموظفين\",\r\n        titleEn: names?.employees ? names?.employees : \"Employees\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 64,\r\n        name: \"resourses\",\r\n        uri: \"resourses\",\r\n        titleAr: \"الموارد\",\r\n        titleEn: \"Resourses\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 65,\r\n        name: \"services\",\r\n        uri: \"services\",\r\n        titleAr: \"الخدمات\",\r\n        titleEn: \"Services\",\r\n        mainId: 6,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n\r\n      // {\r\n      //   id: 65,\r\n      //   name: \"categories\",\r\n      //   uri: \"categories\",\r\n      //   titleAr: \"التصنيفات\",\r\n      //   titleEn: \"Categories\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 66,\r\n      //   name: \"brands\",\r\n      //   uri: \"brands\",\r\n      //   titleAr: \"البراندات\",\r\n      //   titleEn: \"Brands\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n      // {\r\n      //   id: 67,\r\n      //   name: \"nsproducts\",\r\n      //   uri: \"nsproducts\",\r\n      //   titleAr: \"المنتجات\",\r\n      //   titleEn: \"Products\",\r\n      //   mainId: 6,\r\n      //   req: null,\r\n      //   dep: null,\r\n      // },\r\n\r\n      {\r\n        id: 69,\r\n        name: \"accounts\",\r\n        uri: \"accounts\",\r\n        titleAr: \"الحسابات\",\r\n        titleEn: \"Accounts\",\r\n        icon: \"account\",\r\n        mainId: 6,\r\n        role: menuRoles.branchAdmin,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"reports\",\r\n    uri: \"reports\",\r\n    titleAr: \"التقارير\",\r\n    titleEn: \"Reports\",\r\n    icon: \"report\",\r\n    req: null,\r\n    dep: null,\r\n    subMenu: [\r\n      {\r\n        id: 71,\r\n        name: \"calendarempl\",\r\n        uri: \"calendarempl\",\r\n        titleAr: \"جدول الموظفين\",\r\n        titleEn: \"Employees Calendar\",\r\n        mainId: 7,\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72,\r\n        name: \"calreports\",\r\n        uri: \"calreports\",\r\n        titleAr: \"تقرير المواعيد\",\r\n        titleEn: \"Calendar Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.5,\r\n        name: \"docreports\",\r\n        uri: \"docreports\",\r\n        titleAr: \"تقرير الوثائق\",\r\n        titleEn: \"Documents Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 72.7,\r\n        name: \"servicesreports\",\r\n        uri: \"servicesreports\",\r\n        titleAr: \"تقرير الخدمات\",\r\n        titleEn: \"Services Report\",\r\n        req: \"cal\",\r\n        dep: \"pos\",\r\n      },\r\n      {\r\n        id: 73,\r\n        name: \"salesreport\",\r\n        uri: \"salesreport\",\r\n        titleAr: \"تقرير الايرادات\",\r\n        titleEn: \"Sales Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 74,\r\n        name: \"customerreport\",\r\n        uri: \"customerreport\",\r\n        titleAr: \"تقرير العملاء\",\r\n        titleEn: \"Customer Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: \"pos\",\r\n        dep: null,\r\n      },\r\n\r\n      {\r\n        id: 76,\r\n        name: \"expensesreport\",\r\n        uri: \"expensesreport\",\r\n        titleAr: \"تقرير المصاريف\",\r\n        titleEn: \"Expenses Report\",\r\n        mainId: 7,\r\n        req: \"exp\",\r\n        dep: null,\r\n      },\r\n      {\r\n        id: 77,\r\n        name: \"financereport\",\r\n        uri: \"financereport\",\r\n        titleAr: \"تقرير الحسابات\",\r\n        titleEn: \"Finance Report\",\r\n        role: menuRoles.posAdmin,\r\n        mainId: 7,\r\n        req: null,\r\n        dep: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"users\",\r\n    uri: \"users\",\r\n    titleAr: \"المستخدمين\",\r\n    titleEn: \"Users\",\r\n    role: menuRoles.branchAdmin,\r\n    icon: \"user\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: \"options\",\r\n    uri: \"options\",\r\n    titleAr: \"الاعدادات\",\r\n    titleEn: \"Options\",\r\n    icon: \"options\",\r\n    req: null,\r\n    dep: null,\r\n  },\r\n  // {\r\n  //   id: 99,\r\n  //   name: \"logout\",\r\n  //   uri: \"logout\",\r\n  //   titleAr: \"تسجيل الخروج\",\r\n  //   titleEn: \"Logout\",\r\n  //   icon: \"logout\",\r\n  //   req: null,\r\n  //   dep: null,\r\n  // },\r\n];\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//     icon: \"home\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"maincalendar\",\r\n//     uri: \"maincalendar\",\r\n//     titleAr: \"المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//     icon: \"calendar\",\r\n//     req: \"cal\",\r\n//     dep: \"pos\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 11,\r\n//         name: \"calendar\",\r\n//         uri: \"calendar\",\r\n//         titleAr: \"التقويم\",\r\n//         titleEn: \"Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 12,\r\n//         name: \"appointments\",\r\n//         uri: \"appointments\",\r\n//         titleAr: \"ادارة المواعيد\",\r\n//         titleEn: \"Appointments\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//       {\r\n//         id: 14,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//         mainId: 1,\r\n//         req: \"cal\",\r\n//         dep: \"pos\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 2,\r\n//     name: \"mainsales\",\r\n//     uri: \"mainsales\",\r\n//     titleAr: \"المبيعات\",\r\n//     titleEn: \"Sales\",\r\n//     icon: \"sales\",\r\n//     req: \"pos\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 21,\r\n//         name: \"sales\",\r\n//         uri: \"sales\",\r\n//         titleAr: \"ادارة الفواتير\",\r\n//         titleEn: \"Invoices\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 22,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         mainId: 2,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 23,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//         mainId: 2,\r\n//         req: \"pos\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 3,\r\n//     name: \"mainpurchases\",\r\n//     uri: \"mainpurchases\",\r\n//     titleAr: \"المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//     icon: \"purchase\",\r\n//     req: \"pur\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 31,\r\n//         name: \"purchases\",\r\n//         uri: \"purchases\",\r\n//         titleAr: \"ادارة المشتريات\",\r\n//         titleEn: \"Purchases\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 32,\r\n//         name: \"purchasereport\",\r\n//         uri: \"purchasereport\",\r\n//         titleAr: \"تقرير المشتريات\",\r\n//         titleEn: \"Purchase Report\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 33,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//         mainId: 3,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"mainexpenses\",\r\n//     uri: \"mainexpenses\",\r\n//     titleAr: \"المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//     icon: \"expenses\",\r\n//     req: \"exp\",\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 41,\r\n//         name: \"expenses\",\r\n//         uri: \"expenses\",\r\n//         titleAr: \"ادارة المصاريف\",\r\n//         titleEn: \"Expenses\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 42,\r\n//         name: \"expensesreport\",\r\n//         uri: \"expensesreport\",\r\n//         titleAr: \"تقرير المصاريف\",\r\n//         titleEn: \"Expenses Report\",\r\n//         mainId: 4,\r\n//         req: \"exp\",\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"maininventory\",\r\n//     uri: \"maininventory\",\r\n//     titleAr: \"المخازن\",\r\n//     titleEn: \"Inventory\",\r\n//     icon: \"inventory\",\r\n//     req: \"inv\",\r\n//     dep: \"pur\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"stock\",\r\n//         uri: \"stock\",\r\n//         titleAr: \"الموجودات\",\r\n//         titleEn: \"Stock\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"stockmanage\",\r\n//         uri: \"stockmanage\",\r\n//         titleAr: \"ادراة المخازن\",\r\n//         titleEn: \"Stock Managment\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"stockreport\",\r\n//         uri: \"stockreport\",\r\n//         titleAr: \"تقرير المخازن\",\r\n//         titleEn: \"Stock Report\",\r\n//         mainId: 5,\r\n//         req: \"inv\",\r\n//         dep: \"pur\",\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 6,\r\n//     name: \"maincash\",\r\n//     uri: \"maincash\",\r\n//     titleAr: \"المالية\",\r\n//     titleEn: \"Finance\",\r\n//     icon: \"finance\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"cash\",\r\n//         uri: \"cash\",\r\n//         titleAr: \"ادارة النقدية\",\r\n//         titleEn: \"Cash\",\r\n//         mainId: 6,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"accounts\",\r\n//         uri: \"accounts\",\r\n//         titleAr: \"ادارة الحسابات\",\r\n//         titleEn: \"Accounts\",\r\n//         mainId: 6,\r\n//         role: menuRoles.branchAdmin,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n//   {\r\n//     id: 7,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     icon: \"add\",\r\n//     req: null,\r\n//     dep: null,\r\n//     subMenu: [\r\n//       {\r\n//         id: 71,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 72,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 73,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 74,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"Brands\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 75,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//         mainId: 7,\r\n//         req: \"pur\",\r\n//         dep: null,\r\n//       },\r\n//       {\r\n//         id: 76,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//         mainId: 7,\r\n//         req: null,\r\n//         dep: null,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//     icon: \"user\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//     icon: \"options\",\r\n//     req: null,\r\n//     dep: null,\r\n//   },\r\n// ];\r\n\r\n// export const mainmenu = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"home\",\r\n//     uri: \"/\",\r\n//     titleAr: \"الرئيسية\",\r\n//     titleEn: \"Home\",\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"calendar\",\r\n//     uri: \"calendar\",\r\n//     titleAr: \"التقويم و المواعيد\",\r\n//     titleEn: \"Calendar\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"appointments\",\r\n//     uri: \"appointments\",\r\n//     titleAr: \"ادارة المواعيد\",\r\n//     titleEn: \"Appointments\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"sales\",\r\n//     uri: \"sales\",\r\n//     titleAr: \"ادارة الفواتير\",\r\n//     titleEn: \"Invoices\",\r\n//   },\r\n\r\n//   {\r\n//     id: 4,\r\n//     name: \"cash\",\r\n//     uri: \"cash\",\r\n//     titleAr: \"ادارة النقدية\",\r\n//     titleEn: \"Cash\",\r\n//   },\r\n//   {\r\n//     id: 4.5,\r\n//     name: \"purchases\",\r\n//     uri: \"purchases\",\r\n//     titleAr: \"ادارة المشتريات\",\r\n//     titleEn: \"Purchases\",\r\n//   },\r\n//   {\r\n//     id: 4.6,\r\n//     name: \"expenses\",\r\n//     uri: \"expenses\",\r\n//     titleAr: \"ادارة المصاريف\",\r\n//     titleEn: \"Expenses\",\r\n//   },\r\n\r\n//   {\r\n//     id: 5,\r\n//     name: \"reports\",\r\n//     uri: \"reports\",\r\n//     titleAr: \"التقارير\",\r\n//     titleEn: \"Reports\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 51,\r\n//         name: \"calendarempl\",\r\n//         uri: \"calendarempl\",\r\n//         titleAr: \"جدول الموظفين\",\r\n//         titleEn: \"Employees Calendar\",\r\n//       },\r\n//       {\r\n//         id: 52,\r\n//         name: \"calreports\",\r\n//         uri: \"calreports\",\r\n//         titleAr: \"تقرير المواعيد\",\r\n//         titleEn: \"Calendar Report\",\r\n//       },\r\n//       {\r\n//         id: 53,\r\n//         name: \"salesreport\",\r\n//         uri: \"salesreport\",\r\n//         titleAr: \"تقرير الايرادات\",\r\n//         titleEn: \"Sales Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//       {\r\n//         id: 54,\r\n//         name: \"financereport\",\r\n//         uri: \"financereport\",\r\n//         titleAr: \"تقرير المالية\",\r\n//         titleEn: \"Finance Report\",\r\n//         role: menuRoles.branchAdmin,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     name: \"adds\",\r\n//     uri: \"adds\",\r\n//     titleAr: \"الاضافات\",\r\n//     titleEn: \"Additions\",\r\n//     subMenu: [\r\n//       {\r\n//         id: 61,\r\n//         name: \"departments\",\r\n//         uri: \"departments\",\r\n//         titleAr: \"الأقسام\",\r\n//         titleEn: \"Departments\",\r\n//       },\r\n//       {\r\n//         id: 62,\r\n//         name: \"employees\",\r\n//         uri: \"employees\",\r\n//         titleAr: \"الموظفين\",\r\n//         titleEn: \"Employees\",\r\n//       },\r\n//       {\r\n//         id: 63,\r\n//         name: \"categories\",\r\n//         uri: \"categories\",\r\n//         titleAr: \"التصنيفات\",\r\n//         titleEn: \"Categories\",\r\n//       },\r\n//       {\r\n//         id: 64,\r\n//         name: \"brands\",\r\n//         uri: \"brands\",\r\n//         titleAr: \"البراندات\",\r\n//         titleEn: \"rands\",\r\n//       },\r\n//       {\r\n//         id: 65,\r\n//         name: \"products\",\r\n//         uri: \"products\",\r\n//         titleAr: \"المنتجات\",\r\n//         titleEn: \"Products\",\r\n//       },\r\n//       {\r\n//         id: 66,\r\n//         name: \"services\",\r\n//         uri: \"services\",\r\n//         titleAr: \"الخدمات\",\r\n//         titleEn: \"Services\",\r\n//       },\r\n//       {\r\n//         id: 67,\r\n//         name: \"customers\",\r\n//         uri: \"customers\",\r\n//         titleAr: \"العملاء\",\r\n//         titleEn: \"Customers\",\r\n//       },\r\n//       {\r\n//         id: 68,\r\n//         name: \"suppliers\",\r\n//         uri: \"suppliers\",\r\n//         titleAr: \"الموردين\",\r\n//         titleEn: \"Suppliers\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     name: \"users\",\r\n//     uri: \"users\",\r\n//     titleAr: \"المستخدمين\",\r\n//     titleEn: \"Users\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 8,\r\n//     name: \"accounts\",\r\n//     uri: \"accounts\",\r\n//     titleAr: \"ادارة الحسابات\",\r\n//     titleEn: \"Accounts\",\r\n//     role: menuRoles.branchAdmin,\r\n//   },\r\n//   {\r\n//     id: 9,\r\n//     name: \"options\",\r\n//     uri: \"options\",\r\n//     titleAr: \"الاعدادات\",\r\n//     titleEn: \"Options\",\r\n//   },\r\n// ];\r\n\r\nexport const addButtonsList = [\r\n  {\r\n    id: 1,\r\n    name: \"category\",\r\n    titleAr: \"التصنيفات\",\r\n    titleEn: \"Categories\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"brand\",\r\n    titleAr: \"البراندات\",\r\n    titleEn: \"Brands\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"service\",\r\n    titleAr: \"الخدمات\",\r\n    titleEn: \"Services\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"product\",\r\n    titleAr: \"البضاعة\",\r\n    titleEn: \"Products\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"customer\",\r\n    titleAr: \"العملاء\",\r\n    titleEn: \"Customers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"company\",\r\n    titleAr: \"الشركة\",\r\n    titleEn: \"Company\",\r\n  },\r\n];\r\n\r\nexport const systemsNames = {\r\n  cal: {\r\n    name: \"Calendar\",\r\n    nameAr: \"جدول المواعيد\",\r\n  },\r\n  pos: {\r\n    name: \"Sales\",\r\n    nameAr: \"نظام المبيعات\",\r\n  },\r\n  pur: {\r\n    name: \"Purchase\",\r\n    nameAr: \"نظام المشتريات\",\r\n  },\r\n  exp: {\r\n    name: \"Expenses\",\r\n    nameAr: \"نظام المصاريف\",\r\n  },\r\n  inv: {\r\n    name: \"Inventory\",\r\n    nameAr: \"نظام المخازن\",\r\n  },\r\n  hr: {\r\n    name: \"Human Resources\",\r\n    nameAr: \"نظام الموارد البشرية\",\r\n  },\r\n  ass: {\r\n    name: \"Assets Accounting\",\r\n    nameAr: \"نظام حسابات الأصول\",\r\n  },\r\n  acc: {\r\n    name: \"General Accounting\",\r\n    nameAr: \"نظام الحسابات العامة\",\r\n  },\r\n};\r\n","export const colorsList = [\r\n  \"#00ff00\",\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#088da5\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#00ffff\",\r\n  \"#40e0d0\",\r\n  \"#5ac18e\",\r\n  \"#66cdaa\",\r\n  \"#66cccc\",\r\n  \"#81d8d0\",\r\n  \"#7fe5f0\",\r\n  \"#7fffd4\",\r\n  \"#6897bb\",\r\n  \"#4ca3dd\",\r\n  \"#468499\",\r\n  \"#407294\",\r\n  \"#576675\",\r\n  \"#133337\",\r\n  \"#0e2f44\",\r\n  \"#003366\",\r\n  \"#000080\",\r\n  \"#0000ff\",\r\n  \"#420420\",\r\n  \"#660066\",\r\n  \"#800080\",\r\n  \"#8a2be2\",\r\n  \"#ff00ff\",\r\n  \"#f6546a\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ffb6c1\",\r\n  \"#ffc0cb\",\r\n  \"#e6e6fa\",\r\n  \"#f0f8ff\",\r\n  \"#c6e2ff\",\r\n  \"#c0d6e4\",\r\n  \"#b0e0e6\",\r\n  \"#afeeee\",\r\n  \"#b6fcd5\",\r\n  \"#b4eeb4\",\r\n  \"#d3ffce\",\r\n  \"#dcedc1\",\r\n  \"#cbcba9\",\r\n  \"#cbbeb5\",\r\n  \"#c39797\",\r\n  \"#c0c0c0\",\r\n  \"#cccccc\",\r\n  \"#dddddd\",\r\n  \"#ffe4e1\",\r\n  \"#eeeeee\",\r\n  \"#f5f5f5\",\r\n  \"#ffffff\",\r\n  \"#ccff00\",\r\n  \"#bada55\",\r\n  \"#daa520\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff00\",\r\n  \"#ffff66\",\r\n  \"#fff68f\",\r\n  \"#f5f5dc\",\r\n  \"#faebd7\",\r\n  \"#ffdab9\",\r\n  \"#ffc3a0\",\r\n  \"#ff7f50\",\r\n  \"#f08080\",\r\n  \"#fa8072\",\r\n  \"#ff7373\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#8b0000\",\r\n  \"#800000\",\r\n  \"#696966\",\r\n  \"#808080\",\r\n  \"#696969\",\r\n  \"#666666\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n  \"#000000\",\r\n];\r\n\r\nexport const colors = [\r\n  \"#008000\",\r\n  \"#065535\",\r\n  \"#008080\",\r\n  \"#20b2aa\",\r\n  \"#00ced1\",\r\n  \"#7fffd4\",\r\n  \"#25CED1\",\r\n  \"#407294\",\r\n  \"#044660\",\r\n  \"#003366\",\r\n  \"#0b1f33\",\r\n  \"#20A4F3\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#0000ff\",\r\n  \"#151060\",\r\n  \"#000080\",\r\n  \"#7678ed\",\r\n  \"#40008d\",\r\n  \"#8a2be2\",\r\n  \"#800080\",\r\n  \"#f7347a\",\r\n  \"#ff80ed\",\r\n  \"#ff00ff\",\r\n  \"#ffc0cb\",\r\n  \"#f6546a\",\r\n  \"#ff6666\",\r\n  \"#ff4040\",\r\n  \"#ff0000\",\r\n  \"#990000\",\r\n  \"#800000\",\r\n  \"#420420\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#a7967e\",\r\n  \"#ffa500\",\r\n  \"#ffd700\",\r\n  \"#ffff66\",\r\n  \"#ccff00\",\r\n  \"#00ff00\",\r\n  \"#7b7b7d\",\r\n  \"#333333\",\r\n  \"#101010\",\r\n];\r\n\r\nexport const colorsList2 = [\r\n  \"#000000\",\r\n  \"#241f20\",\r\n  \"#2c2c2c\",\r\n  \"#4c4c4c\",\r\n  \"#7b7b7d\",\r\n  \"#a7967e\",\r\n  \"#340100\",\r\n  \"#58221c\",\r\n  \"#844257\",\r\n  \"#853b92\",\r\n  \"#9b59b6\",\r\n  \"#e65415\",\r\n  \"#ff9a00\",\r\n  \"#ffdc00\",\r\n  \"#FFFD77\",\r\n  \"#eac87c\",\r\n  \"#f5998e\",\r\n  \"#fcb69a\",\r\n  \"#495b53\",\r\n  \"#016748\",\r\n  \"#79963c\",\r\n  \"#6ead50\",\r\n  \"#4faa6d\",\r\n  \"#08b3ab\",\r\n  \"#3097bf\",\r\n  \"#667fb5\",\r\n  \"#25CED1\",\r\n  \"#20A4F3\",\r\n  \"#7678ed\",\r\n  \"#0070f7\",\r\n  \"#3843d2\",\r\n  \"#3454D1\",\r\n  \"#2c3996\",\r\n  \"#044660\",\r\n  \"#40008d\",\r\n  \"#151060\",\r\n  \"#0b1f33\",\r\n  \"#987284\",\r\n  \"#754668\",\r\n  \"#C1CFDA\",\r\n  \"#B7AD99\",\r\n  \"#8963BA\",\r\n  \"#54428E\",\r\n  \"#5A2B8D\",\r\n  \"#F6685D\",\r\n  \"#FF4365\",\r\n  \"#B0228C\",\r\n  \"#c0392b\",\r\n  \"#fff\",\r\n];\r\n","export const drawerWidth = 250;\r\n\r\nexport const isProd = process.env.NODE_ENV === \"production\";\r\n\r\nexport const UPLOAD_PRESET = \"sfnboslv\";\r\nexport const CLOUD_NAME = \"fivegstore\";\r\nexport const imageUploadOptions = {\r\n  maxSizeMB: 1,\r\n  maxWidthOrHeight: 1280,\r\n  useWebWorker: true,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  color: yup.string().required(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\n\r\nconst invItemSchema = yup.object().shape({\r\n  price: yup.number().min(0).required(),\r\n  qty: yup.number().min(1).required(),\r\n});\r\nexport const invItemResolver = { resolver: yupResolver(invItemSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nexport const operationTypes = {\r\n  // المبيعات والمشتريات - زبائن وموردين\r\n  salesInvoice: 10, /// فاتورة المبيع\r\n  salesQoutation: 11,\r\n  salesDelivery: 12, // مع فاتورة المبيعات عند تسليم البضاعة للزبون\r\n  salesReturn: 13,\r\n  customerReceipt: 14, // from customer // cash debit <- accounts_receivable credit\r\n  customerDiscount: 15, // to customer //  accounts_receivable debit <- cash credit  خصمم خارج الفاتورة\r\n\r\n  purchaseInvoice: 30, // فاتورة الشراء\r\n  purchaseOrder: 31, // طلب شراء قبل فاتورة الشراء\r\n  purchaseDelivery: 32, //  مع طلب الشراء عند استلام البضاعة من المورد\r\n  purchaseReturn: 33,\r\n  supplierPayemnt: 34, // to supplier // accounts_payable debit <- cash credit\r\n  supplierDiscount: 35, // from supplier // cash debit <- accounts_payable credit خصمم خارج الفاتورة\r\n\r\n  interDeliveryIn: 50, // حركة استلام بضاعة من احد مخازن الشركة\r\n  interDeliveryOut: 51, // حركة تسليم بضاعة لاحد مخازن الشركة\r\n\r\n  expenses: 60,\r\n\r\n  // حركة مالية\r\n  // transfare cash - bank - card - partners - branchs\r\n  deposet: 70, // سحب من الصندوق وايداع بالبنك // bank debit <- cash or card credit\r\n  ownerDraw: 71, // سحب من الصندوق للشريك  // partenr debit <- cash credit\r\n  ownerDeposit: 72, // اضافة من الشريك في الصندوق  // cash debit <- partenr credit\r\n\r\n  event: 80,\r\n  task: 81,\r\n  project: 82,\r\n\r\n  // special transfare operation\r\n  kaid: 90,\r\n};\r\n\r\nexport const opTypesNames = {\r\n  10: {\r\n    name: \"Invlice\",\r\n    nameAr: \"فاتورة\",\r\n    ref: \"salesInvoice\",\r\n  },\r\n  11: {\r\n    name: \"Qoutation\",\r\n    nameAr: \"عرض سعر\",\r\n    ref: \"salesQoutation\",\r\n  },\r\n  12: {\r\n    name: \"Sales Delivery\",\r\n    nameAr: \"سند تسليم\",\r\n    ref: \"salesDelivery\",\r\n  },\r\n  13: {\r\n    name: \"Sales Return\",\r\n    nameAr: \"مرتجع مبيعات\",\r\n    ref: \"salesReturn\",\r\n  },\r\n  14: {\r\n    name: \"Receipt\",\r\n    nameAr: \"سند قبض\",\r\n    ref: \"customerReceipt\",\r\n  },\r\n  15: {\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم مبيعات\",\r\n    ref: \"customerDiscount\",\r\n  },\r\n  30: {\r\n    name: \"Purchase Invoice\",\r\n    nameAr: \"فاتورة شراء\",\r\n    ref: \"purchaseInvoice\",\r\n  },\r\n  31: {\r\n    name: \"Purchase Order\",\r\n    nameAr: \"طلب شراء\",\r\n    ref: \"purchaseOrder\",\r\n  },\r\n  32: {\r\n    name: \"Purchase Delivery\",\r\n    nameAr: \"سند استلام\",\r\n    ref: \"purchaseDelivery\",\r\n  },\r\n  33: {\r\n    name: \"Purchase Return\",\r\n    nameAr: \"مرتجع مشتريات\",\r\n    ref: \"purchaseReturn\",\r\n  },\r\n  34: {\r\n    name: \"Payemnt\",\r\n    nameAr: \"سند دفع\",\r\n    ref: \"supplierPayemnt\",\r\n  },\r\n  35: {\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم مشتريات\",\r\n    ref: \"supplierDiscount\",\r\n  },\r\n  50: {\r\n    name: \"Stock In\",\r\n    nameAr: \"وارد مخزن\",\r\n    ref: \"interDeliveryIn\",\r\n  },\r\n  51: {\r\n    name: \"Stock Out\",\r\n    nameAr: \"صادر مخزن\",\r\n    ref: \"interDeliveryOut\",\r\n  },\r\n  60: {\r\n    name: \"Expenses\",\r\n    nameAr: \"مصاريف\",\r\n    ref: \"expenses\",\r\n  },\r\n  70: {\r\n    name: \"Deposet\",\r\n    nameAr: \"ايداع\",\r\n    ref: \"deposet\",\r\n  },\r\n  71: {\r\n    name: \"Draw - Partner\",\r\n    nameAr: \"سحب - شريك\",\r\n    ref: \"ownerDraw\",\r\n  },\r\n  72: {\r\n    name: \"Deposit - Partner\",\r\n    nameAr: \"ايداع - شريك\",\r\n    ref: \"ownerDeposit\",\r\n  },\r\n  80: {\r\n    name: \"Appointment\",\r\n    nameAr: \"موعد\",\r\n    ref: \"event\",\r\n  },\r\n  90: {\r\n    name: \"Jornal Vaucher\",\r\n    nameAr: \"قيد يومية\",\r\n    ref: \"kaid\",\r\n  },\r\n};\r\n\r\nexport const operationNames = {\r\n  salesInvoice: \"Sales Invoice\",\r\n  salesQoutation: \"Sales Qoutation\",\r\n  salesDelivery: \"Sales Delivery\",\r\n  salesReturn: \"Sales Return\",\r\n  customerReceipt: \"Customer Receipt\",\r\n  customerDiscount: \"Customer Discount\",\r\n  purchaseInvoice: \"Purchase Invoice\",\r\n  purchaseOrder: \"Purchase Order\",\r\n  purchaseDelivery: \"Purchase Delivery\",\r\n  purchaseReturn: \"Purchase Return\",\r\n  supplierPayemnt: \"Supplier Payemnt\",\r\n  supplierDiscount: \"Supplier Discount\",\r\n  interDeliveryIn: \"Internal DeliveryIn\",\r\n  interDeliveryOut: \"Internal DeliveryOut\",\r\n  expenses: \"Expenses\",\r\n\r\n  deposet: \"Deposet\",\r\n  ownerDraw: \"Owner Draw\",\r\n  ownerDeposit: \"Owner Deposit\",\r\n\r\n  event: \"Event\",\r\n  task: \"Task\",\r\n  project: \"Project\",\r\n\r\n  // special transfare operation\r\n  kaid: \"Kaid\",\r\n};\r\n\r\nexport const paymentTypes = {\r\n  cash: \"Cash\",\r\n  card: \"Card\",\r\n  check: \"Check\",\r\n  bank: \"Bank\",\r\n};\r\n\r\nexport const catTypes = [\r\n  { id: 1, name: \"Product\", nameAr: \"منتج\" },\r\n  { id: 2, name: \"Service\", nameAr: \"خدمة\" },\r\n  { id: 3, name: \"Expenses\", nameAr: \"مصاريف\" },\r\n];\r\n\r\nexport const statusTypes = {\r\n  Scheduled: 1,\r\n  Confirmed: 2,\r\n  OnHold: 3,\r\n  Canceled: 3,\r\n  Completed: 10,\r\n};\r\n\r\nexport const eventStatusEn = {\r\n  1: \"Scheduled\",\r\n  2: \"Confirmed\",\r\n  3: \"On-Hold\",\r\n  4: \"Canceled\",\r\n  10: \"Completed\",\r\n};\r\nexport const eventStatusAr = {\r\n  1: \"موعد غير مؤكد\",\r\n  2: \"موعد مؤكد\",\r\n  3: \"موعد معلق\",\r\n  4: \"موعد ملغى\",\r\n  10: \"موعد منجز\",\r\n};\r\nexport const eventStatus = [\r\n  { id: 1, name: \"Scheduled\", nameAr: \"موعد غير مؤكد\", color: \"#445E93\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"موعد مؤكد\", color: \"#2AB7CA\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"موعد معلق\", color: \"#FED766\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"موعد ملغى\", color: \"#FE4A49\" },\r\n  { id: 10, name: \"Completed\", nameAr: \"موعد منجز\", color: \"#61E294\" },\r\n];\r\n\r\nexport const eventStatusShort = [\r\n  { id: 10, name: \"Completed\", nameAr: \"منجز\", color: \"#7bcf9b\" },\r\n  { id: 2, name: \"Confirmed\", nameAr: \"مؤكد\", color: \"#a084bb\" },\r\n  { id: 1, name: \"Scheduled\", nameAr: \"غير مؤكد\", color: \"#aa98bb\" },\r\n  { id: 3, name: \"On-Hold\", nameAr: \"معلق\", color: \"#b6abc2\" },\r\n  { id: 4, name: \"Canceled\", nameAr: \"ملغى\", color: \"#b6abc2\" },\r\n];\r\n\r\nexport const getThemeStatus = (theme: any) => {\r\n  return [\r\n    {\r\n      id: 10,\r\n      name: \"Completed\",\r\n      nameAr: \"منجز\",\r\n      color: fade(theme.palette.primary.light, 0.9),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Confirmed\",\r\n      nameAr: \"مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.8),\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Scheduled\",\r\n      nameAr: \"غير مؤكد\",\r\n      color: fade(theme.palette.secondary.light, 0.6),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"On-Hold\",\r\n      nameAr: \"معلق\",\r\n      color: fade(theme.palette.secondary.light, 0.4),\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Canceled\",\r\n      nameAr: \"ملغى\",\r\n      color: fade(theme.palette.secondary.light, 0.2),\r\n    },\r\n  ];\r\n};\r\nexport const departempl = [\r\n  { id: \"employeeId\", name: \"Employee\", nameAr: \"الموظفين\" },\r\n  { id: \"departmentId\", name: \"Department\", nameAr: \"الأقسام\" },\r\n];\r\n\r\nexport const periods = [\r\n  { id: 1, period: \"cm\", name: \"Current Month\", nameAr: \"الشهر الحالي\" },\r\n  { id: 2, period: \"pm\", name: \"Previous Month\", nameAr: \"الشهر السابق\" },\r\n  { id: 3, period: \"cy\", name: \"Current Year\", nameAr: \"السنة الحالية\" },\r\n  { id: 4, period: \"py\", name: \"Previous Year\", nameAr: \"السنة السابقة\" },\r\n];\r\n\r\nexport const eventColors = {\r\n  1: \"#7b7b7d\",\r\n  2: \"#3843d2\",\r\n  3: \"#ffa500\",\r\n  4: \"#ff4040\",\r\n  10: \"#008000\",\r\n};\r\n\r\nexport const weekdays = {\r\n  sat: false,\r\n  sun: false,\r\n  mon: false,\r\n  tue: false,\r\n  wed: false,\r\n  thu: false,\r\n  fri: false,\r\n};\r\nexport const weekdaysNNo = {\r\n  6: \"sat\",\r\n  0: \"sun\",\r\n  1: \"mon\",\r\n  2: \"tue\",\r\n  3: \"wed\",\r\n  4: \"thu\",\r\n  5: \"fri\",\r\n};\r\n\r\nexport const weekdaysObj = {\r\n  sat: {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  sun: {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  mon: {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  tue: {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  wed: {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  thu: {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  fri: {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n};\r\n\r\nexport const dayslist = [\r\n  {\r\n    id: 6,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    short: \"sat\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    short: \"sun\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Monday\",\r\n    nameAr: \"الأثنين\",\r\n    short: \"mon\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    short: \"tue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الأربعاء\",\r\n    short: \"wed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    short: \"thu\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    short: \"fri\",\r\n  },\r\n];\r\n","import { createContext } from \"react\";\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const CalendarContext = createContext<CalendarTypes | any>({});\r\n\r\nexport default CalendarContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { CalendarTypes } from \"../../types\";\r\n\r\nexport const initCalendar = {\r\n  mainResourceName: \"status\",\r\n  currentViewName: \"3Days\",\r\n  currentDate: new Date(),\r\n  departvalue: null,\r\n  emplvalue: null,\r\n  status: null,\r\n  data: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReducer = (state: CalendarTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setData\":\r\n      return { ...state, data: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const EventsContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default EventsContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const FinanceContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default FinanceContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initFinanceContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const financeReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ReceiptContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ReceiptContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initReceiptContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const receiptReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default ExpensesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CustomerReportContext = createContext<EventsContextTypes | any>(\r\n  {}\r\n);\r\n\r\nexport default CustomerReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCustomerReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  accvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"employee\",\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const customerReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setAccvalue\":\r\n      return { ...state, accvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const ExpensesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default ExpensesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initExpensesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const expensesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\n\r\nexport const GlobalContext = createContext<GContextTypes | any>({});\r\n\r\nexport default GlobalContext;\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const SalesContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default SalesContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const salesReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const SalesReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default SalesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseContext = {\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"time\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initSalesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n  itemType: null,\r\n};\r\n\r\nexport const salesReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    case \"setItemType\":\r\n      return { ...state, itemType: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const PurchaseReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default PurchaseReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initPurchaseReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  suppvalue: [],\r\n  catvalue: [],\r\n  brandvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  sort: [{ columnName: \"opTime\", direction: \"desc\" }],\r\n};\r\n\r\nexport const purchaseReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setSupptvalue\":\r\n      return { ...state, suppvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setBrandvalue\":\r\n      return { ...state, brandvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../graphql/mutation\";\r\nimport { yup } from \"../../constants\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { loginClasses } from \"../../themes\";\r\nimport { client } from \"../../graphql\";\r\n\r\nconst Login = (props: any): any => {\r\n  const classes = loginClasses();\r\n\r\n  const [error, seterror] = useState(null);\r\n\r\n  const { register, handleSubmit, errors }: any = useForm(yup.loginResolver);\r\n  const {\r\n    dispatch,\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [dologin] = useMutation(login);\r\n\r\n  const onSubmit = async (dt: any) => {\r\n    const { username, password } = dt;\r\n    const userData = await dologin({ variables: { username, password } });\r\n    if (userData?.data?.login?.ok === true) {\r\n      const { data, accessToken, refreshToken } = userData.data.login;\r\n      const user = {\r\n        ...data,\r\n        roles: JSON.parse(data.roles),\r\n      };\r\n      await client.resetStore();\r\n      const token = JSON.stringify({ accessToken, refreshToken });\r\n      dispatch({ type: \"login\", payload: { user, token } });\r\n      window.location.reload();\r\n      seterror(null);\r\n    } else if (userData?.data?.login?.ok === false) {\r\n      seterror(userData.data.login.error);\r\n    }\r\n  };\r\n\r\n  const keyPress = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      handleSubmit(onSubmit)();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {isRTL ? \"تسجيل الدخول\" : \"Sign in\"}\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              autoFocus\r\n              label={isRTL ? \"اسم المستخدم\" : \"Username\"}\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.username ? true : false}\r\n              onKeyDown={keyPress}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              label={isRTL ? \"كلمة المرور\" : \"Password\"}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={register}\r\n              error={errors.password ? true : false}\r\n              onKeyDown={keyPress}\r\n              helperText={error ? error : undefined}\r\n              required\r\n              fullWidth\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              style={{ height: 40 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              {isRTL ? \"تسجبل الدخول\" : \"Login\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://jadwalerp.com/\">\r\n              Jadwal ERP\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport PaymentOutlinedIcon from \"@material-ui/icons/PaymentOutlined\";\r\nimport AccountBalanceOutlinedIcon from \"@material-ui/icons/AccountBalanceOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeWorkOutlinedIcon from \"@material-ui/icons/HomeWorkOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Business from \"@material-ui/icons/Business\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nexport default function MyIcon({ icon, color, size }: any) {\r\n  const style = { color, fontSize: size ? size : undefined };\r\n  switch (icon) {\r\n    case \"home\":\r\n      return <HomeWorkOutlinedIcon style={style}></HomeWorkOutlinedIcon>;\r\n    case \"calendar\":\r\n      return <CalendarTodayIcon style={style}></CalendarTodayIcon>;\r\n    case \"sales\":\r\n      return <DescriptionOutlinedIcon style={style}></DescriptionOutlinedIcon>;\r\n    case \"purchase\":\r\n      return <ShoppingCartIcon style={style}></ShoppingCartIcon>;\r\n    case \"expenses\":\r\n      return <ReceiptIcon style={style}></ReceiptIcon>;\r\n    case \"inventory\":\r\n      return <FormatListNumberedIcon style={style}></FormatListNumberedIcon>;\r\n    case \"finance\":\r\n      return <PaymentIcon style={style}></PaymentIcon>;\r\n    case \"add\":\r\n      return <AddBox style={style}></AddBox>;\r\n    case \"user\":\r\n      return <PersonIcon style={style}></PersonIcon>;\r\n    case \"business\":\r\n      return <Business style={style}></Business>;\r\n    case \"group\":\r\n      return <GroupIcon style={style}></GroupIcon>;\r\n    case \"options\":\r\n      return <SettingsIcon style={style}></SettingsIcon>;\r\n    case \"cash\":\r\n      return <AttachMoneyOutlinedIcon style={style}></AttachMoneyOutlinedIcon>;\r\n    case \"card\":\r\n      return <PaymentOutlinedIcon style={style}></PaymentOutlinedIcon>;\r\n    case \"bank\":\r\n      return (\r\n        <AccountBalanceOutlinedIcon style={style}></AccountBalanceOutlinedIcon>\r\n      );\r\n    case \"depart\":\r\n      return <Dashboard style={style}></Dashboard>;\r\n    case \"partner\":\r\n      return (\r\n        <AccountCircleOutlinedIcon style={style}></AccountCircleOutlinedIcon>\r\n      );\r\n    case \"discount\":\r\n      return (\r\n        <ArrowDropDownOutlinedIcon style={style}></ArrowDropDownOutlinedIcon>\r\n      );\r\n    case \"event\":\r\n      return <EventOutlinedIcon style={style}></EventOutlinedIcon>;\r\n    case \"report\":\r\n      return <AssessmentIcon style={style}></AssessmentIcon>;\r\n    case \"account\":\r\n      return <AccountBalanceIcon style={style}></AccountBalanceIcon>;\r\n    case \"logout\":\r\n      return <ExitToAppIcon style={style}></ExitToAppIcon>;\r\n    case \"work\":\r\n      return <WorkIcon style={style}></WorkIcon>;\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { fade, ListItemIcon } from \"@material-ui/core\";\r\n\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { applyRole } from \"../../common/roles\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const renderIcon = (icon: any, theme: any, isSelected: any) => {\r\n  const color = isSelected\r\n    ? fade(theme.palette.secondary.main, 0.8)\r\n    : fade(theme.palette.background.default, 0.8);\r\n  return (\r\n    <ListItemIcon>\r\n      <MyIcon icon={icon} color={color} size={25}></MyIcon>\r\n    </ListItemIcon>\r\n  );\r\n};\r\n\r\nexport const subMenuItem = ({\r\n  isRTL,\r\n  classes,\r\n  setMenuitem,\r\n  menuitem,\r\n  item,\r\n  theme,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const isSelected = item.name === menuitem.name;\r\n  const role = item.role ? applyRole(item.role, user) : true;\r\n  if (!role) {\r\n    return <div key={item.id}></div>;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        color: isSelected\r\n          ? \"#eee\"\r\n          : fade(theme.palette.background.default, 0.8),\r\n      }}\r\n      to={`${item.uri}`}\r\n      onClick={() => {\r\n        setMenuitem(item);\r\n        if (setMobileOpen) {\r\n          setMobileOpen(false);\r\n        }\r\n      }}\r\n      key={item.id}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.child2}\r\n        style={{\r\n          backgroundColor: isSelected ? theme.palette.primary.dark : undefined,\r\n        }}\r\n      >\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          style={{\r\n            color: isSelected ? theme.palette.secondary.main : undefined,\r\n          }}\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { renderIcon, subMenuItem } from \"./renders\";\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  classes,\r\n  isRTL,\r\n  theme,\r\n  submenu,\r\n  setMenuitem,\r\n  menuitem,\r\n  i,\r\n  user,\r\n  setMobileOpen,\r\n}: any) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem\r\n        id={item.id}\r\n        dir={isRTL ? \"rtl\" : undefined}\r\n        className={classes.child}\r\n        onClick={handleClick}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {renderIcon(item.icon, theme, false)}\r\n        <ListItemText\r\n          primary={isRTL ? item.titleAr : item.titleEn}\r\n          className={isRTL ? classes.txtrtl : classes.txtltr}\r\n          style={{ marginLeft: -20, paddingTop: 3 }}\r\n        />\r\n        {open ? (\r\n          <ExpandLess style={{ color: \"#eee\", fontSize: 20 }} />\r\n        ) : (\r\n          <ExpandMore style={{ color: \"#eee\", fontSize: 20 }} />\r\n        )}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List disablePadding>\r\n          {submenu.map((subitem: any) =>\r\n            subMenuItem({\r\n              isRTL,\r\n              item: subitem,\r\n              classes,\r\n              setMenuitem,\r\n              menuitem,\r\n              theme,\r\n              user,\r\n              setMobileOpen,\r\n            })\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderIcon } from \"./renders\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { applyRole } from \"../../common/roles\";\r\n\r\nconst Menu = ({\r\n  isRTL,\r\n  menuitem,\r\n  setMenuitem,\r\n  classes,\r\n  theme,\r\n  user,\r\n  menu,\r\n  setMobileOpen,\r\n  logout,\r\n  client,\r\n  history,\r\n}: any) => {\r\n  return (\r\n    <List>\r\n      {menu.map((item: any, i: any) => {\r\n        const submenu = item.subMenu;\r\n        const isSelected = item.name === menuitem.name;\r\n        const role = item.role ? applyRole(item.role, user) : true;\r\n        if (!role) {\r\n          return <div key={item.id}></div>;\r\n        }\r\n        return (\r\n          <div key={item.id}>\r\n            {!submenu && (\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: isSelected ? \"#333\" : \"#eee\",\r\n                }}\r\n                to={`${item.uri}`}\r\n                onClick={async () => {\r\n                  if (item.id === 99) {\r\n                    logout();\r\n                    await client.resetStore();\r\n                    history.push(\"/\");\r\n                  } else {\r\n                    setMenuitem(item);\r\n                    if (setMobileOpen) {\r\n                      setMobileOpen(false);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <ListItem\r\n                  dir={isRTL ? \"rtl\" : undefined}\r\n                  className={classes.child}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: isSelected\r\n                      ? theme.palette.primary.dark\r\n                      : undefined,\r\n                  }}\r\n                >\r\n                  {renderIcon(item.icon, theme, isSelected)}\r\n\r\n                  <ListItemText\r\n                    primary={isRTL ? item.titleAr : item.titleEn}\r\n                    className={isRTL ? classes.txtrtl : classes.txtltr}\r\n                    style={{\r\n                      paddingTop: 3,\r\n                      color: isSelected\r\n                        ? theme.palette.secondary.main\r\n                        : undefined,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            {submenu && (\r\n              <MenuItem\r\n                item={item}\r\n                classes={classes}\r\n                isSelected={isSelected}\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                submenu={submenu}\r\n                i={i}\r\n                setMenuitem={setMenuitem}\r\n                menuitem={menuitem}\r\n                user={user}\r\n                setMobileOpen={setMobileOpen}\r\n              ></MenuItem>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const nameToColor = (name: string, s: number = 70, l: number = 30) => {\r\n  if (!name) return \"#777\";\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const shadeColor = (color: any, amount: number) =>\r\n  \"#\" +\r\n  color\r\n    .replace(/^#/, \"\")\r\n    .replace(/../g, (color: any) =>\r\n      (\r\n        \"0\" +\r\n        Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\r\n      ).substr(-2),\r\n    );\r\n\r\n// shadeColor('#ffffff', -20) => \"#ebebeb\"\r\n// shadeColor('000000', 20) => \"#141414\"\r\n","export const appSystems = [\r\n  { basename: \"cal\", name: \"Calendar\", nameAr: \"جدول المواعيد\" },\r\n  { basename: \"pos\", name: \"Sales System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"pur\", name: \"Purchase System\", nameAr: \"نظام مبيعات\" },\r\n  { basename: \"exp\", name: \"Expenses System\", nameAr: \"نظام المصاريف\" },\r\n  { basename: \"inv\", name: \"Inventory System\", nameAr: \"نظام المخازن\" },\r\n  { basename: \"hr\", name: \"HR Managment\", nameAr: \"إدارة الموارد البشرية\" },\r\n  { basename: \"ass\", name: \"Assets Managment\", nameAr: \"إدارة الأصول\" },\r\n  { basename: \"acc\", name: \"General Accounting\", nameAr: \"حسابات عامة\" },\r\n];\r\n\r\nexport const systemTypes = {\r\n  cal: \"cal\",\r\n  pos: \"pos\",\r\n  pur: \"pur\",\r\n  exp: \"exp\",\r\n  inv: \"inv\",\r\n  hr: \"hr\",\r\n  ass: \"ass\",\r\n  acc: \"acc\",\r\n};\r\n\r\nexport const taskTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"One Appointment\",\r\n    nameAr: \"موعد واحد\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Multi Appointments\",\r\n    nameAr: \"مواعيد متعددة\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Rent & Services\",\r\n    nameAr: \"خدمات وتأجير\",\r\n  },\r\n];\r\n\r\nexport const getTaskName = ({ id, isRTL }) => {\r\n  const taskname = taskTypes.filter((tt: any) => tt.id === id);\r\n  if (taskname && taskname.length > 0) {\r\n    return isRTL ? taskname[0].nameAr : taskname[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","export const actionType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\nexport const accountType = {\r\n  DEBIT: 1,\r\n  CREDIT: 2,\r\n};\r\n\r\nexport const closedAccounts = {\r\n  BALNCE_SHEET: 1,\r\n  INCOME_STATEMENT: 2,\r\n};\r\n\r\nexport const parents = {\r\n  CASH: 1,\r\n  ACCOUNTS_RECEIVABLE: 2,\r\n  INVENTORY: 3,\r\n  OTHER_CURRENT_ASSETS: 4,\r\n  FIXED_ASSETS: 5,\r\n  ACCUMULATED_DEPRECIATION: 6,\r\n  ACCOUNTS_PAYABLE: 7,\r\n  OTHER_CURRENT_LIABILITIES: 8,\r\n  LONG_TERM_LIABILITIES: 9,\r\n  EQUITY_RETAINED_EARNINGS: 10,\r\n  EQUITY_DOESNT_CLOSE: 11,\r\n  EQUITY_GETS_CLOSED: 12,\r\n  INCOME: 13,\r\n  COST_OF_SALES: 14,\r\n  EXPENCES: 15,\r\n};\r\nexport const accountCodes = {\r\n  1: { min: 1000, max: 1099 },\r\n  2: { min: 1100, max: 1199 },\r\n  3: { min: 1200, max: 1299 },\r\n  4: { min: 1300, max: 1399 },\r\n  5: { min: 1400, max: 1499 },\r\n  6: { min: 1500, max: 1599 },\r\n  7: { min: 2000, max: 2099 },\r\n  8: { min: 2100, max: 2899 },\r\n  9: { min: 2900, max: 2999 },\r\n  10: { min: 3000, max: 3099 },\r\n  11: { min: 3100, max: 3199 },\r\n  12: { min: 3200, max: 3299 },\r\n  13: { min: 4000, max: 4999 },\r\n  14: { min: 5000, max: 5999 },\r\n  15: { min: 6000, max: 6999 },\r\n};\r\n\r\nexport const parentsAccounts = {\r\n  CASH: {\r\n    parentcode: parents.CASH,\r\n    parent: \"CASH\",\r\n    parentAr: \"النقدية\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_RECEIVABLE: {\r\n    parentcode: parents.ACCOUNTS_RECEIVABLE,\r\n    parent: \"ACCOUNTS RECEIVABLE\",\r\n    parentAr: \"المدينون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INVENTORY: {\r\n    parentcode: parents.INVENTORY,\r\n    parent: \"INVENTORY\",\r\n    parentAr: \"المخزون\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_ASSETS: {\r\n    parentcode: parents.OTHER_CURRENT_ASSETS,\r\n    parent: \"OTHER CURRENT ASSETS\",\r\n    parentAr: \"حسابات مدينة أخرى\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  FIXED_ASSETS: {\r\n    parentcode: parents.FIXED_ASSETS,\r\n    parent: \"FIXED ASSETS\",\r\n    parentAr: \"الأصول الثابتة\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCUMULATED_DEPRECIATION: {\r\n    parentcode: parents.ACCUMULATED_DEPRECIATION,\r\n    parent: \"ACCUMULATED DEPRECIATION\",\r\n    parentAr: \"الاهلاك المجمع\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  ACCOUNTS_PAYABLE: {\r\n    parentcode: parents.ACCOUNTS_PAYABLE,\r\n    parent: \"ACCOUNTS PAYABLE\",\r\n    parentAr: \"الدائنون\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  OTHER_CURRENT_LIABILITIES: {\r\n    parentcode: parents.OTHER_CURRENT_LIABILITIES,\r\n    parent: \"OTHER CURRENT LIABILITIES\",\r\n    parentAr: \"حسابات دائنة أخرى\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  LONG_TERM_LIABILITIES: {\r\n    parentcode: parents.LONG_TERM_LIABILITIES,\r\n    parent: \"LONG TERM LIABILITIES\",\r\n    parentAr: \"قروض طويلة الاجل\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_RETAINED_EARNINGS: {\r\n    parentcode: parents.EQUITY_RETAINED_EARNINGS,\r\n    parent: \"EQUITY RETAINED EARNINGS\",\r\n    parentAr: \"حقوق الملكية - الأرباح المحتجزة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_DOESNT_CLOSE: {\r\n    parentcode: parents.EQUITY_DOESNT_CLOSE,\r\n    parent: \"EQUITY DOESNT CLOSE\",\r\n    parentAr: \"حقوق الملكية - غير المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  EQUITY_GETS_CLOSED: {\r\n    parentcode: parents.EQUITY_GETS_CLOSED,\r\n    parent: \"EQUITY GETS CLOSED\",\r\n    parentAr: \"حقوق الملكية - المغلقة\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.BALNCE_SHEET,\r\n  },\r\n  INCOME: {\r\n    parentcode: parents.INCOME,\r\n    parent: \"INCOME\",\r\n    parentAr: \"الإيرادات\",\r\n    accType: accountType.CREDIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  COST_OF_SALES: {\r\n    parentcode: parents.COST_OF_SALES,\r\n    parent: \"COST OF SALES\",\r\n    parentAr: \"تكلفة المبيعات\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n  EXPENCES: {\r\n    parentcode: parents.EXPENCES,\r\n    parent: \"EXPENCES\",\r\n    parentAr: \"المصاريف\",\r\n    accType: accountType.DEBIT,\r\n    closedAcc: closedAccounts.INCOME_STATEMENT,\r\n  },\r\n};\r\n\r\nexport const parentsAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.INVENTORY },\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.ACCOUNTS_PAYABLE },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n  { ...parentsAccounts.INCOME },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.EXPENCES },\r\n];\r\n\r\nexport const parentsBasicAccountsList = [\r\n  { ...parentsAccounts.CASH },\r\n  { ...parentsAccounts.OTHER_CURRENT_LIABILITIES },\r\n];\r\nexport const parentsSalesAccountsList = [\r\n  { ...parentsAccounts.ACCOUNTS_RECEIVABLE },\r\n  { ...parentsAccounts.COST_OF_SALES },\r\n  { ...parentsAccounts.INCOME },\r\n];\r\n\r\nexport const parentsPurAccountsList = [{ ...parentsAccounts.ACCOUNTS_PAYABLE }];\r\nexport const parentsExpAccountsList = [{ ...parentsAccounts.EXPENCES }];\r\nexport const parentsInvAccountsList = [{ ...parentsAccounts.INVENTORY }];\r\n\r\nexport const parentsGeneralAccountsList = [\r\n  { ...parentsAccounts.OTHER_CURRENT_ASSETS },\r\n  { ...parentsAccounts.FIXED_ASSETS },\r\n  { ...parentsAccounts.ACCUMULATED_DEPRECIATION },\r\n  { ...parentsAccounts.LONG_TERM_LIABILITIES },\r\n  { ...parentsAccounts.EQUITY_RETAINED_EARNINGS },\r\n  { ...parentsAccounts.EQUITY_DOESNT_CLOSE },\r\n  { ...parentsAccounts.EQUITY_GETS_CLOSED },\r\n];\r\n\r\nexport const accountCode = {\r\n  cash_on_hand: 1000,\r\n  card: 1010, //\r\n  bank: 1020, //\r\n  accounts_receivable: 1100,\r\n  inventory: 1200,\r\n  accounts_payable: 2000,\r\n\r\n  sales_income: 4000,\r\n  purchase_discount: 4100,\r\n  purchase_returns: 4200,\r\n  sales_income_other: 4500, //\r\n\r\n  accrued_expenses: 2100,\r\n  partner_current_acc: 2800,\r\n  cost_of_sales: 5000,\r\n  purchase_nonstock: 5050,\r\n  sales_discount: 5100,\r\n  sales_returns: 5200,\r\n  cost_of_sales_other: 5500, //\r\n\r\n  expenses_legal: 6000,\r\n  expenses_salary: 6100,\r\n  expenses_rent: 6200, //\r\n  expenses_other: 6500, //\r\n\r\n  other_current_assets: 1300,\r\n  fixed_assets: 1400,\r\n  accumulated_depreciation: 1500,\r\n  long_term_liabilities: 2900,\r\n  retained_earnings: 3000,\r\n  paid_in_capital: 3100,\r\n  dividends_paid: 3200,\r\n};\r\n\r\nexport const accounts = {\r\n  cash: {\r\n    code: accountCode.cash_on_hand,\r\n    name: \"Cash\",\r\n    nameAr: \"الصندوق\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  card: {\r\n    code: accountCode.card,\r\n    name: \"Card\",\r\n    nameAr: \"بطاقة\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  bank: {\r\n    code: accountCode.bank,\r\n    name: \"Bank\",\r\n    nameAr: \"البنك\",\r\n    ...parentsAccounts.CASH,\r\n  },\r\n  accounts_receivable: {\r\n    code: accountCode.accounts_receivable,\r\n    name: \"Accounts Receivable\",\r\n    nameAr: \"المدينون\",\r\n    ...parentsAccounts.ACCOUNTS_RECEIVABLE,\r\n  },\r\n  inventory: {\r\n    code: accountCode.inventory,\r\n    name: \"inventory\",\r\n    nameAr: \"المخزون\",\r\n    ...parentsAccounts.INVENTORY,\r\n  },\r\n  accounts_payable: {\r\n    code: accountCode.accounts_payable,\r\n    name: \"Accounts Payable\",\r\n    nameAr: \"الدائنون\",\r\n    ...parentsAccounts.ACCOUNTS_PAYABLE,\r\n  },\r\n  sales_income: {\r\n    code: accountCode.sales_income,\r\n    name: \"Sales Income\",\r\n    nameAr: \"ايراد المبيعات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_discount: {\r\n    code: accountCode.purchase_discount,\r\n    name: \"Purchase Discount\",\r\n    nameAr: \"خصم المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  purchase_returns: {\r\n    code: accountCode.purchase_returns,\r\n    name: \"Purchase Returns\",\r\n    nameAr: \"مردودات المشتريات\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  sales_income_other: {\r\n    code: accountCode.sales_income_other,\r\n    name: \"Other Sales Income\",\r\n    nameAr: \"إيرادات اخرى\",\r\n    ...parentsAccounts.INCOME,\r\n  },\r\n  partner_current_acc: {\r\n    code: accountCode.partner_current_acc,\r\n    name: \"Partner Current Account\",\r\n    nameAr: \"حساب جاري - الشريك\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  accrued_expenses: {\r\n    code: accountCode.accrued_expenses,\r\n    name: \"Accrued Expenses\",\r\n    nameAr: \"النفقات المستحقة\",\r\n    ...parentsAccounts.OTHER_CURRENT_LIABILITIES,\r\n  },\r\n  cost_of_sales: {\r\n    code: accountCode.cost_of_sales,\r\n    name: \"Cost Of Sales\",\r\n    nameAr: \"تكلفة المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  purchase_nonstock: {\r\n    code: accountCode.purchase_nonstock,\r\n    name: \"Purchase\",\r\n    nameAr: \"المشتريات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_discount: {\r\n    code: accountCode.sales_discount,\r\n    name: \"Sales Discount\",\r\n    nameAr: \"خصم المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  sales_returns: {\r\n    code: accountCode.sales_returns,\r\n    name: \"Sales Returns\",\r\n    nameAr: \"مردودات المبيعات\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  cost_of_sales_other: {\r\n    code: accountCode.cost_of_sales_other,\r\n    name: \"Other Cost Of sales\",\r\n    nameAr: \"تكاليف مبيعات اخرى\",\r\n    ...parentsAccounts.COST_OF_SALES,\r\n  },\r\n  expenses_legal: {\r\n    code: accountCode.expenses_legal,\r\n    name: \"Legal Expenses\",\r\n    nameAr: \"مصاريف قانونية\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_salary: {\r\n    code: accountCode.expenses_salary,\r\n    name: \"Salary Expenses\",\r\n    nameAr: \"مصاريف الرواتب\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_rent: {\r\n    code: accountCode.expenses_rent,\r\n    name: \"Rent Expenses\",\r\n    nameAr: \"مصاريف الإيجار\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  expenses_other: {\r\n    code: accountCode.expenses_other,\r\n    name: \"Other Expenses\",\r\n    nameAr: \"مصاريف اخرى\",\r\n    ...parentsAccounts.EXPENCES,\r\n  },\r\n  other_current_assets: {\r\n    code: accountCode.other_current_assets,\r\n    name: \"Prepaid Expenses\",\r\n    nameAr: \"مصاريف مقدمة\",\r\n    ...parentsAccounts.OTHER_CURRENT_ASSETS,\r\n  },\r\n  fixed_assets: {\r\n    code: accountCode.fixed_assets,\r\n    name: \"Property and Equipment\",\r\n    nameAr: \"ممتلكات ومعدات\",\r\n    ...parentsAccounts.FIXED_ASSETS,\r\n  },\r\n  accumulated_depreciation: {\r\n    code: accountCode.accumulated_depreciation,\r\n    name: \"Accum. Depr. - Property and Equipment\",\r\n    nameAr: \"مجمع اهلاك الممتلكات المعدات\",\r\n    ...parentsAccounts.ACCUMULATED_DEPRECIATION,\r\n  },\r\n  long_term_liabilities: {\r\n    code: accountCode.long_term_liabilities,\r\n    name: \"Long Term Liabilities\",\r\n    nameAr: \"قروض طويلة الاجل\",\r\n    ...parentsAccounts.LONG_TERM_LIABILITIES,\r\n  },\r\n  retained_earnings: {\r\n    code: accountCode.retained_earnings,\r\n    name: \"Retained Earnings\",\r\n    nameAr: \"الأرباح المحتجزة\",\r\n    ...parentsAccounts.EQUITY_RETAINED_EARNINGS,\r\n  },\r\n  paid_in_capital: {\r\n    code: accountCode.paid_in_capital,\r\n    name: \"Paid In Capital\",\r\n    nameAr: \"رأس المال المدفوع\",\r\n    ...parentsAccounts.EQUITY_DOESNT_CLOSE,\r\n  },\r\n  dividends_paid: {\r\n    code: accountCode.dividends_paid,\r\n    name: \"Dividends Paid\",\r\n    nameAr: \"الأرباح الموزعة\",\r\n    ...parentsAccounts.EQUITY_GETS_CLOSED,\r\n  },\r\n};\r\n\r\nexport const initAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.inventory },\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.partner_current_acc },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n\r\n// basic_income\r\nexport const initBasicAccounts = [\r\n  { ...accounts.cash },\r\n  { ...accounts.card },\r\n  { ...accounts.bank },\r\n  { ...accounts.partner_current_acc },\r\n];\r\n// sales_income\r\n\r\nexport const initSalesAccounts = [\r\n  { ...accounts.accounts_receivable },\r\n  { ...accounts.sales_income },\r\n  { ...accounts.sales_discount },\r\n  { ...accounts.sales_returns },\r\n  { ...accounts.sales_income_other },\r\n];\r\n\r\n// cost_of_sales\r\nexport const initPurAccounts = [\r\n  { ...accounts.accounts_payable },\r\n  { ...accounts.cost_of_sales },\r\n  { ...accounts.purchase_nonstock },\r\n  { ...accounts.purchase_discount },\r\n  { ...accounts.purchase_returns },\r\n  { ...accounts.cost_of_sales_other },\r\n];\r\n\r\n// Exprense\r\nexport const initExpAccounts = [\r\n  { ...accounts.expenses_legal },\r\n  { ...accounts.expenses_salary },\r\n  { ...accounts.expenses_rent },\r\n  { ...accounts.expenses_other },\r\n];\r\n\r\n// inventory\r\nexport const initInvAccounts = [{ ...accounts.inventory }];\r\n\r\n// General Accounting\r\nexport const initGeneralAccounts = [\r\n  { ...accounts.accrued_expenses },\r\n  { ...accounts.other_current_assets },\r\n  { ...accounts.fixed_assets },\r\n  { ...accounts.accumulated_depreciation },\r\n  { ...accounts.long_term_liabilities },\r\n  { ...accounts.retained_earnings },\r\n  { ...accounts.paid_in_capital },\r\n  { ...accounts.dividends_paid },\r\n];\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as Tafgeet from \"tafgeetjs\";\r\nimport { mainmenu } from \"../constants\";\r\nimport { systemTypes } from \"../constants/branch\";\r\nimport {\r\n  parentsBasicAccountsList,\r\n  parentsExpAccountsList,\r\n  parentsGeneralAccountsList,\r\n  parentsInvAccountsList,\r\n  parentsPurAccountsList,\r\n  parentsSalesAccountsList,\r\n} from \"../constants/kaid\";\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\nexport const isElectron = userAgent.indexOf(\" electron/\") > -1;\r\n\r\nexport const isDEV =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const getResourses = (\r\n  resourse: any,\r\n  fieldName: any,\r\n  title: any,\r\n  isRTL = true\r\n) => {\r\n  const instances = resourse.map((res: any) => {\r\n    return {\r\n      text: isRTL ? res.nameAr : res.name,\r\n      id: res._id ? res._id : res.id,\r\n      color: res.color,\r\n    };\r\n  });\r\n  const resourses = [\r\n    {\r\n      fieldName,\r\n      title,\r\n      instances,\r\n    },\r\n  ];\r\n  return resourses;\r\n};\r\n\r\nexport const nameToColor = (name: string, s = 70, l = 40) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  const h = hash % 360;\r\n  return \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\";\r\n};\r\n\r\nexport const groupBy = (list: any, fld: any) => {\r\n  if (list) {\r\n    const result = list.reduce(function (r: any, a: any) {\r\n      r[a[fld]] = r[a[fld]] || [];\r\n      r[a[fld]].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  }\r\n};\r\n\r\nconst isValidMenu = (menu: any, systems: any) => {\r\n  if (menu.req === null || systems.includes(menu.req)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterMenu = (systems: any) => {\r\n  const fmenu = mainmenu.map((mnu: any) => {\r\n    const isValidMain = isValidMenu(mnu, systems);\r\n    if (isValidMain) {\r\n      if (mnu.subMenu) {\r\n        const smns = mnu.subMenu.map((sm: any) => {\r\n          const isValid = isValidMenu(sm, systems);\r\n          if (isValid) {\r\n            return sm;\r\n          }\r\n        });\r\n        const submenus = smns.filter((x: any) => x);\r\n        mnu.subMenu = submenus;\r\n        return mnu;\r\n      } else {\r\n        return mnu;\r\n      }\r\n    }\r\n  });\r\n  const finalmenu = fmenu.filter((x: any) => x);\r\n  return finalmenu;\r\n};\r\n\r\nexport const getparentAccounts = (systems: any) => {\r\n  const basic = parentsBasicAccountsList;\r\n  const sales = systems?.includes(systemTypes.pos)\r\n    ? parentsSalesAccountsList\r\n    : [];\r\n  const purchase = systems?.includes(systemTypes.pur)\r\n    ? parentsPurAccountsList\r\n    : [];\r\n  const inventory = systems?.includes(systemTypes.inv)\r\n    ? parentsInvAccountsList\r\n    : [];\r\n  const expenses = systems?.includes(systemTypes.exp)\r\n    ? parentsExpAccountsList\r\n    : [];\r\n  const general = systems?.includes(systemTypes.acc || systemTypes.ass)\r\n    ? parentsGeneralAccountsList\r\n    : [];\r\n  const pList = [\r\n    ...basic,\r\n    ...sales,\r\n    ...purchase,\r\n    ...inventory,\r\n    ...expenses,\r\n    ...general,\r\n  ];\r\n  const numberlist = pList.map((pl: any) => pl.parentcode);\r\n  return numberlist;\r\n};\r\n\r\nexport const getEventsList = ({ event, rrule, actionslist, isRTL }) => {\r\n  if (!rrule) {\r\n    return [event];\r\n  } else {\r\n    const starthour = event.startDate.getHours();\r\n    const startminute = event.startDate.getMinutes();\r\n    const endhour = event.endDate.getHours();\r\n    const endminute = event.endDate.getMinutes();\r\n    const dates = rrule.all;\r\n    const ritems = JSON.parse(event.items);\r\n    const isTitle = event?.title && event?.title?.trim()?.length > 0;\r\n    const title = isTitle\r\n      ? event?.title\r\n      : isRTL\r\n      ? ritems[0]?.nameAr\r\n      : ritems[0]?.name;\r\n    const list = dates.map((da: any) => {\r\n      const year = da.getFullYear();\r\n      const month = da.getMonth();\r\n      const day = da.getDate();\r\n      const startDate = new Date(year, month, day, starthour, startminute);\r\n      const endDate = new Date(year, month, day, endhour, endminute, 0, 0);\r\n\r\n      const actionsl = actionslist.map((al: any) => {\r\n        const { timeunit, timerelate, qty } = al;\r\n        const sendtime = getSendTime({\r\n          startDate,\r\n          endDate,\r\n          timeunit,\r\n          timerelate,\r\n          qty,\r\n        });\r\n        return {\r\n          ...al,\r\n          sendtime,\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...event,\r\n        title,\r\n        actions: JSON.stringify(actionsl),\r\n        startDate,\r\n        endDate,\r\n      };\r\n    });\r\n    return list;\r\n  }\r\n};\r\n\r\nexport const getSendTime = ({\r\n  startDate,\r\n  endDate,\r\n  timeunit,\r\n  timerelate,\r\n  qty,\r\n}: any) => {\r\n  const baseTime =\r\n    timerelate === \"bstart\" || timerelate === \"astart\" ? startDate : endDate;\r\n  const isPlus = timerelate === \"bstart\" ? false : true;\r\n  const unitms =\r\n    timeunit === \"minute\"\r\n      ? 1000 * 60\r\n      : timeunit === \"hour\"\r\n      ? 1000 * 60 * 60\r\n      : timeunit === \"day\"\r\n      ? 1000 * 60 * 60 * 24\r\n      : 0;\r\n  const fms = isPlus ? unitms * qty : -(unitms * qty);\r\n  const final = new Date(baseTime).getTime() + fms;\r\n  return new Date(final);\r\n};\r\n\r\nexport const tafkeet = (number: any) => {\r\n  const stringText = new Tafgeet(number, \"QAR\").parse();\r\n  return stringText;\r\n};\r\n","import { operationTypes } from \".\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const groupList = (isRTL: any) => [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: isRTL ? \"بدون تجميع\" : \"No Grouping\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"employee\",\r\n    name: isRTL ? \"تجميع بحسب الموظف\" : \"Group By Employee\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"department\",\r\n    name: isRTL ? \"تجميع بحسب القسم\" : \"Group By Department\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"service\",\r\n    name: isRTL ? \"تجميع بحسب الخدمة\" : \"Group By Service\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"customer\",\r\n    name: isRTL ? \"تجميع بحسب العميل\" : \"Group By Customer\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"category\",\r\n    name: isRTL ? \"تجميع بحسب التصنيف\" : \"Group By Category\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"status\",\r\n    name: isRTL ? \"تجميع بحسب الحالة\" : \"Group By status\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"taskId\",\r\n    name: isRTL ? \"تجميع بحسب المهمة\" : \"Group By Operation\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"opType\",\r\n    name: isRTL ? \"تجميع بحسب الوثيقة\" : \"Group By Document\",\r\n  },\r\n];\r\n\r\nexport const documentTypes = [\r\n  {\r\n    id: 1,\r\n    value: \"none\",\r\n    name: \"All\",\r\n    nameAr: \"الكل\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: operationTypes.event,\r\n    name: \"Appointment\",\r\n    nameAr: \"المواعيد\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: operationTypes.salesInvoice,\r\n    name: \"Invoice\",\r\n    nameAr: \"الفواتير\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: operationTypes.customerReceipt,\r\n    name: \"Receipt\",\r\n    nameAr: \"المقبوض\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: operationTypes.expenses,\r\n    name: \"Expenses\",\r\n    nameAr: \"المصروف\",\r\n  },\r\n];\r\n\r\nexport const sectionTypes = [\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    name: \"Managment\",\r\n    nameAr: \"اداري\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    name: \"Operational\",\r\n    nameAr: \"فني\",\r\n  },\r\n];\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function Avatar({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(`${uname}Jadwal`) : \"\";\r\n  const names = uname ? uname.split(\" \") : \"\";\r\n  let letters = \"\";\r\n  if (names.length > 1) {\r\n    uname\r\n      ? (letters = `${names[0]\r\n          .substring(0, 1)\r\n          .toUpperCase()}${names[1].substring(0, 1).toUpperCase()}`)\r\n      : (letters = \"\");\r\n  } else {\r\n    uname ? (letters = uname.substring(0, 2).toUpperCase()) : (letters = \"\");\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            color: \"#eee\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: size / 2 - size / 8,\r\n          }}\r\n        >\r\n          {letters}\r\n        </Typography>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { nameToColor } from \"../common\";\r\n\r\nexport default function AvatarColor({\r\n  name,\r\n  username,\r\n  size = 40,\r\n  bc = \"#ddd\",\r\n  bg,\r\n}: any) {\r\n  const uname = name ? name : username;\r\n  const color = bg ? bg : uname ? nameToColor(uname) : \"\";\r\n\r\n  return (\r\n    <Tooltip title={uname ? uname : \"\"}>\r\n      <Box\r\n        border={1}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor: color,\r\n          borderColor: bc,\r\n        }}\r\n      ></Box>\r\n    </Tooltip>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  CircularProgress,\r\n  colors,\r\n  fade,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  isBranchAdmin,\r\n  isEditor,\r\n  isSuperAdmin,\r\n  isSystemAdmin,\r\n  isViewer,\r\n} from \"../common/roles\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { getTaskName } from \"../constants/branch\";\r\nimport {\r\n  eventColors,\r\n  eventStatus,\r\n  operationNames,\r\n  opTypesNames,\r\n  weekdaysObj,\r\n} from \"../constants/datatypes\";\r\nimport { actionType } from \"../constants/kaid\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { getStoreItem } from \"../store\";\r\nimport Avatar from \"./Avatar\";\r\nimport AvatarColor from \"./AvatarColor\";\r\n\r\nexport const colorPatternFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n      ...employeeColorStyle,\r\n    }}\r\n  />\r\n);\r\nexport const colorFormatter = ({ value }) => (\r\n  <Box\r\n    style={{\r\n      width: 100,\r\n      height: 20,\r\n      backgroundColor: value,\r\n    }}\r\n  />\r\n);\r\nexport const daysoffFormatter = ({ value, isRTL }: any) => {\r\n  let days: any;\r\n  if (value) {\r\n    const obj = JSON.parse(value);\r\n    days = Object.keys(obj).filter((k) => obj[k] === true);\r\n  }\r\n  if (days) {\r\n    return (\r\n      <Box>\r\n        {days.map((day: any) => {\r\n          return (\r\n            <span key={day} style={{ marginRight: 2, marginLeft: 2 }}>\r\n              {isRTL ? weekdaysObj[day]?.nameAr : weekdaysObj[day]?.name}{\" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  } else {\r\n    <Box>{value}</Box>;\r\n  }\r\n  return <Box></Box>;\r\n};\r\nexport const rolesFormatter = ({ value, row, isRTL }: any) => {\r\n  const user = { ...row, roles: JSON.parse(value) };\r\n  if (isSuperAdmin(user)) {\r\n    return <Box>{isRTL ? \"الأدمن\" : \"Main Admin\"}</Box>;\r\n  }\r\n  if (isBranchAdmin(user)) {\r\n    return <Box>{isRTL ? \"مدير الفرع\" : \"Branch Admin\"}</Box>;\r\n  }\r\n\r\n  if (isSystemAdmin(user, \"cal\") || isSystemAdmin(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"مدير حساب\" : \"Account Admin\"}</Box>;\r\n  }\r\n  if (isEditor(user, \"cal\") || isEditor(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"محرر\" : \"Editor\"}</Box>;\r\n  }\r\n  if (isViewer(user, \"cal\") || isViewer(user, \"pos\")) {\r\n    return <Box>{isRTL ? \"زائر\" : \"Viewer\"}</Box>;\r\n  }\r\n\r\n  return <Box></Box>;\r\n};\r\n\r\nexport const avatarPatternFormatter = ({ row }: any) => {\r\n  const { name, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <AvatarColor name={name} bg={color}></AvatarColor>\r\n    </Box>\r\n  );\r\n};\r\nexport const sectionsTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const nameObj = sectionTypes.filter((st: any) => st.value === value)?.[0];\r\n  const name = nameObj ? (lang === \"ar\" ? nameObj.nameAr : nameObj.name) : \"\";\r\n\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const avatarFormatter = ({ row }: any) => {\r\n  const { name, username, color } = row;\r\n\r\n  return (\r\n    <Box>\r\n      <Avatar username={username} name={name} bg={color}></Avatar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arabicFormatter = ({ value }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: \"1.1em\", fontWeight: \"bold\" }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\nexport const activeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  return (\r\n    <Typography style={{ color: !value ? \"green\" : \"red\" }}>\r\n      {!value\r\n        ? lang === \"ar\"\r\n          ? \"فعال\"\r\n          : \"Active\"\r\n        : lang === \"ar\"\r\n        ? \"معطل\"\r\n        : \"Inactive\"}\r\n    </Typography>\r\n  );\r\n};\r\nexport const covertToDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDate = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeDateDigit = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const covertToTimeOnly = (time: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(\"en-QA\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayTimeFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDay = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateDayWeek = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const getDateFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nexport const getDateMonthFormat = (time: any, isRTL: any) => {\r\n  if (time) {\r\n    const date = new Date(time);\r\n    return date.toLocaleString(isRTL ? \"ar-QA\" : \"en-GB\", {\r\n      month: \"long\",\r\n      year: \"numeric\",\r\n    });\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const timeFormatter = ({ row }: any) => {\r\n  const { time } = row;\r\n  return <div>{covertToDate(time)}</div>;\r\n};\r\nexport const documentTimeFormatter = ({ row }: any) => {\r\n  const { time, startDate } = row;\r\n  const value = row.opType === 80 ? startDate : time;\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\n\r\nexport const createdAtFormatter = ({ value }: any) => {\r\n  return <div>{covertToDate(value)}</div>;\r\n};\r\nexport const fromToFormatter = ({ row }: any) => {\r\n  const start = covertToTimeOnly(row.startDate);\r\n  const end = covertToTimeOnly(row.endDate);\r\n  return (\r\n    <div>\r\n      {start} {end}\r\n    </div>\r\n  );\r\n};\r\nexport const actionTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDateDigit(value)}</div>;\r\n};\r\nexport const createdAtPrintFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{covertToDate(value)}</div>;\r\n};\r\nexport const dateTimePrintFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div style={{ fontSize: 12 }}>{covertToTimeOnly(startDate)}</div>;\r\n};\r\nexport const eventStatusPrintFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <div style={{ color: eventColors[value], fontSize: 12 }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const currencyPrintFormatter = ({ value }: any) => {\r\n  return (\r\n    <div style={{ color: \"#403795\", fontSize: 12 }}>{moneyFormat(value)}</div>\r\n  );\r\n};\r\nexport const samllFormatter = ({ value }: any) => {\r\n  return <div style={{ fontSize: 12 }}>{value}</div>;\r\n};\r\nexport const departmentFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL\r\n        ? row?.department?.departmentNameAr\r\n        : row?.department?.departmentName}\r\n    </div>\r\n  );\r\n};\r\nexport const employeeFormatter = ({ row, isRTL }: any) => {\r\n  return (\r\n    <div>\r\n      {isRTL ? row?.employee?.employeeNameAr : row?.employee?.employeeName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const dateTimeFormatter = ({ row }: any) => {\r\n  const { startDate } = row;\r\n  return <div>{covertToTimeOnly(startDate)}</div>;\r\n};\r\n\r\nexport const valueTimeFormatter = ({ value }: any) => {\r\n  return <div>{covertToTimeDate(value)}</div>;\r\n};\r\nexport const eventStatusFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return (\r\n      <span style={{ color: eventColors[value] }}>\r\n        {lang === \"ar\" ? item[0].nameAr : item[0].name}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport const taskStatusFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 18,\r\n        height: 18,\r\n        borderRadius: 9,\r\n        backgroundColor: value === 10 ? \"#39a539a0\" : \"#ffffff0\",\r\n      }}\r\n    >\r\n      {value === 1 && (\r\n        <CircularProgress style={{ color: \"#9958ac9b\" }} size={16} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport const eventStatusPrintDataFormatter = (value) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const item = eventStatus.filter((es: any) => es.id === value);\r\n  if (item && item.length > 0) {\r\n    return lang === \"ar\" ? item[0].nameAr : item[0].name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const moneyFormat = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"0.00\";\r\n};\r\nexport const moneyFormatEmpty = (amount: number) => {\r\n  if (amount) {\r\n    if (!isNaN(amount)) {\r\n      return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const simpleDateFormatter = (time: any) => {\r\n  return (\r\n    <div>\r\n      {new Date(time).toLocaleString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const moneyFormatSimple = (amount: number) => {\r\n  if (amount) {\r\n    return amount.toFixed(0).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  } else {\r\n    return \"0\";\r\n  }\r\n};\r\n\r\nexport const amountFormatter = ({ row }: any) => {\r\n  const { total, discount } = row;\r\n  const amount = total - discount;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(amount)}</div>;\r\n};\r\nexport const currencyFormatter = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormat(value)}</span>;\r\n};\r\nexport const currencyFormatterEmpty = ({ value }: any) => {\r\n  return <span style={{ color: \"#403795\" }}>{moneyFormatEmpty(value)}</span>;\r\n};\r\n\r\nexport const dueAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row.totalpaid ? row.totalpaid : 0;\r\n  const due = totalinvoiced - totalpaid;\r\n  if (due) {\r\n    return (\r\n      <span style={{ color: colors.red[400] }}>{moneyFormatEmpty(due)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const incomeAmountFormatter = ({ row }: any) => {\r\n  const totalinvoiced = row.totalinvoiced ? row.totalinvoiced : 0;\r\n  const toatlExpenses = row.toatlExpenses ? row.toatlExpenses : 0;\r\n  const inc = totalinvoiced - toatlExpenses;\r\n  if (inc) {\r\n    return (\r\n      <span style={{ color: colors.green[800] }}>{moneyFormatEmpty(inc)}</span>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\nexport const doneFormatter = ({ row, editEvent }: any) => {\r\n  const status = row.status === 10 ? 2 : 10;\r\n  const id = row.id;\r\n  const variables = { id, status };\r\n  return (\r\n    <span>\r\n      <Checkbox\r\n        style={{ padding: 5, color: colors.blue[500] }}\r\n        checked={row.status === 10}\r\n        onChange={async (e: any) => {\r\n          await editEvent({\r\n            variables,\r\n            optimisticResponse: {\r\n              __typename: \"updateEvent\",\r\n              updateEvent: {\r\n                __typename: \"Operation\",\r\n                id,\r\n                ...row,\r\n                ...variables,\r\n              },\r\n            },\r\n          });\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\nexport const invoiceReceiptFormatter = ({ value, row }: any) => {\r\n  const { amount } = row;\r\n  const valuePercent = (value / amount) * 100;\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: valuePercent,\r\n          height: 15,\r\n          backgroundColor: fade(colors.green[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 30 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? moneyFormat(value) : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdFormatter = ({ value, tasks }: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value);\r\n  if (task && task.length > 0) {\r\n    return <span style={{ color: \"#403795\" }}>{task[0].title}</span>;\r\n  } else {\r\n    return <span style={{ color: \"#403795\" }}></span>;\r\n  }\r\n};\r\n\r\nexport const nameLinkFormat = ({ row, value, setItem, setOpenItem }: any) => {\r\n  return (\r\n    <Box\r\n      onClick={() => {\r\n        setItem(row);\r\n        setOpenItem(true);\r\n      }}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          fontSize: 13,\r\n          textAlign: \"start\",\r\n          color: colors.deepPurple[500],\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const taskIdLinkFormat = ({\r\n  value,\r\n  tasks,\r\n  setItem,\r\n  setOpenItem,\r\n  setName,\r\n}: any) => {\r\n  const task = tasks.filter((tsk: any) => tsk.id === value)?.[0];\r\n  if (task) {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setItem(task);\r\n          setName(\"task\");\r\n          setOpenItem(true);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 13,\r\n            textAlign: \"start\",\r\n            color: colors.deepPurple[500],\r\n          }}\r\n        >\r\n          {task.title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <span></span>;\r\n  }\r\n};\r\n\r\nexport const taskNameFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\";\r\n  return (\r\n    <span style={{ color: \"#403795\" }}>\r\n      {getTaskName({ id: value, isRTL })}\r\n    </span>\r\n  );\r\n};\r\nexport const progressFormatter = ({ value }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        width: 100,\r\n        height: 15,\r\n        backgroundColor: \"#ddd\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: value,\r\n          height: 15,\r\n          backgroundColor: fade(colors.blue[500], 0.5),\r\n        }}\r\n      ></Box>\r\n      <Box style={{ position: \"relative\", bottom: 17, right: 40 }}>\r\n        <Typography\r\n          style={{ direction: \"ltr\", fontWeight: \"bold\" }}\r\n          variant=\"caption\"\r\n        >\r\n          {value ? `${parseInt(value)}%` : \"\"}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport const deleteFormatter = ({ removeItem, row }: any) => {\r\n  return (\r\n    <span\r\n      onClick={removeItem(row.indx - 1)}\r\n      style={{ color: \"#ffffff\", padding: 5, backgroundColor: \"#e99393\" }}\r\n    >\r\n      X\r\n    </span>\r\n  );\r\n};\r\nexport const opTypeFormatter = ({ value }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const name =\r\n    lang === \"ar\" ? opTypesNames?.[value]?.nameAr : opTypesNames?.[value]?.name;\r\n  return <span>{name}</span>;\r\n};\r\nexport const actionTypeFormatter = ({ row }: any) => {\r\n  const name =\r\n    row.type === 1 ? row.phone : row.type === 2 ? row.email : \"Notification\";\r\n  return <span>{name}</span>;\r\n};\r\n\r\nexport const calculateAmount = (item: any) => {\r\n  const credit = item?.credit;\r\n  const debit = item?.debit;\r\n  const accType = item?.accType;\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n  return value;\r\n};\r\n\r\nexport const kaidAmountFormatter = ({ row }: any) => {\r\n  const credit = row?.credit;\r\n  const debit = row?.debit;\r\n  const accType = row?.accType;\r\n\r\n  const value =\r\n    accType === actionType.DEBIT && debit > 0\r\n      ? debit\r\n      : accType === actionType.DEBIT && credit > 0\r\n      ? -credit\r\n      : accType === actionType.CREDIT && credit > 0\r\n      ? credit\r\n      : accType === actionType.CREDIT && debit > 0\r\n      ? -debit\r\n      : 0;\r\n\r\n  return <div style={{ color: \"#403795\" }}>{moneyFormat(value)}</div>;\r\n};\r\n\r\nexport const getNameOfDocument = (opType: number) => {\r\n  const name = Object.keys(operationTypes).find(\r\n    (key) => operationTypes[key] === opType\r\n  );\r\n  if (name) {\r\n    return operationNames[name];\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const typeFormatter = ({ row }: any) => {\r\n  const { opType } = row;\r\n  const type = getNameOfDocument(opType);\r\n\r\n  return <div style={{ fontSize: 12 }}>{type}</div>;\r\n};\r\n\r\nexport const accountFormatter = (props: any, accounts: any, isRTL: any) => {\r\n  const account = accounts.filter((acc: any) => acc.code === props.value);\r\n  return (\r\n    <div style={{ fontSize: 14 }}>\r\n      {account && account.length > 0\r\n        ? isRTL\r\n          ? account[0].nameAr\r\n          : account[0].name\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const customerAccountFormatter = (\r\n  props: any,\r\n  accounts: any,\r\n  isRTL: any\r\n) => {\r\n  const customer =\r\n    props?.row?.customerId && props?.row?.creditAcc === 1100\r\n      ? isRTL\r\n        ? props?.row?.customerNameAr\r\n        : props?.row?.customerName\r\n      : undefined;\r\n  if (customer) {\r\n    return <div style={{ fontSize: 14 }}>{customer}</div>;\r\n  } else {\r\n    const account = accounts.filter((acc: any) => acc.code === props.value);\r\n\r\n    return (\r\n      <div style={{ fontSize: 14 }}>\r\n        {account && account.length > 0\r\n          ? isRTL\r\n            ? account[0].nameAr\r\n            : account[0].name\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport const employeeColorStyle = {\r\n  // backgroundImage:\r\n  //   \"linear-gradient(180deg,transparent 50%, rgba(255,255,255,0.9) 50%)\",\r\n  // backgroundSize: \"1px 5px\",\r\n};\r\nexport const mainBackgroud = {\r\n  backgroundColor: \"#ecf1fa\",\r\n  // opacity: \"0.3\",\r\n  backgroundImage:\r\n    \"radial-gradient(#D0D7F1 0.75px, transparent 0.75px), radial-gradient(#D0D7F1 0.75px, #ecf1fa 0.75px)\",\r\n  backgroundSize: \"30px 30px\",\r\n  backgroundPosition: \"0 0,15px 15px\",\r\n};\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(90deg, transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color:white;\r\n// background-image: linear-gradient(90deg, rgba(200,0,0,.5) 50%, transparent 50%),\r\n// linear-gradient(rgba(200,0,0,.5) 50%, transparent 50%);\r\n// background-size:50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: linear-gradient(transparent 50%, rgba(255,255,255,.5) 50%);\r\n// background-size: 50px 50px;\r\n\r\n// background-color: gray;\r\n// background-image: repeating-linear-gradient(45deg, transparent, transparent 35px, rgba(255,255,255,.5) 35px, rgba(255,255,255,.5) 70px);\r\n\r\n// background: linear-gradient(45deg, #dca 12%, transparent 0, transparent 88%, #dca 0),\r\n//     linear-gradient(135deg, transparent 37%, #a85 0, #a85 63%, transparent 0),\r\n//     linear-gradient(45deg, transparent 37%, #dca 0, #dca 63%, transparent 0) #753;\r\n//     background-size: 25px 25px;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport {\r\n  getDateDay,\r\n  getDateDayFormat,\r\n  getDateFormat,\r\n  getDateMonthFormat,\r\n} from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const periods = {\r\n  day: \"day\",\r\n  month: \"month\",\r\n  year: \"year\",\r\n};\r\n\r\nexport const getTarseedDates = () => {\r\n  const date = new Date();\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const startThisDay = new Date(year, month, day, 0, 0, 0, 0);\r\n\r\n  const pday1 = new Date(year, month, day - 1);\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const ppday1 = new Date(year, month, day - 2);\r\n  const ppmonth1 = new Date(\r\n    month < 2 ? year - 1 : year,\r\n    month === 0 ? 10 : month === 1 ? 11 : month - 2,\r\n    1\r\n  );\r\n  const ppyear1 = new Date(year - 2, 0, 1);\r\n\r\n  const pday = pday1.getDate();\r\n  const pdayMonth = pday1.getMonth();\r\n  const pdayYear = pday1.getFullYear();\r\n\r\n  const pmonth = pmonth1.getMonth();\r\n  const pmonthYear = pmonth1.getFullYear();\r\n\r\n  const pyear = pyear1.getFullYear();\r\n  const ppday = ppday1.getDate();\r\n  const ppmonth = ppmonth1.getMonth();\r\n  const ppyear = ppyear1.getFullYear();\r\n\r\n  const startDay = new Date(pday1);\r\n  startDay.setHours(0, 0, 0, 0);\r\n  const endDay = new Date(pday1);\r\n  endDay.setHours(23, 59, 59, 999);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  return {\r\n    day,\r\n    month,\r\n    year,\r\n    pday,\r\n    pmonth,\r\n    pyear,\r\n    ppday,\r\n    ppmonth,\r\n    ppyear,\r\n    startThisYear,\r\n    startThisMonth,\r\n    startThisDay,\r\n    startDay,\r\n    endDay,\r\n    startMonth,\r\n    endMonth,\r\n    startYear,\r\n    endYear,\r\n    pdayMonth,\r\n    pdayYear,\r\n    pmonthYear,\r\n  };\r\n};\r\n\r\nexport const getDaysMonthsArray = function (s: any, e: any) {\r\n  for (\r\n    var b: any = [], c: any = [], d = new Date(s);\r\n    d <= e;\r\n    d.setDate(d.getDate() + 1)\r\n  ) {\r\n    b.push({ m: d.getMonth(), y: d.getFullYear() });\r\n    c.push({ y: d.getFullYear() });\r\n  }\r\n\r\n  const mapmonth = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getListDaysMonthsYears = (time: any) =>\r\n  getDaysMonthsArray(new Date(time), new Date());\r\n\r\nexport const getLastDay = () => {\r\n  const day = new Date();\r\n  day.setDate(day.getDate() - 1);\r\n  return day.getDate();\r\n};\r\nexport const getLastMonth = () => {\r\n  const month = new Date();\r\n  month.setMonth(month.getMonth() - 1);\r\n  return month.getMonth();\r\n};\r\nexport const getLastYear = () => {\r\n  const year = new Date();\r\n  year.setFullYear(year.getFullYear() - 1);\r\n  return year.getFullYear();\r\n};\r\n\r\nexport const getPreviousDMY = () => {\r\n  const day = getLastDay();\r\n  const month = getLastMonth();\r\n  console.log(\"month\", month);\r\n\r\n  const year = getLastYear();\r\n  return { day, month, year };\r\n};\r\n\r\nexport const getStartPeriod = (period: any) => {\r\n  let start: any;\r\n  let num: any;\r\n\r\n  const date = new Date();\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, num };\r\n};\r\n\r\nexport const getLastPeriodInfo = (period: any) => {\r\n  if (period === periods.day) {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    const month = yesterday.getMonth() + 1; //months from 1-12\r\n    const day = yesterday.getDate();\r\n    const year = yesterday.getFullYear();\r\n\r\n    const start = new Date(yesterday.setHours(0, 0, 0, 0));\r\n    const end = new Date(yesterday.setHours(23, 59, 59, 999));\r\n    return { day, month, year, start, end };\r\n  }\r\n  if (period === periods.month) {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = 12;\r\n    const start =\r\n      month === 12 ? new Date(year - 1, 12, 1) : new Date(year, month - 1, 1);\r\n    const end =\r\n      month === 12\r\n        ? new Date(year - 1, 12 + 1, 0)\r\n        : new Date(year, month - 1 + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { month, year, start, end };\r\n  }\r\n  if (period === periods.year) {\r\n    const lastyear = new Date();\r\n    lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n    const year = lastyear.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    return { year, start, end };\r\n  }\r\n};\r\n\r\nexport const getStartEndPeriod = (period: any, date = new Date()) => {\r\n  let start: any;\r\n  let end: any;\r\n  let num: any;\r\n\r\n  if (period === periods.day) {\r\n    start = new Date();\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getDate();\r\n  }\r\n  if (period === periods.month) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    start = new Date(year, month, 1);\r\n    end = new Date(year, month + 1, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getMonth() + 1;\r\n  }\r\n  if (period === periods.year) {\r\n    start = new Date(date.getFullYear(), 0, 1, 0, 0, 0);\r\n    start.setHours(0, 0, 0, 0);\r\n    end = new Date(date.getFullYear(), 11, 31, 0, 0, 0);\r\n    end.setHours(23, 59, 59, 999);\r\n    num = start.getFullYear();\r\n  }\r\n  return { start, end, num };\r\n};\r\n\r\nexport const getPeriods = (period: any) => {\r\n  let start: any;\r\n  let end: any;\r\n  const date = new Date();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  const startThisYear = new Date(year, 0, 1, 0, 0, 0, 0);\r\n  const endThisYear = new Date(year, 11, 31, 23, 59, 59, 999);\r\n  const startThisMonth = new Date(year, month, 1, 0, 0, 0, 0);\r\n  const endThisMonth = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n\r\n  const pmonth1 = new Date(\r\n    month === 0 ? year - 1 : year,\r\n    month === 0 ? 11 : month - 1,\r\n    1\r\n  );\r\n  const pyear1 = new Date(year - 1, 0, 1);\r\n\r\n  const y = pmonth1.getFullYear();\r\n  const m = pmonth1.getMonth();\r\n  const startLastMonth = new Date(y, m, 1, 0, 0, 0, 0);\r\n  const endLastMonth = new Date(y, m + 1, 0, 23, 59, 59, 999);\r\n\r\n  const yy = pyear1.getFullYear();\r\n  const startLastYear = new Date(yy, 0, 1, 0, 0, 0, 0);\r\n  const endLastYear = new Date(yy, 11, 31, 23, 59, 59, 999);\r\n\r\n  if (period === \"cm\") {\r\n    start = startThisMonth;\r\n    end = endThisMonth;\r\n  }\r\n  if (period === \"pm\") {\r\n    start = startLastMonth;\r\n    end = endLastMonth;\r\n  }\r\n  if (period === \"cy\") {\r\n    start = startThisYear;\r\n    end = endThisYear;\r\n  }\r\n  if (period === \"py\") {\r\n    start = startLastYear;\r\n    end = endLastYear;\r\n  }\r\n  return { start, end };\r\n};\r\n\r\nexport const getStartEndEventView = ({ time, view, isRTL, endDate }: any) => {\r\n  if (view === \"Day\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDayFormat(time, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"3Days\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + 3);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Week\") {\r\n    const start = new Date(time);\r\n    const dayno = start.getDay();\r\n    const minnus = dayno === 6 ? 0 : dayno + 1;\r\n    const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n    start.setDate(start.getDate() - minnus);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = new Date(time);\r\n    end.setDate(end.getDate() + plus);\r\n    end.setHours(23, 59, 59, 999);\r\n    const year = start.getFullYear();\r\n    const period = `${getDateFormat(start, isRTL)} - ${getDateFormat(\r\n      end,\r\n      isRTL\r\n    )} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Month\") {\r\n    const date = new Date(time);\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, month + 1, 0, 23, 59, 59, 999);\r\n    const period = getDateMonthFormat(start, isRTL);\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Year\") {\r\n    const date = new Date(time);\r\n    const year = date.getFullYear();\r\n    const start = new Date(year, 0, 1, 0, 0, 0, 0);\r\n    const end = new Date(year, 11, 31, 23, 59, 59, 999);\r\n    const period = `${isRTL ? \"سنة\" : \"Year\"} ${year}`;\r\n    return { start, end, period };\r\n  }\r\n  if (view === \"Custom\") {\r\n    const start = new Date(time);\r\n    start.setHours(0, 0, 0, 0);\r\n    const end = endDate ? new Date(endDate) : new Date();\r\n    end.setHours(23, 59, 59, 999);\r\n    const period = getDateDay(time, isRTL);\r\n    const periodEnd = getDateDay(endDate, isRTL);\r\n\r\n    return { start, end, period, periodEnd };\r\n  }\r\n\r\n  // const start = new Date(time);\r\n  // const dayno = start.getDay();\r\n  // const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  // const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  // start.setDate(start.getDate() - minnus);\r\n  // start.setHours(0, 0, 0, 0);\r\n  // const end = new Date(time);\r\n  // end.setDate(end.getDate() + plus);\r\n  // end.setHours(23, 59, 59, 999);\r\n  // const period = `${start.getDate()}/${\r\n  //   start.getMonth() + 1\r\n  // } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  // return { start, end, period };\r\n};\r\n\r\nexport const getDaysOfWeek = (time: any) => {\r\n  const start = new Date(time);\r\n  const dayno = start.getDay();\r\n  const minnus = dayno === 6 ? 0 : dayno + 1;\r\n  const plus = dayno === 5 ? 0 : dayno === 6 ? 6 : 5 - dayno;\r\n\r\n  start.setDate(start.getDate() - minnus);\r\n  const end = new Date(time);\r\n  end.setDate(end.getDate() + plus);\r\n  const ppriod = `${start.getDate()}/${\r\n    start.getMonth() + 1\r\n  } - ${end.getDate()}/${end.getMonth() + 1}`;\r\n  return ppriod;\r\n};\r\n\r\nexport const getMonthsArray = function (time: any) {\r\n  const now = new Date();\r\n  const date = new Date(time);\r\n  for (\r\n    var b: any = [], c: any = [];\r\n    now <= date;\r\n    date.setMonth(date.getMonth() + 1)\r\n  ) {\r\n    b.push({ m: date.getMonth(), y: date.getFullYear() });\r\n    c.push({ y: date.getFullYear() });\r\n  }\r\n  const mapmonth: any = {};\r\n  const months: any = [];\r\n  b.forEach((el: any) => {\r\n    if (!mapmonth[JSON.stringify(el)]) {\r\n      mapmonth[JSON.stringify(el)] = true;\r\n      months.push(el);\r\n    }\r\n  });\r\n  months.pop();\r\n  const mapyear: any = {};\r\n  const years: any = [];\r\n  c.forEach((el: any) => {\r\n    if (!mapyear[JSON.stringify(el)]) {\r\n      mapyear[JSON.stringify(el)] = true;\r\n      years.push(el);\r\n    }\r\n  });\r\n  years.pop();\r\n  return { months, years };\r\n};\r\n\r\nexport const getAppStartEndPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const startPeriod = new Date(year - 1, 0, 1, 0, 0, 0, 0);\r\n  const endPeriod = new Date(year + 1, 11, 31, 23, 59, 59, 999);\r\n  return { startPeriod, endPeriod };\r\n};\r\n\r\nexport const getLastDays = (days: any, isRTL: any, location = \"start\") => {\r\n  const list: any = [];\r\n  if (location === \"mid\") {\r\n    const time = new Date();\r\n    const md = Math.ceil(days / 2);\r\n    // const rem = days - md;\r\n    time.setDate(time.getDate() - md);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  } else {\r\n    const time = new Date();\r\n    time.setDate(time.getDate() - days);\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      time.setDate(time.getDate() + 1);\r\n      list.push(getDateFormat(new Date(time), isRTL));\r\n    }\r\n    return list;\r\n  }\r\n};\r\nexport const getLastMonths = (num: any, isRTL: any) => {\r\n  const list: any = [];\r\n\r\n  const time = new Date();\r\n  time.setMonth(time.getMonth() - num);\r\n\r\n  for (let i = 0; i < num; i++) {\r\n    time.setMonth(time.getMonth() + 1);\r\n    list.push(getDateMonthFormat(new Date(time), isRTL));\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const compressEvents = (events: any) => {\r\n  if (events && events.length > 0) {\r\n    const event = events[0];\r\n    const times = events.map((ev: any) => {\r\n      return {\r\n        startDate: ev.startDate,\r\n        endDate: ev.endDate,\r\n      };\r\n    });\r\n    return JSON.stringify({ event, times });\r\n  } else {\r\n    return JSON.stringify([]);\r\n  }\r\n};\r\n\r\nexport const decompressEvents = (events: any) => {\r\n  if (events) {\r\n    const data = JSON.parse(events);\r\n    const { event, times } = data;\r\n    if (event && times) {\r\n      const readyEvents = times.map((evt: any) => {\r\n        return {\r\n          ...event,\r\n          startDate: evt.startDate,\r\n          endDate: evt.endDate,\r\n        };\r\n      });\r\n      return readyEvents;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { getAppStartEndPeriod } from \"./time\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const commitAppointmentChanges = async ({\r\n  added,\r\n  changed,\r\n  deleted,\r\n  addEvent,\r\n  editEvent,\r\n  removeEvent,\r\n  isRTL,\r\n}: any) => {\r\n  try {\r\n    if (added) {\r\n      const {\r\n        title,\r\n        startDate,\r\n        endDate,\r\n        items,\r\n        customer,\r\n        department,\r\n        employee,\r\n        ...rest\r\n      } = added;\r\n      const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n      if (\r\n        startDate < startPeriod ||\r\n        startDate > endPeriod ||\r\n        endDate < startPeriod ||\r\n        endDate > endPeriod ||\r\n        startDate > endDate ||\r\n        startDate.getDate() !== endDate.getDate()\r\n      ) {\r\n        window.alert(isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\");\r\n      } else {\r\n        const variables = {\r\n          title,\r\n          startDate,\r\n          endDate,\r\n          items,\r\n          customer: customer\r\n            ? {\r\n                customerId: customer._id,\r\n                customerName: customer.name,\r\n                customerNameAr: customer.nameAr,\r\n                customerPhone: customer.phone,\r\n              }\r\n            : undefined,\r\n          department: department\r\n            ? {\r\n                departmentId: department._id,\r\n                departmentName: department.name,\r\n                departmentNameAr: department.nameAr,\r\n                departmentColor: department.color,\r\n              }\r\n            : undefined,\r\n          employee: employee\r\n            ? {\r\n                employeeId: employee._id,\r\n                employeeName: employee.name,\r\n                employeeNameAr: employee.nameAr,\r\n                employeeColor: employee.color,\r\n                employeePhone: employee.phone,\r\n              }\r\n            : undefined,\r\n          ...rest,\r\n        };\r\n        await addEvent({ variables });\r\n      }\r\n    }\r\n    if (changed) {\r\n      const id = Object.keys(changed)[0];\r\n      const data = changed[id];\r\n      const { items, customer, department, employee, ...rest } = data;\r\n\r\n      const variables = {\r\n        id: Number(id),\r\n        items,\r\n        employee: employee\r\n          ? {\r\n              employeeId: employee._id,\r\n              employeeName: employee.name,\r\n              employeeNameAr: employee.nameAr,\r\n              employeeColor: employee.color,\r\n              employeePhone: employee.phone,\r\n            }\r\n          : undefined,\r\n        department: department\r\n          ? {\r\n              departmentId: department._id,\r\n              departmentName: department.name,\r\n              departmentNameAr: department.nameAr,\r\n              departmentColor: department.color,\r\n            }\r\n          : undefined,\r\n        customer: customer\r\n          ? {\r\n              customerId: customer._id,\r\n              customerName: customer.name,\r\n              customerNameAr: customer.nameAr,\r\n              customerPhone: customer.phone,\r\n            }\r\n          : undefined,\r\n        ...rest,\r\n      };\r\n      await editEvent({\r\n        variables,\r\n        optimisticResponse: {\r\n          __typename: \"updateEvent\",\r\n          updateEvent: {\r\n            __typename: \"Operation\",\r\n            id,\r\n            ...variables,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    if (deleted !== undefined) {\r\n      await removeEvent({ variables: { id: Number(deleted) } });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSelectedFromAppointment = (row: any) => {\r\n  const { item, customer, department, employee } = row;\r\n  const selectedDepartment = row.departmentId\r\n    ? {\r\n        _id: department ? department._id : row.departmentId,\r\n        name: department ? department.name : row.departmentName,\r\n        nameAr: department ? department.nameAr : row.departmentNameAr,\r\n        color: department ? department.color : row.departmentColor,\r\n      }\r\n    : null;\r\n  const selectedEmployee = row.employeeId\r\n    ? {\r\n        _id: employee ? employee._id : row.employeeId,\r\n        name: employee ? employee.name : row.employeeName,\r\n        nameAr: employee ? employee.nameAr : row.employeeNameAr,\r\n        color: employee ? employee.color : row.employeeColor,\r\n      }\r\n    : null;\r\n  const selectedItem = row.itemId\r\n    ? {\r\n        _id: item ? item._id : row.itemId,\r\n        name: item ? item.name : row.itemName,\r\n        nameAr: item ? item.nameAr : row.itemNameAr,\r\n      }\r\n    : null;\r\n  const priceValue = row.amount ? row.amount : item ? item.price : \"\";\r\n\r\n  const selectedCustomer = row.customerId\r\n    ? {\r\n        _id: customer ? customer._id : row.customerId,\r\n        name: customer ? customer.name : row.customerName,\r\n        nameAr: customer ? customer.nameAr : row.customerNameAr,\r\n        phone: customer ? customer.phone : row.customerPhone,\r\n      }\r\n    : null;\r\n  return {\r\n    selectedDepartment,\r\n    selectedEmployee,\r\n    selectedItem,\r\n    priceValue,\r\n    selectedCustomer,\r\n  };\r\n};\r\nexport const setRowFromAppointment = (row: any) => {\r\n  const {\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    departmentColor,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeeColor,\r\n    itemId,\r\n    itemName,\r\n    itemNameAr,\r\n    customerId,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    ...rest\r\n  } = row;\r\n\r\n  const newrow = { ...rest };\r\n\r\n  newrow.department = row.department\r\n    ? row.department\r\n    : {\r\n        _id: row.departmentId,\r\n        name: row.departmentName,\r\n        nameAr: row.departmentNameAr,\r\n        color: row.departmentColor,\r\n      };\r\n\r\n  if (employeeId) {\r\n    newrow.employee = row.employee\r\n      ? row.employee\r\n      : {\r\n          _id: row.employeeId,\r\n          name: row.employeeName,\r\n          nameAr: row.employeeNameAr,\r\n          color: row.employeeColor,\r\n        };\r\n  }\r\n  if (itemId) {\r\n    newrow.item = row.item\r\n      ? row.item\r\n      : {\r\n          _id: row.itemId,\r\n          name: row.itemName,\r\n          nameAr: row.itemNameAr,\r\n        };\r\n  }\r\n  if (customerId) {\r\n    newrow.customer = row.customer\r\n      ? row.customer\r\n      : {\r\n          _id: row.customerId,\r\n          name: row.customerName,\r\n          nameAr: row.customerNameAr,\r\n          phone: row.customerPhone,\r\n        };\r\n  }\r\n  return newrow;\r\n};\r\nexport const addObjectsToAppointment = (row: any) => {\r\n  const { departmentId, employeeId, itemId, customerId } = row;\r\n  const newRow = row;\r\n  if (departmentId) {\r\n    const department = {\r\n      _id: row.departmentId,\r\n      name: row.departmentName,\r\n      nameAr: row.departmentNameAr,\r\n      color: row.departmentColor,\r\n    };\r\n    newRow.department = department;\r\n  }\r\n  if (employeeId) {\r\n    const employee = {\r\n      _id: row.employeeId,\r\n      name: row.employeeName,\r\n      nameAr: row.employeeNameAr,\r\n      color: row.employeeColor,\r\n    };\r\n    newRow.employee = employee;\r\n  }\r\n  if (itemId) {\r\n    const item = {\r\n      _id: row.itemId,\r\n      name: row.itemName,\r\n      nameAr: row.itemNameAr,\r\n    };\r\n    newRow.item = item;\r\n  }\r\n  if (customerId) {\r\n    const customer = {\r\n      _id: row.customerId,\r\n      name: row.customerName,\r\n      nameAr: row.customerNameAr,\r\n      phone: row.customerPhone,\r\n    };\r\n    newRow.customer = customer;\r\n  }\r\n  return newRow;\r\n};\r\n\r\nexport const timeToHourMinute = (time: any, zone = \"en-US\") => {\r\n  return time.toLocaleString(zone, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  });\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport const getColumns = ({ isRTL, words }: any) => {\r\n  return {\r\n    no: { id: 1, ref: \"no\", name: \"no\", title: words.no },\r\n    startDate: { id: 1.1, ref: \"date\", name: \"startDate\", title: words.time },\r\n    start: { id: 1.2, ref: \"date\", name: \"start\", title: words.start },\r\n    end: { id: 1.3, ref: \"date\", name: \"end\", title: words.end },\r\n    tasktype: { id: 1.4, ref: \"tasktype\", name: \"tasktype\", title: words.type },\r\n    time: { id: 2, ref: \"time\", name: \"time\", title: words.timedate },\r\n    opTime: { id: 3, ref: \"opTime\", name: \"opTime\", title: words.time },\r\n    docNo: { id: 4, ref: \"docNo\", name: \"docNo\", title: words.no },\r\n    title: { id: 4, ref: \"title\", name: \"title\", title: words.name },\r\n    opDocNo: { id: 5, ref: \"opDocNo\", name: \"opDocNo\", title: words.no },\r\n    employee: {\r\n      id: 6,\r\n      ref: \"employee\",\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: words.employee,\r\n    },\r\n    service: {\r\n      id: 7,\r\n      ref: \"service\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    department: {\r\n      id: 8,\r\n      ref: \"department\",\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    category: {\r\n      id: 9,\r\n      ref: \"category\",\r\n      name: isRTL ? \"categoryNameAr\" : \"categoryName\",\r\n      title: words.category,\r\n    },\r\n    customer: {\r\n      id: 10,\r\n      ref: \"customer\",\r\n      name: isRTL ? \"customerNameAr\" : \"customerName\",\r\n      title: words.customer,\r\n    },\r\n    supplier: {\r\n      id: 10,\r\n      ref: \"supplier\",\r\n      name: isRTL ? \"supplierNameAr\" : \"supplierName\",\r\n      title: words.supplier,\r\n    },\r\n    status: { id: 11, ref: \"status\", name: \"status\", title: words.status },\r\n    amount: { id: 12, ref: \"amount\", name: \"amount\", title: words.amount },\r\n    acc: {\r\n      id: 13,\r\n      ref: \"acc\",\r\n      name: isRTL ? \"accNameAr\" : \"accName\",\r\n      title: words.account,\r\n    },\r\n    opAcc: {\r\n      id: 14,\r\n      ref: \"opAcc\",\r\n      name: isRTL ? \"opaccNameAr\" : \"opaccName\",\r\n      title: isRTL ? \"الحساب المقابل\" : \"Other side Account\",\r\n    },\r\n    debit: { id: 15, ref: \"debit\", name: \"debit\", title: words.debit },\r\n    credit: { id: 16, ref: \"credit\", name: \"credit\", title: words.credit },\r\n    accType: { id: 17, ref: \"accType\", name: \"accType\", title: \"accType\" },\r\n    kaidType: { id: 18, ref: \"kaidType\", name: \"kaidType\", title: \"kaidType\" },\r\n    opType: {\r\n      id: 19,\r\n      ref: \"opType\",\r\n      name: \"opType\",\r\n      title: isRTL ? \"العملية\" : \"Document\",\r\n    },\r\n    refNo: {\r\n      id: 20,\r\n      ref: \"refNo\",\r\n      name: \"refNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    eventNo: {\r\n      id: 21,\r\n      ref: \"eventNo\",\r\n      name: \"eventNo\",\r\n      title: isRTL ? \"رقم المرجع\" : \"Ref\",\r\n    },\r\n    progress: {\r\n      id: 22,\r\n      ref: \"progress\",\r\n      name: \"progress\",\r\n      title: isRTL ? \"نسبة الانجاز\" : \"Progress\",\r\n    },\r\n    evQty: {\r\n      id: 23,\r\n      ref: \"evQty\",\r\n      name: \"evQty\",\r\n      title: isRTL ? \"عدد المواعيد\" : \"Appointments\",\r\n    },\r\n    taskId: {\r\n      id: 24,\r\n      ref: \"taskId\",\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    id: {\r\n      id: 25,\r\n      ref: \"id\",\r\n      name: \"id\",\r\n      title: isRTL ? \"الرقم\" : \"No\",\r\n    },\r\n    fromto: {\r\n      id: 25,\r\n      ref: \"fromto\",\r\n      name: \"fromto\",\r\n      title: isRTL ? \"الوقت\" : \"Time\",\r\n    },\r\n    done: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    invo: {\r\n      id: 25,\r\n      ref: \"done\",\r\n      name: \"done\",\r\n      title: isRTL ? \"الانجاز\" : \"Done\",\r\n    },\r\n    totalinvoiced: {\r\n      id: 26,\r\n      ref: \"totalinvoiced\",\r\n      name: \"totalinvoiced\",\r\n      title: isRTL ? \"الفواتير\" : \"Invoices\",\r\n    },\r\n    totalpaid: {\r\n      id: 27,\r\n      ref: \"totalpaid\",\r\n      name: \"totalpaid\",\r\n      title: isRTL ? \"المقبوضات\" : \"Receipts\",\r\n    },\r\n    toatlExpenses: {\r\n      id: 28,\r\n      ref: \"toatlExpenses\",\r\n      name: \"toatlExpenses\",\r\n      title: isRTL ? \"المصاريف\" : \"Expenses\",\r\n    },\r\n    desc: {\r\n      id: 29,\r\n      ref: \"desc\",\r\n      name: \"desc\",\r\n      title: isRTL ? \"البيان\" : \"Description\",\r\n    },\r\n    item: {\r\n      id: 30,\r\n      ref: \"item\",\r\n      name: isRTL ? \"itemNameAr\" : \"itemName\",\r\n      title: words.service,\r\n    },\r\n    amountdebit: {\r\n      id: 31,\r\n      ref: \"debit\",\r\n      name: \"debit\",\r\n      title: isRTL ? \"مدين\" : \"Debit\",\r\n    },\r\n    amountcredit: {\r\n      id: 32,\r\n      ref: \"credit\",\r\n      name: \"credit\",\r\n      title: isRTL ? \"دائن\" : \"Credit\",\r\n    },\r\n    createdAt: {\r\n      id: 33,\r\n      ref: \"createdAt\",\r\n      name: \"createdAt\",\r\n      title: isRTL ? \"تاريخ الانشاء\" : \"Created Date\",\r\n    },\r\n  };\r\n};\r\nexport const userCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"username\", title: \"User Name\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"type\", title: \"type\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"roles\", title: \"Roles\" },\r\n];\r\n\r\nexport const catCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  // { name: \"catType\", title: \"Type\" },\r\n];\r\n\r\nexport const brandCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n];\r\n\r\nexport const custCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n];\r\n\r\nexport const departCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"color\", title: \"Color\" },\r\n];\r\n\r\nexport const emplCol = [\r\n  { name: \"avatar\", title: \"Avatar\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"phone\", title: \"Phone\" },\r\n  { name: \"email\", title: \"Email\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n];\r\n\r\nexport const emplColExtensions = [\r\n  { columnName: \"avatar\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"name\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"phone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"email\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"color\", width: \"10%\", align: \"left\" },\r\n];\r\n\r\nexport const prodCol = [\r\n  // { name: \"barcode\", title: \"Barcode\" },\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"price\", title: \"Price\" },\r\n  // { name: \"brandName\", title: \"Brand\" },\r\n];\r\n\r\nexport const prodColExtensions = [\r\n  { columnName: \"name\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const servCol = [\r\n  { name: \"name\", title: \"Name\" },\r\n  { name: \"nameAr\", title: \"Name Arabic\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"price\", title: \"Price\" },\r\n];\r\nexport const servColExtensions = [\r\n  { columnName: \"name\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"nameAr\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"price\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"15%\", align: \"left\" },\r\n];\r\n\r\nexport const eventCol = [\r\n  { name: \"startDate\", title: \"Time\" },\r\n  // { name: \"endDate\", title: \"End\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"status\", title: \"Status\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const eventColExtensions = [\r\n  { columnName: \"startDate\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"status\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultEventColExtensions = [\r\n  { columnName: \"startDate\", width: 180 },\r\n  { columnName: \"customerName\", width: 180 },\r\n  { columnName: \"itemName\", width: 180 },\r\n  { columnName: \"departmentName\", width: 180 },\r\n  { columnName: \"employeeName\", width: 180 },\r\n  { columnName: \"status\", width: 100 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\nexport const salesCol = [\r\n  { name: \"opTime\", title: \"Time\" },\r\n  { name: \"opDocNo\", title: \"Invoice\" },\r\n  { name: \"itemName\", title: \"Service\" },\r\n  { name: \"categoryName\", title: \"Category\" },\r\n  { name: \"departmentName\", title: \"Department\" },\r\n  { name: \"employeeName\", title: \"Employee\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const salesColExtensions = [\r\n  { columnName: \"opTime\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"opDocNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"itemName\", width: \"20%\", align: \"left\" },\r\n  { columnName: \"categoryName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"departmentName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"employeeName\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"15%\", align: \"left\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\nexport const defaultSalesColExtensions = [\r\n  { columnName: \"opTime\", width: 150 },\r\n  { columnName: \"opDocNo\", width: 100 },\r\n  { columnName: \"itemName\", width: 150 },\r\n  { columnName: \"categoryName\", width: 130 },\r\n  { columnName: \"departmentName\", width: 130 },\r\n  { columnName: \"employeeName\", width: 130 },\r\n  { columnName: \"customerName\", width: 150 },\r\n  { columnName: \"amount\", width: 100 },\r\n];\r\n\r\nexport const invCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"customerName\", title: \"Customer\" },\r\n  { name: \"customerPhone\", title: \"Phone\" },\r\n  { name: \"total\", title: \"Total\" },\r\n  { name: \"discount\", title: \"Discount\" },\r\n  { name: \"amount\", title: \"Net Amount\" },\r\n];\r\nexport const invColExtensions = [\r\n  { columnName: \"time\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"customerName\", width: \"auto\" },\r\n  { columnName: \"customerPhone\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"total\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"discount\", width: \"10%\", align: \"right\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n\r\nexport const financeCol = [\r\n  { name: \"time\", title: \"Date\" },\r\n  { name: \"debitAcc\", title: \"To\" },\r\n  { name: \"creditAcc\", title: \"From\" },\r\n  { name: \"type\", title: \"Type\" },\r\n  { name: \"desc\", title: \"Description\" },\r\n  { name: \"docNo\", title: \"No\" },\r\n  { name: \"refNo\", title: \"Ref\" },\r\n  { name: \"amount\", title: \"Amount\" },\r\n];\r\nexport const financeColExtensions = [\r\n  { columnName: \"time\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"type\", width: \"10%\", align: \"left\" },\r\n  { columnName: \"docNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"refNo\", width: \"8%\", align: \"left\" },\r\n  { columnName: \"desc\", width: \"auto\" },\r\n  { columnName: \"creditAcc\", width: \"10%\" },\r\n  { columnName: \"debitAcc\", width: \"14%\" },\r\n  { columnName: \"amount\", width: \"10%\", align: \"right\" },\r\n];\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as check from \"./roles\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst {\r\n  systems: { cal, pos, pur, exp },\r\n} = check;\r\nconst store = getStoreItem(\"store\");\r\nconst user = store?.user;\r\n\r\n// const branch = Object.keys(user.roles)[0];\r\n// const systems = Object.keys(user.roles[branch]);\r\n\r\n// console.log(\"branch\", branch);\r\n// console.log(\"systems\", systems);\r\n\r\nexport const roles = {\r\n  isCalAdmin: () => check.isSystemAdmin(user, cal),\r\n  isCalEditor: () => check.isSystemEditor(user, cal),\r\n  isCalViewer: () => check.isSystemViewer(user, cal),\r\n\r\n  isPOSAdmin: () => check.isSystemAdmin(user, pos),\r\n  isPOSEditor: () => check.isSystemEditor(user, pos),\r\n  isPOSViewer: () => check.isSystemViewer(user, pos),\r\n\r\n  isPOSCalAdmin: () =>\r\n    check.isSystemAdmin(user, pos) && check.isSystemAdmin(user, cal),\r\n  isPOSCalEditor: () =>\r\n    check.isSystemEditor(user, pos) && check.isSystemEditor(user, cal),\r\n  isPOSCalViewer: () =>\r\n    check.isSystemViewer(user, pos) && check.isSystemViewer(user, cal),\r\n\r\n  isPurAdmin: () => check.isSystemAdmin(user, pur),\r\n  isPurEditor: () => check.isSystemEditor(user, pur),\r\n  isPurViewer: () => check.isSystemViewer(user, pur),\r\n\r\n  isExpAdmin: () => check.isSystemAdmin(user, exp),\r\n  isExpEditor: () => check.isSystemEditor(user, exp),\r\n  isExpViewer: () => check.isSystemViewer(user, exp),\r\n\r\n  isSystemAdmin: (sys: any) => check.isSystemAdmin(user, sys),\r\n  isSystemEditor: (sys: any) => check.isSystemEditor(user, sys),\r\n  isSystemViewer: (sys: any) => check.isSystemViewer(user, sys),\r\n\r\n  isBranchAdmin: () => check.isBranchAdmin(user),\r\n  isSuperAdmin: () => check.isSuperAdmin(user),\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\nimport { roles } from \"../common\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nconst AddButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon style={{ fontSize: 26 }} />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditButton = ({ onExecute }) => {\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      style={{ padding: 5, marginTop: 3, marginBottom: 3 }}\r\n      onClick={onExecute}\r\n      title=\"Edit row\"\r\n    >\r\n      <EditOutlinedIcon style={{ fontSize: 22, color: \"#729aaf\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ onExecute }) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n  if (!isEditor) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف المدخل ؟\"\r\n              : \"Are you sure you want to delete this row?\"\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n      style={{ padding: 5 }}\r\n    >\r\n      <DeleteOutlinedIcon style={{ fontSize: 22, color: \"#a76f9a\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const Command = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Button, Typography } from \"@material-ui/core\";\r\nimport { getStoreItem } from \"../store\";\r\nimport { roles } from \"../common\";\r\n\r\nconst SaveButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Button\r\n          style={{ width: 85, height: 36 }}\r\n          variant=\"contained\"\r\n          onClick={onExecute}\r\n          color=\"primary\"\r\n        >\r\n          <Typography>{lang === \"ar\" ? \"حفظ\" : \"Save\"}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CancelButton = ({ onExecute }: any) => <div></div>;\r\n\r\nconst DeleteButton = ({ onExecute }: any) => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isCalEditor = roles.isCalEditor();\r\n  if (!isCalEditor) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (\r\n          window.confirm(\r\n            lang === \"ar\"\r\n              ? \"هل انت متأكد من حذف الموعد ؟\"\r\n              : \"Are you sure you want to delete this row?\",\r\n          )\r\n        ) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst commandComponents: any = {\r\n  saveButton: SaveButton,\r\n  deleteButton: DeleteButton,\r\n  cancelButton: CancelButton,\r\n};\r\n\r\nconst CommandAppointment = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return (\r\n    <Box>\r\n      <CommandButton onExecute={onExecute} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommandAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst CloseCancel = ({\r\n  classes,\r\n  handleSubmit,\r\n  words,\r\n  onClose,\r\n  isRTL,\r\n  onSubmit,\r\n  print,\r\n}: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: 40,\r\n        marginLeft: 40,\r\n        marginRight: 40,\r\n      }}\r\n    >\r\n      <Box>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          onClick={onClose}\r\n          color=\"primary\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.cancel} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n              handleSubmit(onSubmit)();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.printsave} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.margin}\r\n          onClick={handleSubmit(onSubmit)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ width: 110 }}\r\n        >\r\n          <ButtonText title={words.save} isRTL={isRTL}></ButtonText>\r\n        </Button>\r\n        {print && (\r\n          <Button\r\n            className={classes.margin}\r\n            onClick={() => {\r\n              print();\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 110 }}\r\n          >\r\n            <ButtonText title={words.print} isRTL={isRTL}></ButtonText>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CloseCancel;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertMsg({ type, msg, top, right }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 0,\r\n        top: top ? 40 : undefined,\r\n        left: right ? undefined : 0,\r\n        right: right ? 0 : undefined,\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport function sleep(ms: any) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms * 1000));\r\n}\r\n\r\ntype AT = \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\ninterface ShowAType {\r\n  setAlrt: any;\r\n  msg: string;\r\n  type: AT;\r\n  s?: number;\r\n}\r\n\r\nexport const showAlert = async ({ setAlrt, msg, type, s = 2 }: ShowAType) => {\r\n  setAlrt({ show: true, msg, type });\r\n  await sleep(s);\r\n  setAlrt({ show: false, msg: \"\", type: \"info\" });\r\n};\r\n\r\nexport const successAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"تمت الاضافة بنجاح\" : \"item added successfuly\",\r\n    type: \"success\",\r\n    s: 0.25,\r\n  });\r\n};\r\n\r\nexport const dublicateAlert = async (setAlrt: any, isRTL: any) => {\r\n  showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - هذا المدخل موجود من قبل\" : \"Error, Item already exist\",\r\n    type: \"error\",\r\n  });\r\n};\r\n\r\nexport const errorAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - حدث خطأ في العملية\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const errorAlertMsg = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorAccountAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL ? \"خطأ - لا يمكن حذف هذا الحساب\" : \"Error on operation\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const errorDeleteAlert = async (setAlrt: any, isRTL: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg: isRTL\r\n      ? \"لا يمكن حذف هذا المدخل - لديه ارتباطات\"\r\n      : \"Can't Delete this Item, it has related\",\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const messageAlert = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"error\",\r\n    s: 2,\r\n  });\r\n};\r\nexport const messageShow = async (setAlrt: any, msg: any) => {\r\n  await showAlert({\r\n    setAlrt,\r\n    msg,\r\n    type: \"success\",\r\n    s: 2,\r\n  });\r\n};\r\n\r\nexport const getReturnItem = (res: any, mutation: string) => {\r\n  return res?.data?.[mutation]?.ok ? JSON.parse(res.data[mutation].data) : null;\r\n};\r\n\r\nexport const colorShade = (color: any, percent: any) => {\r\n  const num = parseInt(color.replace(\"#\", \"\"), 16),\r\n    amt = Math.round(2.55 * percent),\r\n    R = (num >> 16) + amt,\r\n    B = ((num >> 8) & 0x00ff) + amt,\r\n    G = (num & 0x0000ff) + amt;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\r\n      (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\r\n      (G < 255 ? (G < 1 ? 0 : G) : 255)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst brandSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n});\r\nexport const brandResolver = { resolver: yupResolver(brandSchema) };\r\n\r\nconst loginSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const loginResolver = { resolver: yupResolver(loginSchema) };\r\n\r\nconst addUserSchema = yup.object().shape({\r\n  username: yup.string().required().min(3).max(100),\r\n  password: yup.string().required().min(3).max(100),\r\n});\r\nexport const addUserResolver = { resolver: yupResolver(addUserSchema) };\r\nconst editUserSchema = yup.object().shape({\r\n  username: yup.string(),\r\n});\r\nexport const editUserResolver = { resolver: yupResolver(editUserSchema) };\r\n\r\nconst catSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const catResolver = { resolver: yupResolver(catSchema) };\r\nconst passSchema = yup.object().shape({\r\n  password: yup.string().required().min(3).max(100),\r\n  newPassword: yup.string().required().min(3).max(100),\r\n  newPassword2: yup.string().required().min(3).max(100),\r\n});\r\n\r\nexport const passResolver = { resolver: yupResolver(passSchema) };\r\n\r\nconst departSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  color: yup.string(),\r\n});\r\nexport const departResolver = { resolver: yupResolver(departSchema) };\r\n\r\nconst custSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n  email: yup.string().email(),\r\n});\r\nexport const custResolver = { resolver: yupResolver(custSchema) };\r\nconst itmSchema = yup.object().shape({\r\n  barcode: yup.string(),\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  price: yup.number().min(0).required(),\r\n});\r\nexport const itmResolver = { resolver: yupResolver(itmSchema) };\r\n\r\nconst emplSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required().min(3).max(100),\r\n  phone: yup.string(),\r\n});\r\nexport const emppResolver = { resolver: yupResolver(emplSchema) };\r\nconst depositSchema = yup.object().shape({\r\n  amount: yup.number().min(0).required().positive(),\r\n\r\n  disc: yup.string(),\r\n});\r\nexport const depositResolver = { resolver: yupResolver(depositSchema) };\r\n\r\nconst invoeSchema = yup.object().shape({\r\n  customer: yup.string().required(),\r\n  phone: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\nexport const invoiceResolver = { resolver: yupResolver(invoeSchema) };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nexport default function PopupDialog({\r\n  open,\r\n  classes,\r\n  onClose,\r\n  children,\r\n  maxWidth,\r\n}: any) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      classes={{ paper: classes.popup }}\r\n    >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function PopupTextField({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  newtext,\r\n  margin,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      fullWidth\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors[name] ? true : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ margin: margin ? margin : undefined }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({\r\n  item,\r\n  col,\r\n  isRTL,\r\n  day,\r\n  basename,\r\n  showphone,\r\n}: any) {\r\n  const textstyle = {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  const { color, daysoff } = item;\r\n  const days = daysoff ? JSON.parse(daysoff) : null;\r\n  const isred = days && day ? days[day] : false;\r\n\r\n  const phone = item?.phone ? item?.phone : null;\r\n  let name;\r\n  if (basename) {\r\n    name = isRTL ? item?.[`${basename}Ar`] : item?.[basename];\r\n  } else {\r\n    name = isRTL ? item?.nameAr : item?.name;\r\n  }\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        backgroundColor: isred ? \"#ffc0cb\" : undefined,\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box display=\"flex\">\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n              borderRadius: 9,\r\n              backgroundColor: color ? color : \"#fff\",\r\n              marginTop: 5,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={color ? textstyle : {}}\r\n            variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      {!color && (\r\n        <Typography variant={isRTL ? \"subtitle1\" : \"subtitle2\"}>\r\n          {name}\r\n        </Typography>\r\n      )}\r\n      {showphone && (\r\n        <Typography\r\n          style={{\r\n            fontSize: 11,\r\n            color: \"#999\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          {phone}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nfunction ccyFormat(num: number) {\r\n  if (num > 0) {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n  }\r\n}\r\n\r\nconst OptionItemData = ({ item, isRTL }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <Box style={{ position: \"relative\", top: 7 }}>\r\n        <Box>\r\n          <Typography\r\n            style={{\r\n              textAlign: isRTL ? \"right\" : \"left\",\r\n            }}\r\n          >\r\n            {isRTL ? item.nameAr : item.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" style={{ marginBottom: 5 }}>\r\n          {item.categoryName && (\r\n            <Typography\r\n              style={{\r\n                color: \"#20A4F3\",\r\n                width: 100,\r\n                fontSize: 11,\r\n                paddingRight: 10,\r\n                paddingLeft: 10,\r\n                textAlign: isRTL ? \"right\" : \"left\",\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.categoryNameAr : item.categoryName}\r\n            </Typography>\r\n          )}\r\n          {item.brandName && (\r\n            <Typography\r\n              style={{\r\n                marginRight: 20,\r\n                color: \"#844257\",\r\n                width: 100,\r\n                fontSize: 11,\r\n              }}\r\n              variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n            >\r\n              {isRTL ? item.brandNameAr : item.brandName}\r\n            </Typography>\r\n          )}\r\n          <Typography\r\n            style={{ color: \"#00B77C\", width: 100, fontSize: 11 }}\r\n            variant={isRTL ? \"subtitle1\" : \"caption\"}\r\n          >\r\n            {item.price ? ccyFormat(item.price) : \"-\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default OptionItemData;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Loading = ({ isRTL }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: isRTL ? undefined : 40,\r\n        left: isRTL ? 40 : undefined,\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport MyIcon from \"./MyIcon\";\r\n\r\nexport default function UserBox(props: any) {\r\n  const { theme, user, network, mobile, logout, client, history } = props;\r\n  const isWeb = network === \"web\";\r\n  const color = isWeb\r\n    ? theme.palette.background.default\r\n    : theme.palette.background.default;\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {user && (\r\n        <React.Fragment>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              justifyContent: mobile ? \"flex-start\" : \"space-between\",\r\n              flex: 1,\r\n              paddingRight: mobile ? undefined : 10,\r\n              paddingLeft: mobile ? undefined : 10,\r\n              marginTop: mobile ? undefined : 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <Avatar\r\n                username={user.username}\r\n                name={user.name}\r\n                size={34}\r\n              ></Avatar>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <Typography style={{ color }}>\r\n                  {user.name ? user.name : user.username}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                width: 34,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={async () => {\r\n                logout();\r\n                await client.resetStore();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <MyIcon size={24} color={\"#eee\"} icon={\"logout\"}></MyIcon>\r\n            </Box>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"./OptionItem\";\r\n\r\nexport default function AutoField({\r\n  words,\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  width = 294,\r\n  phone = false,\r\n  nolabel = false,\r\n  noPlus = false,\r\n  ms,\r\n  autoSelect,\r\n  openOnFocus,\r\n  setEmplvalue,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  margin,\r\n  isRTL,\r\n}: // fontsize = 16,\r\nany) {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: margin ? margin : undefined,\r\n        // marginTop: 15,\r\n      }}\r\n    >\r\n      {!nolabel && (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            height: 40,\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </Box>\r\n      )}\r\n      <Autocomplete\r\n        openOnFocus={openOnFocus}\r\n        autoSelect\r\n        options={options}\r\n        getOptionLabel={(option: any) =>\r\n          option?.[basename]\r\n            ? option[basename]\r\n            : isRTL\r\n            ? option?.nameAr\r\n            : option?.name\r\n            ? option.name\r\n            : \"\"\r\n        }\r\n        getOptionSelected={(option, values) => option._id === values._id}\r\n        renderOption={(option) => (\r\n          <OptionItem\r\n            isRTL={isRTL}\r\n            item={option}\r\n            basename={basename}\r\n          ></OptionItem>\r\n        )}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={(_, newValue: any) => {\r\n          setSelectValue(newValue);\r\n          setSelectError(false);\r\n          if (resetRelated) {\r\n            resetRelated(null);\r\n          }\r\n        }}\r\n        style={{ marginInlineStart: ms ? ms : undefined }}\r\n        classes={classes ? { input: classes.smallFont } : undefined}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id={name}\r\n            name={name}\r\n            label={nolabel ? title : undefined}\r\n            variant=\"outlined\"\r\n            error={selectError}\r\n            style={{ width }}\r\n            InputLabelProps={{\r\n              style: { fontSize: 13 },\r\n            }}\r\n            inputRef={(ref) => {\r\n              refernce.current = ref;\r\n              register(ref);\r\n            }}\r\n          ></TextField>\r\n        )}\r\n      />\r\n      {phone && (\r\n        <Autocomplete\r\n          autoSelect\r\n          options={options}\r\n          openOnFocus={openOnFocus}\r\n          getOptionLabel={(option: any) => option.phone}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItem phone item={option}></OptionItem>\r\n          )}\r\n          value={value}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            setSelectError(false);\r\n          }}\r\n          style={{ marginInlineStart: 30 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              label={nolabel ? words.phoneNumber : undefined}\r\n              error={selectError}\r\n              style={{ width: 250 }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      )}\r\n      {!noPlus && (\r\n        <IconButton\r\n          disableFocusRipple\r\n          onClick={() => {\r\n            if (openAdd) openAdd();\r\n          }}\r\n        >\r\n          <AddIcon></AddIcon>\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { systemsNames } from \"../constants/menu\";\r\n\r\nexport default function UserRoles({\r\n  branches,\r\n  roles,\r\n  handleChangeRoles,\r\n  brch,\r\n  isRTL,\r\n}) {\r\n  const manager = isRTL ? \"المدير العام\" : \"General Manager\";\r\n  return (\r\n    <Box>\r\n      {branches.map((branch: any) => {\r\n        const systems = [\"cal\", \"pos\", \"exp\", \"acc\"];\r\n        if (branch.basename === brch) {\r\n          return (\r\n            <Box key={branch.basename}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={roles?.[branch.basename]?.admin || false}\r\n                    onChange={() =>\r\n                      handleChangeRoles({\r\n                        branch: branch.basename,\r\n                        system: null,\r\n                        role: \"admin\",\r\n                      })\r\n                    }\r\n                    name={branch.basename.admin}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography variant=\"body2\" style={{ fontWeight: \"bold\" }}>\r\n                    {manager}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <Box>\r\n                {systems.map((bs: any) => {\r\n                  return (\r\n                    <div key={bs}>\r\n                      <FormGroup row>\r\n                        <Box style={{ minWidth: 150, marginTop: 10 }}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ fontWeight: \"bold\" }}\r\n                          >\r\n                            {isRTL\r\n                              ? systemsNames[bs].nameAr\r\n                              : systemsNames[bs].name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.admin || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"admin\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={roles?.[branch.basename]?.admin}\r\n                              indeterminate={roles?.[branch.basename]?.admin}\r\n                              name={`${bs}admin`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مدير\" : \"Admin\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.edit || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"edit\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin\r\n                              }\r\n                              name={`${bs}edit`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"محرر\" : \"Editor\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                roles?.[branch.basename]?.[bs]?.view || false\r\n                              }\r\n                              onChange={() =>\r\n                                handleChangeRoles({\r\n                                  branch: branch.basename,\r\n                                  system: bs,\r\n                                  role: \"view\",\r\n                                })\r\n                              }\r\n                              size=\"small\"\r\n                              disabled={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              indeterminate={\r\n                                roles?.[branch.basename]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.admin ||\r\n                                roles?.[branch.basename]?.[bs]?.edit\r\n                              }\r\n                              name={`${bs}view`}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {isRTL ? \"مشاهد\" : \"Viwer\"}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        } else {\r\n          return <div key={branch.basename}></div>;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\n\r\nconst PopupEditing = (props: any) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, addedRows, editingRowIds, rowChanges },\r\n          {\r\n            stopEditRows,\r\n            cancelAddedRows,\r\n            cancelChangedRows,\r\n            commitChangedRows,\r\n            commitAddedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow: any;\r\n          let rowId: any;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(\r\n              (row: any) => getRowId(row) === rowId,\r\n            )[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <div>\r\n              {React.cloneElement(props.children, {\r\n                ...props,\r\n                open,\r\n                isNew,\r\n                row: editedRow,\r\n                onClose: cancelChanges,\r\n                addAction: props.addAction,\r\n                editAction: props.editAction,\r\n                applyChanges,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n);\r\n\r\nexport default PopupEditing;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst ColorPicker = ({ setColor, color }: any) => {\r\n  const [bg, setbg] = useState(color);\r\n\r\n  const handleChangeComplete = (col: any) => {\r\n    setbg(col.hex);\r\n    if (setColor) {\r\n      setColor(col.hex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        paddingLeft: 20,\r\n        paddingTop: 5,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <ChromePicker\r\n        colors={colors}\r\n        color={bg || \"black\"}\r\n        width={200}\r\n        disableAlpha\r\n        onChange={handleChangeComplete}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nexport default ColorPicker;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  fade,\r\n} from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { client } from \"../../graphql\";\r\n\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"./Menu\";\r\nimport { drawerWidth } from \"../../constants\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst drawerClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    txtrtl: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"500\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    txtltr: {\r\n      textAlign: \"start\",\r\n      \"& span, & svg\": {\r\n        fontSize: \"1rem\",\r\n        // fontWeight: \"bold\",\r\n      },\r\n      color: fade(theme.palette.background.default, 0.8),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    child: {\r\n      fontSize: \"1.5em\",\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    child2: {\r\n      padding: 10,\r\n      paddingLeft: 55,\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    icon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      backgroundColor: \"#21d19f\",\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    \"@global\": {\r\n      \"*::-webkit-scrollbar\": {\r\n        width: \"0.4em\",\r\n      },\r\n      \"*::-webkit-scrollbar-track\": {\r\n        \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n      },\r\n      \"*::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n        // outline: \"1px solid #333\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction AppDrawer(props: any): any {\r\n  const { window } = props;\r\n  const history = useHistory();\r\n\r\n  const { menuitem, setMenuitem, menu, isRTL, user, network, logout } = props;\r\n  const classes = drawerClasses();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Box style={{ flex: 1 }}>\r\n              <UserBox\r\n                mobile\r\n                isRTL={isRTL}\r\n                theme={theme}\r\n                user={user}\r\n                network={network}\r\n              ></UserBox>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Hidden>\r\n\r\n      <nav className={clsx(classes.drawer)} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              setMobileOpen={setMobileOpen}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n            style={{ paddingTop: 40 }}\r\n          >\r\n            <UserBox\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              network={network}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></UserBox>\r\n            <Box\r\n              style={{\r\n                height: 1,\r\n                marginTop: 10,\r\n                backgroundColor: \"#ddd\",\r\n              }}\r\n            ></Box>\r\n            <Menu\r\n              menu={menu}\r\n              menuitem={menuitem}\r\n              setMenuitem={setMenuitem}\r\n              classes={classes}\r\n              isRTL={isRTL}\r\n              theme={theme}\r\n              user={user}\r\n              logout={logout}\r\n              client={client}\r\n              history={history}\r\n            ></Menu>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MyIcon from \"../../Shared/MyIcon\";\r\n\r\nexport const InfoAmount = ({ value, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 26, fontWeight: \"bold\", color }}>\r\n      {value}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const InfoDesc = ({ desc }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 14, color: \"#888\" }}>{desc}</Typography>\r\n  );\r\n};\r\n\r\nexport const InfoIcon = ({ icon, color }) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        width: 26,\r\n        height: 26,\r\n        borderRadius: 13,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <MyIcon color={color} icon={icon}></MyIcon>\r\n    </Box>\r\n  );\r\n};\r\nexport const InfoPercent = ({ percent }: any) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#bff8bf\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Typography style={{ fontSize: 14, color: \"#888\" }}>{percent}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const InfoTitle = ({ title, color }: any) => {\r\n  return (\r\n    <Typography style={{ fontSize: 16, fontWeight: \"bold\", color }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const ChartTitle = ({ title }: any) => {\r\n  return <Typography variant=\"h5\">{title}</Typography>;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBox({ title, value, icon, color, desc }: any) {\r\n  return (\r\n    <Paper style={{ height: 116 }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color={color} icon={icon}></InfoIcon>\r\n              <InfoTitle color={color} title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color={color} value={value}></InfoAmount>\r\n            </Box>\r\n            {desc && (\r\n              <React.Fragment>\r\n                <Divider></Divider>\r\n                <Box display=\"flex\" style={{ marginLeft: 10, marginRight: 10 }}>\r\n                  <Typography\r\n                    style={{ alignSelf: \"center\", color: \"#aaa\" }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                </Box>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport { getDateMonthFormat } from \"../Shared/colorFormat\";\r\n\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport const getSummaryViee = (current: any) => {\r\n  let reptype;\r\n  if (current === \"item\") {\r\n    reptype = { item: true };\r\n  } else if (current === \"category\") {\r\n    reptype = { category: true };\r\n  } else if (current === \"department\") {\r\n    reptype = { department: true };\r\n  } else if (current === \"employee\") {\r\n    reptype = { employee: true };\r\n  } else if (current === \"customer\") {\r\n    reptype = { customer: true };\r\n  }\r\n  return reptype;\r\n};\r\n\r\nexport const getReportData = ({ list, refdata }: any) => {\r\n  const data = refdata\r\n    ? list.map((cs: any) => {\r\n        const emp = refdata.filter(\r\n          (de: any) => de._id === cs._id.employee,\r\n        )?.[0];\r\n        const employeeName = emp?.name;\r\n        const employeeNameAr = emp?.nameAr;\r\n        const employeeColor = emp?.color;\r\n        return {\r\n          ...cs,\r\n          amount: cs.credit - cs.debit,\r\n          employeeName: employeeName ? employeeName : \"Not available\",\r\n          employeeNameAr: employeeNameAr ? employeeNameAr : \"غير متوفر\",\r\n          employeeColor,\r\n        };\r\n      })\r\n    : null;\r\n  return data;\r\n};\r\n\r\nexport const groupSumCount = ({ list, name }: any) => {\r\n  const items = _(list)\r\n    .groupBy(name)\r\n    .map((array, key) => ({\r\n      name: key,\r\n      count: _.uniqBy(array, \"_id\").length,\r\n      total: _.sumBy(array, \"amount\"),\r\n    }))\r\n    .value();\r\n  const count = list.length;\r\n  const total = _.sumBy(list, \"amount\");\r\n  return {\r\n    items,\r\n    count,\r\n    total,\r\n  };\r\n};\r\n\r\nexport const formatKeyToMonth = (k: any, isRTL: any) => {\r\n  if (k) {\r\n    const a = k.split(\"-\");\r\n    const date = new Date(Number(a[1]), Number(a[0] - 1), 1);\r\n    return getDateMonthFormat(date, isRTL);\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { Box, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { daySwitchClasses } from \"../../../themes/classes\";\r\n\r\nexport const DateViewSwitcher = ({\r\n  currentViewName,\r\n  onChange,\r\n  isRTL,\r\n  words,\r\n  views,\r\n  currentDateChange,\r\n}: any) => {\r\n  const classes = daySwitchClasses();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"simple-menu\"\r\n          value={currentViewName}\r\n          onChange={(value: any) => {\r\n            onChange(value);\r\n            currentDateChange(new Date());\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{\r\n            height: 34,\r\n            fontSize: 12,\r\n            fontWeight: \"bold\",\r\n            color: \"#555\",\r\n          }}\r\n        >\r\n          {views && views.includes(1) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Day\"\r\n            >\r\n              {words.day}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(3) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"3Days\"\r\n            >\r\n              {words.tdays}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(7) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Week\"\r\n            >\r\n              {words.week}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(30) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Month\"\r\n            >\r\n              {words.month}\r\n            </MenuItem>\r\n          )}\r\n          {views && views.includes(365) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Year\"\r\n            >\r\n              {words.year}\r\n            </MenuItem>\r\n          )}\r\n\r\n          {views && views.includes(1000) && (\r\n            <MenuItem\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value=\"Custom\"\r\n            >\r\n              {isRTL ? \"مخصص\" : \"Custom Date\"}\r\n            </MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigator({\r\n  isRTL,\r\n  words,\r\n  setStart,\r\n  setEnd,\r\n  theme,\r\n  currentDate,\r\n  currentViewName,\r\n  currentViewNameChange,\r\n  currentDateChange,\r\n  views,\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"MMMM, dd yyyy\");\r\n  const [open, setOpen]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n    });\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            marginTop: 2,\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: fade(\r\n              theme.palette.primary.dark,\r\n              disabled ? 0.1 : 0.2\r\n            ),\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => currentDateChange(new Date())}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#999\" : theme.palette.primary.main,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4 }}\r\n          onClick={isRTL ? stepForward : stepBackward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginTop: 4, marginLeft: 5 }}\r\n          onClick={isRTL ? stepBackward : stepForward}\r\n        >\r\n          {isRTL && (\r\n            <ArrowBackIosOutlinedIcon style={{ fontSize: 18, color: \"#555\" }} />\r\n          )}\r\n          {!isRTL && (\r\n            <ArrowForwardIosOutlinedIcon\r\n              style={{ fontSize: 18, color: \"#555\" }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL ? 60 : undefined,\r\n              right: isRTL ? undefined : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { SearchPanel } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nexport default function SearchTable(props: any) {\r\n  return (\r\n    <SearchPanel.Input\r\n      {...props}\r\n      // onValueChange={_.debounce((e: any) => onValueChange(e.target.value), 300)}\r\n      placeholder={props.isRTL ? \"بحث\" : \"Search\"}\r\n      variant=\"outlined\"\r\n      key={\"search\"}\r\n    ></SearchPanel.Input>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function AlertLocal({ type, msg, isRTL, top }: any) {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        position: \"absolute\",\r\n        bottom: top ? undefined : 60,\r\n        top: top ? 55 : undefined,\r\n        width: top ? window.innerWidth - 275 : \"100%\",\r\n        height: top ? 60 : undefined,\r\n        alignItems: \"center\",\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n      }}\r\n      severity={type}\r\n    >\r\n      {msg}\r\n    </Alert>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport {\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\n// import { getAppStartEndPeriod } from \"../../common/time\";\r\n\r\nconst CalenderLocal = ({\r\n  isRTL,\r\n  label,\r\n  value,\r\n  onChange,\r\n  format = \"dd/MM/yyyy\",\r\n  time,\r\n  ...rest\r\n}: any) => {\r\n  // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      locale={isRTL ? arLocale : enLocale}\r\n      utils={DateFnsUtils}\r\n      {...rest}\r\n    >\r\n      {!time && (\r\n        <KeyboardDatePicker\r\n          autoOk\r\n          // disableToolbar\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          variant=\"inline\"\r\n          format={format}\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n      {time && (\r\n        <DateTimePicker\r\n          autoOk\r\n          variant=\"inline\"\r\n          // minDate={startPeriod}\r\n          // maxDate={endPeriod}\r\n          minDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          maxDateMessage={isRTL ? \"التاريخ غير صالح\" : \"Invalid Date\"}\r\n          id=\"time-pickerstart\"\r\n          label={label}\r\n          name=\"startDate\"\r\n          inputVariant=\"standard\"\r\n          format=\"dd/MM/yyyy hh:mm\"\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: 150 }}\r\n          rightArrowIcon={\r\n            isRTL ? (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            )\r\n          }\r\n          leftArrowIcon={\r\n            isRTL ? (\r\n              <ArrowForwardIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowForwardIosOutlinedIcon>\r\n            ) : (\r\n              <ArrowBackIosOutlinedIcon\r\n                style={{ fontSize: 18 }}\r\n              ></ArrowBackIosOutlinedIcon>\r\n            )\r\n          }\r\n          {...rest}\r\n        />\r\n      )}\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default CalenderLocal;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function TextFieldLocal({\r\n  register,\r\n  errors,\r\n  name,\r\n  label,\r\n  row,\r\n  required = false,\r\n  autoFocus = false,\r\n  width,\r\n  newtext,\r\n  margin,\r\n  fullWidth,\r\n  mb = 20,\r\n  ...res\r\n}: any) {\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      fullWidth={fullWidth}\r\n      autoComplete=\"off\"\r\n      required={required}\r\n      name={name}\r\n      // onChange={_.debounce((e: any) => console.log(e.target.value), 300)}\r\n      defaultValue={row?.[name] || newtext || \"\"}\r\n      label={label}\r\n      error={errors ? (errors[name] ? true : false) : false}\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      style={{ width, marginBottom: mb }}\r\n      margin=\"dense\"\r\n      {...res}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { UserBox } from \"../../Shared\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      \"-webkit-app-region\": \"drag\",\r\n      backgroundColor: fade(theme.palette.primary.light, 0),\r\n    },\r\n    titleSt: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 14,\r\n    },\r\n    appBarButton: {\r\n      color: theme.palette.grey[700],\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    appBarButtonLang: {\r\n      color: theme.palette.grey[700],\r\n      fontSize: 12,\r\n      \"-webkit-app-region\": \"no-drag\",\r\n      top: -3,\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ApplicationBar(props: any) {\r\n  const { isRTL, user, company, network } = props;\r\n\r\n  const { appBar, appBarButtonLang, titleSt } = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const companyName = company\r\n    ? isRTL\r\n      ? company?.nameAr\r\n      : company?.name\r\n    : null;\r\n  const title = companyName ? `${companyName}` : \"JADWAL ERP\";\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      style={{ height: 40 }}\r\n      position=\"fixed\"\r\n      className={appBar}\r\n    >\r\n      <Toolbar\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <UserBox\r\n          appBarButtonLang={appBarButtonLang}\r\n          isRTL={isRTL}\r\n          theme={theme}\r\n          user={user}\r\n          logout={props.logout}\r\n          network={network}\r\n        ></UserBox>\r\n        <Box style={{ marginTop: -5 }}>\r\n          <Typography className={titleSt} noWrap variant=\"button\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            width: 280,\r\n            justifyContent: isRTL ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n        ></Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Divider, Typography } from \"@material-ui/core\";\r\n\r\nexport const ChartHeader = (props: any) => {\r\n  const { color, title } = props;\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        style={{\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n          color: color,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Divider></Divider>\r\n    </Box>\r\n  );\r\n};\r\nexport default ChartHeader;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const SalesDaysChart = (props: any) => {\r\n  const { data, color, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"المبيعات اليومية\" : \"Days Sales\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip formatter={(value) => [value.toLocaleString()]} />\r\n          <Legend\r\n            formatter={() => (isRTL ? \" المبيعات اليومية \" : \"Days Sales\")}\r\n          />\r\n\r\n          <Area type=\"monotone\" dataKey={dataKey} stroke={color} fill={color} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default SalesDaysChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsChart = (props: any) => {\r\n  const { data, color, dataKey, height, prim, title, isRTL } = props;\r\n  const ucolor = fade(color, 0.7);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n          syncId=\"6month\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey={dataKey} fill={ucolor} />;\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { getThemeStatus } from \"../../constants/datatypes\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const DaysEvents = (props: any) => {\r\n  const { data, isRTL, height, prim, theme } = props;\r\n  const name = isRTL ? \"nameAr\" : \"name\";\r\n\r\n  const rdata = data.map((d: any) => {\r\n    const obj = d;\r\n    if (d.status && d.status.length > 0) {\r\n      d.status.map((ds: any) => {\r\n        obj[ds.name] = ds.count;\r\n      });\r\n    }\r\n    return obj;\r\n  });\r\n  const title = isRTL\r\n    ? \"المواعيد اليومية بحسب الحالة\"\r\n    : \"Week Appointments Status\";\r\n\r\n  const stats = getThemeStatus(theme);\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: isRTL ? 40 : 0,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            tickLine={false}\r\n            axisLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip cursor={{ fill: \"transparent\" }} />\r\n          {stats.map((es: any) => {\r\n            return (\r\n              <Bar key={es.id} dataKey={es[name]} stackId=\"a\" fill={es.color} />\r\n            );\r\n          })}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DaysEvents;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const EventsDaysChart = (props: any) => {\r\n  const { data, pricolor, seccolor, dataKey, height, isRTL, prim } = props;\r\n  const title = isRTL ? \"الموعيد اليومية المنجزة\" : \"Daily Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 30}>\r\n        <AreaChart\r\n          height={height}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 40 : 10,\r\n            bottom: 20,\r\n          }}\r\n          syncId=\"anyId\"\r\n          data={data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: any, name: string) => [\r\n              value,\r\n              name === \"count\" ? (isRTL ? \"الكل\" : \"All\") : name,\r\n            ]}\r\n          />\r\n          <Legend\r\n            formatter={(value) => {\r\n              return value === \"count\"\r\n                ? isRTL\r\n                  ? \"كل المواعيد\"\r\n                  : \"All Appointments\"\r\n                : isRTL\r\n                ? \"المواعيد المنجزة\"\r\n                : \"Completed\";\r\n            }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            fill={seccolor}\r\n            stroke={seccolor}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={isRTL ? \"منجز\" : \"Completed\"}\r\n            stroke={pricolor}\r\n            fill={pricolor}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default EventsDaysChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nconst PercentChart = ({ height, data, pricolor, seccolor, isRTL, prim }) => {\r\n  let pctComplete: any;\r\n  const completed = data.filter((d: any) => d.status === 10);\r\n  const all = data.length;\r\n  if (completed?.length > 0) {\r\n    pctComplete = completed.length / all;\r\n  } else {\r\n    pctComplete = 0;\r\n  }\r\n  const rdata = [{ value: pctComplete }];\r\n  const startPosition = 90,\r\n    endPosition = startPosition - 360 * pctComplete;\r\n  const value = pctComplete\r\n    ? Math.round(pctComplete * 100).toLocaleString() + \"%\"\r\n    : \"0%\";\r\n\r\n  const title = isRTL ? \"المواعيد المنجزة اليوم\" : \"Today Appointments\";\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart\r\n          height={height - 50}\r\n          margin={{\r\n            top: 20,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 70,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={[{ value: 1 }]}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={startPosition - 360}\r\n            isAnimationActive={false}\r\n            paddingAngle={0}\r\n            fill={fade(seccolor, 0.3)}\r\n            dataKey=\"value\"\r\n          />\r\n          <Pie\r\n            data={rdata}\r\n            innerRadius=\"85%\"\r\n            outerRadius=\"100%\"\r\n            startAngle={startPosition}\r\n            endAngle={endPosition}\r\n            cornerRadius={20}\r\n            fill={pricolor}\r\n            dataKey=\"value\"\r\n            labelLine={false}\r\n            animationBegin={0}\r\n            animationDuration={1000}\r\n          >\r\n            <Label\r\n              position=\"center\"\r\n              value={value}\r\n              style={{ fontSize: 25, fontWeight: \"bold\" }}\r\n              fill={pricolor}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PercentChart;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { fade, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ChartHeader from \"./ChartHeader\";\r\n\r\nexport const MonthsEmpChart = (props: any) => {\r\n  const {\r\n    data,\r\n    isRTL,\r\n    color,\r\n    height,\r\n    employees,\r\n    departments,\r\n    title,\r\n    prim,\r\n  } = props;\r\n  const rdata: any = [];\r\n  if (employees) {\r\n    if (data?.employees) {\r\n      employees.map((emp: any) => {\r\n        const name = isRTL ? emp.nameAr : emp.name;\r\n        const value = data.employees.filter((en: any) => en.name === name)?.[0]\r\n          ?.amount;\r\n        // const color = emp.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (departments) {\r\n    if (data?.departments) {\r\n      departments.map((dep: any) => {\r\n        const name = isRTL ? dep.nameAr : dep.name;\r\n        const value = data.departments.filter(\r\n          (en: any) => en.name === name,\r\n        )?.[0]?.amount;\r\n        // const color = dep.color;\r\n        rdata.push({\r\n          name,\r\n          value,\r\n          // color,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  const ucolor = fade(color, 0.7);\r\n\r\n  return (\r\n    <Paper style={{ height }}>\r\n      <ChartHeader title={title} color={prim}></ChartHeader>\r\n      <ResponsiveContainer width=\"100%\" height={height - 60}>\r\n        <BarChart\r\n          height={height}\r\n          data={rdata}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: isRTL ? 50 : 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            mirror={isRTL ? true : false}\r\n            tickFormatter={(value) => value.toLocaleString()}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: \"transparent\" }}\r\n            formatter={(value) => [value.toLocaleString()]}\r\n          />\r\n          <Bar dataKey=\"value\" fill={ucolor} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthsEmpChart;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, fade, Grid } from \"@material-ui/core\";\r\nimport { InfoAmount, InfoIcon, InfoTitle } from \"./common\";\r\n\r\nexport default function InfoBoxDark({\r\n  title,\r\n  value,\r\n  icon,\r\n  color,\r\n  salesColor,\r\n  eventColor,\r\n}: any) {\r\n  const cf = fade(salesColor, 0.8);\r\n  const ef = fade(eventColor, 0.8);\r\n  return (\r\n    <Paper style={{ height: 116, background: cf }}>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoIcon color=\"#fafafa\" icon={icon}></InfoIcon>\r\n              <InfoTitle color=\"#fafafa\" title={title}></InfoTitle>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n            >\r\n              <InfoAmount color=\"#fafafa\" value={value}></InfoAmount>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createDepartment,\r\n  deleteDepartment,\r\n  getDepartments,\r\n  updateDepartment,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getDeparts, depData]: any = useLazyQuery(getDepartments, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addDepartment] = useMutation(createDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [editDepartment] = useMutation(updateDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n  const [removeDepartment] = useMutation(deleteDepartment, {\r\n    refetchQueries: [{ query: getDepartments, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDeparts();\r\n  }, [getDeparts]);\r\n\r\n  const departments = depData?.data?.[\"getDepartments\"]?.data || [];\r\n  const refreshdepartment = () => depData?.refetch();\r\n  return {\r\n    departments,\r\n    refreshdepartment,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function PageLayout(props: any) {\r\n  const {\r\n    children,\r\n    menuitem,\r\n    isRTL,\r\n    refresh,\r\n    theme,\r\n    bgcolor = theme.palette.primary.light,\r\n  } = props;\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box p={isMobile ? 0 : 2} pt={isMobile ? 6 : undefined}>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Paper\r\n          elevation={0}\r\n          style={{\r\n            backgroundColor: fade(bgcolor, 0.2),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            height: 50,\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            borderTopRightRadius: 10,\r\n            borderTopLeftRadius: 10,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              color: theme.palette.primary.main,\r\n              fontSize: 22,\r\n            }}\r\n          >\r\n            {isRTL ? menuitem.titleAr : menuitem.titleEn}\r\n          </Typography>\r\n          {refresh && (\r\n            <IconButton\r\n              style={{\r\n                backgroundColor: fade(bgcolor, 0.5),\r\n                padding: 7,\r\n              }}\r\n              onClick={refresh}\r\n            >\r\n              <RefreshOutlinedIcon\r\n                style={{ fontSize: 24, color: \"#eee\" }}\r\n                color=\"primary\"\r\n              ></RefreshOutlinedIcon>\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Hidden>\r\n      <Paper\r\n        style={{\r\n          // height: window.innerHeight - 85,\r\n          // overflow: \"auto\",\r\n          backgroundColor: fade(theme.palette.primary.light, 0.05),\r\n          // borderTopRightRadius: 0,\r\n          // borderTopLeftRadius: 0,\r\n          borderBottomLeftRadius: isMobile ? undefined : 10,\r\n          borderBottomRightRadius: isMobile ? undefined : 10,\r\n        }}\r\n        elevation={0}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { LanguageType } from \"./langTypes\";\r\n\r\nexport const translation = (lang: LanguageType) => {\r\n  const words = {\r\n    all: lang.words.all,\r\n    newInvoice: lang.words.newInvoice,\r\n    addInvoice: lang.words.addInvoice,\r\n    addCategory: lang.words.addCategory,\r\n    categoryName: lang.words.categoryName,\r\n    categoryNameAr: lang.words.categoryNameAr,\r\n    addDepartment: lang.words.addDepartment,\r\n    department: lang.words.department,\r\n    departmentName: lang.words.departmentName,\r\n    departmentNameAr: lang.words.departmentNameAr,\r\n    employee: lang.words.employee,\r\n    addEmployee: lang.words.addEmployee,\r\n    employeeName: lang.words.employeeName,\r\n    employeeNameAr: lang.words.employeeNameAr,\r\n    service: lang.words.service,\r\n    product: lang.words.product,\r\n    services: lang.words.services,\r\n    products: lang.words.products,\r\n    serviceproduct: lang.words.serviceproduct,\r\n    newService: lang.words.newService,\r\n    serviceName: lang.words.serviceName,\r\n    serviceNameAr: lang.words.serviceNameAr,\r\n    customer: lang.words.customer,\r\n    supplier: lang.words.supplier,\r\n    newCustomer: lang.words.newCustomer,\r\n    customerName: lang.words.customerName,\r\n    customerNameAr: lang.words.customerNameAr,\r\n    addBrand: lang.words.addBrand,\r\n    brandName: lang.words.brandName,\r\n    brandNameAr: lang.words.brandNameAr,\r\n    newProducts: lang.words.newProducts,\r\n    productName: lang.words.productName,\r\n    newspecialproducts: lang.words.newspecialproducts,\r\n    serailNo: lang.words.serailNo,\r\n    newCustomers: lang.words.newCustomer,\r\n    newSupplier: lang.words.newSupplier,\r\n    supplierName: lang.words.supplierName,\r\n    phoneNumber: lang.words.phoneNumber,\r\n    email: lang.words.email,\r\n    category: lang.words.category,\r\n    brand: lang.words.brand,\r\n    cost: lang.words.cost,\r\n    price: lang.words.price,\r\n    used: lang.words.used,\r\n    underSale: lang.words.underSale,\r\n    save: lang.words.save,\r\n    cancel: lang.words.cancel,\r\n    close: lang.words.close,\r\n    color: lang.words.color,\r\n    name: lang.words.name,\r\n    nameAr: lang.words.nameAr,\r\n    nameEn: lang.words.nameEn,\r\n    username: lang.words.username,\r\n    password: lang.words.password,\r\n    login: lang.words.login,\r\n    logout: lang.words.logout,\r\n    signup: lang.words.signup,\r\n    edituser: lang.words.edituser,\r\n    adduser: lang.words.adduser,\r\n    deleteuser: lang.words.deleteuser,\r\n    delete: lang.words.delete,\r\n    discount: lang.words.discount,\r\n    total: lang.words.total,\r\n    amount: lang.words.amount,\r\n    grandtotal: lang.words.grandtotal,\r\n    profit: lang.words.profit,\r\n    day: lang.words.day,\r\n    tdays: lang.words.tdays,\r\n    week: lang.words.week,\r\n    month: lang.words.month,\r\n    year: lang.words.year,\r\n    cash: lang.words.cash,\r\n    paid: lang.words.paid,\r\n    credit: lang.words.credit,\r\n    cashbox: lang.words.cashbox,\r\n    finance: lang.words.finance,\r\n    card: lang.words.card,\r\n    bank: lang.words.bank,\r\n    partner: lang.words.partner,\r\n    income: lang.words.income,\r\n    sales: lang.words.sales,\r\n    appointments: lang.words.appointments,\r\n    past: lang.words.past,\r\n    today: lang.words.today,\r\n    coming: lang.words.coming,\r\n    discounts: lang.words.discounts,\r\n    status: lang.words.status,\r\n    start: lang.words.start,\r\n    end: lang.words.end,\r\n    no: lang.words.no,\r\n    qty: lang.words.qty,\r\n    print: lang.words.print,\r\n    printsave: lang.words.printsave,\r\n    time: lang.words.time,\r\n    timedate: lang.words.timedate,\r\n    to: lang.words.to,\r\n    from: lang.words.from,\r\n    type: lang.words.type,\r\n    description: lang.words.description,\r\n    ref: lang.words.ref,\r\n    depdraw: lang.words.depdraw,\r\n    depositbank: lang.words.depositbank,\r\n    addpartner: lang.words.addpartner,\r\n    drawpartner: lang.words.drawpartner,\r\n    customerpay: lang.words.customerpay,\r\n    fromdate: lang.words.fromdate,\r\n    todate: lang.words.todate,\r\n    period: lang.words.period,\r\n    avatar: lang.words.avatar,\r\n    roles: lang.words.roles,\r\n    duration: lang.words.duration,\r\n    companyName: lang.words.companyName,\r\n    companyNameAr: lang.words.companyNameAr,\r\n    mobile: lang.words.mobile,\r\n    fax: lang.words.fax,\r\n    phone2: lang.words.phone2,\r\n    website: lang.words.website,\r\n    accounts: lang.words.accounts,\r\n    account: lang.words.account,\r\n    address: lang.words.address,\r\n    theaddress: lang.words.theaddress,\r\n    unit: lang.words.unit,\r\n    info: lang.words.info,\r\n    expenses: lang.words.expenses,\r\n    hresource: lang.words.hresource,\r\n    oresource: lang.words.oresource,\r\n    resourses: lang.words.resourses,\r\n    generalkaid: lang.words.generalkaid,\r\n    interval: lang.words.interval,\r\n    task: lang.words.task,\r\n    addaction: lang.words.addaction,\r\n    title: lang.words.title,\r\n    receipts: lang.words.receipts,\r\n    notification: lang.words.notification,\r\n    reminder: lang.words.reminder,\r\n    subject: lang.words.subject,\r\n    body: lang.words.body,\r\n    weekdays: lang.words.weekdays,\r\n  };\r\n\r\n  const messages = {\r\n    itemadded: lang.messages.itemadded,\r\n    itemexist: lang.messages.itemexist,\r\n    erroronadd: lang.messages.erroronadd,\r\n  };\r\n\r\n  const isRTL = lang.isRTL;\r\n  return { isRTL, words, messages };\r\n};\r\n","import { translation } from \"./translation\";\r\nconst en = require(\"./en.json\");\r\nconst ar = require(\"./ar.json\");\r\n\r\nexport { translation, en, ar };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [{ query: getEmployees, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { createItem, deleteItem, getServices, updateItem } from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getsevs, itmData]: any = useLazyQuery(getServices, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addService] = useMutation(createItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [editService] = useMutation(updateItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n  const [removeService] = useMutation(deleteItem, {\r\n    refetchQueries: [{ query: getServices, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getsevs();\r\n  }, [getsevs]);\r\n\r\n  const services = itmData?.data?.[\"getServices\"]?.data || [];\r\n  const refreshservice = () => itmData?.refetch();\r\n\r\n  return { services, addService, editService, removeService, refreshservice };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getCustomers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addCustomer] = useMutation(createCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [editCustomer] = useMutation(updateCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n  const [removeCustomer] = useMutation(deleteCustomer, {\r\n    refetchQueries: [{ query: getCustomers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const customers = custData?.data?.[\"getCustomers\"]?.data || [];\r\n  const refreshcustomer = () => custData?.refetch();\r\n  return {\r\n    customers,\r\n    refreshcustomer,\r\n    addCustomer,\r\n    editCustomer,\r\n    removeCustomer,\r\n  };\r\n};\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastNos } from \"../graphql\";\r\nimport { lastNoTypes } from \"../languages/langTypes\";\r\n\r\nexport default () => {\r\n  const [freshlastNos, invNopData] = useLazyQuery(getLastNos, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    freshlastNos();\r\n  }, [freshlastNos]);\r\n\r\n  const lastNosdata = invNopData?.data?.[\"getLastNos\"]?.data;\r\n  const numbers = lastNosdata ? JSON.parse(lastNosdata) : [];\r\n\r\n  const lastNos: lastNoTypes | any = {};\r\n  if (numbers.length > 0) {\r\n    numbers.map((no: any) => {\r\n      lastNos[no._id] = no.sequenceValue;\r\n    });\r\n  }\r\n  return { lastNos, freshlastNos };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getDecryptedLicense {\r\n    getDecryptedLicense {\r\n      ok\r\n      error\r\n      data\r\n      message\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getBranches, updateBranch } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getbras, branchData] = useLazyQuery(getBranches);\r\n\r\n  const [editBranch] = useMutation(updateBranch, {\r\n    refetchQueries: [{ query: getBranches }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getbras();\r\n  }, [getbras]);\r\n\r\n  const branches = branchData?.data?.[\"getBranches\"]?.data || [];\r\n\r\n  return { branches, editBranch };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { moneyFormat, moneyFormatSimple } from \"../../Shared/colorFormat\";\r\nimport { InfoBox } from \"../../components\";\r\nimport SalesDaysChart from \"../../components/charts/SalesDaysChart\";\r\nimport MonthsChart from \"../../components/charts/MonthsChart\";\r\n\r\nimport DaysEvents from \"../../components/charts/DaysEvents\";\r\nimport EventsDaysChart from \"../../components/charts/EventsDaysChart\";\r\nimport PercentChart from \"../../components/charts/PercentChart\";\r\nimport MonthsEmpChart from \"../../components/charts/MonthsEmpChart\";\r\nimport InfoBoxDark from \"../../components/charts/InfoBoxDark\";\r\nimport useLandingChart from \"../../hooks/useLandingChart\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Landing(props: any) {\r\n  const { words, isRTL, user, theme, menuitem } = props;\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  const {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  } = useLandingChart();\r\n\r\n  const refresh = () => {\r\n    if (refreshChartData) {\r\n      refreshChartData();\r\n    }\r\n  };\r\n\r\n  const salesColor = theme.palette.primary.light;\r\n  const eventColor = theme.palette.secondary.main;\r\n  const prim = theme.palette.primary.light;\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      employees={employees}\r\n      departments={departments}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      user={user}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Box\r\n        style={{\r\n          height: window.innerHeight - 90,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Box style={{ margin: 20, marginBottom: 20 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              {raseeds && salesMonthTotal && eventsMonthCount && (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={isRTL ? \"الصندوق\" : \"Cash\"}\r\n                      value={moneyFormat(raseeds?.cash)}\r\n                      icon=\"cash\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBoxDark\r\n                      title={words.card}\r\n                      value={moneyFormat(raseeds?.card)}\r\n                      icon=\"card\"\r\n                      color={prim}\r\n                      salesColor={salesColor}\r\n                      eventColor={eventColor}\r\n                    ></InfoBoxDark>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormat(salesTodayTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا اليوم\" : \"Today Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormat(salesMonthTotal)}\r\n                      icon=\"sales\"\r\n                      color={salesColor}\r\n                      desc={isRTL ? \"مبيعات هذا الشهر\" : \"This Month Sales\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"اليوم\" : \"Today\"}\r\n                      value={moneyFormatSimple(eventsTodayCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={isRTL ? \"المواعيد اليوم\" : \"Appointments Today\"}\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={2}>\r\n                    <InfoBox\r\n                      title={isRTL ? \"هذا الشهر\" : \"This Month\"}\r\n                      value={moneyFormatSimple(eventsMonthCount)}\r\n                      icon=\"event\"\r\n                      color={eventColor}\r\n                      desc={\r\n                        isRTL ? \"المواعيد هذا الشهر\" : \"Appointments This month\"\r\n                      }\r\n                    ></InfoBox>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {todayEvents && (\r\n              <Grid item xs={12} md={4}>\r\n                <PercentChart\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  data={todayEvents}\r\n                  height={300}\r\n                  prim={prim}\r\n                  isRTL={isRTL}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {salesDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <SalesDaysChart\r\n                  dataKey=\"total\"\r\n                  isRTL={isRTL}\r\n                  data={salesDays}\r\n                  color={salesColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></SalesDaysChart>\r\n              </Grid>\r\n            )}\r\n            {nextEventDays && (\r\n              <Grid item xs={12} md={4}>\r\n                <DaysEvents\r\n                  dataKey=\"count\"\r\n                  theme={theme}\r\n                  isRTL={isRTL}\r\n                  data={nextEventDays}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></DaysEvents>\r\n              </Grid>\r\n            )}\r\n            {eventDays && (\r\n              <Grid item xs={12} md={8}>\r\n                <EventsDaysChart\r\n                  dataKey=\"count\"\r\n                  isRTL={isRTL}\r\n                  data={eventDays}\r\n                  color={eventColor}\r\n                  pricolor={salesColor}\r\n                  seccolor={eventColor}\r\n                  height={300}\r\n                  prim={prim}\r\n                ></EventsDaysChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب الموظف\"\r\n                      : \"Month Sales - Employee\"\r\n                  }\r\n                  employees={employees.filter((emp: any) => emp.resType === 1)}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonth && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsEmpChart\r\n                  data={salesMonth}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  title={\r\n                    isRTL\r\n                      ? \"مبيعات هذا الشهر بحسب القسم\"\r\n                      : \"Month Sales - Department\"\r\n                  }\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  height={400}\r\n                  prim={prim}\r\n                ></MonthsEmpChart>\r\n              </Grid>\r\n            )}\r\n            {salesMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={salesMonths}\r\n                  isRTL={isRTL}\r\n                  color={salesColor}\r\n                  prim={prim}\r\n                  dataKey=\"total\"\r\n                  title={isRTL ? \"المبيعات بحسب الشهور\" : \"Months Sales\"}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n            {eventMonths && (\r\n              <Grid item xs={12} md={6}>\r\n                <MonthsChart\r\n                  data={eventMonths}\r\n                  isRTL={isRTL}\r\n                  color={eventColor}\r\n                  dataKey=\"count\"\r\n                  title={isRTL ? \"المواعيد بحسب الشهور\" : \"Months Appointment\"}\r\n                  prim={prim}\r\n                  height={400}\r\n                ></MonthsChart>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport _ from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { getLastDays, getLastMonths } from \"../common/time\";\r\n\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { getDateFormat, getDateMonthFormat } from \"../Shared/colorFormat\";\r\nimport { getStoreItem } from \"../store\";\r\nimport useDepartments from \"./useDepartments\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n\r\n  const [freshChartData, chartData]: any = useLazyQuery(getLandingChartData);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    freshChartData();\r\n  }, [freshChartData]);\r\n\r\n  const data = chartData?.data?.[\"getLandingChartData\"]?.data;\r\n\r\n  const refreshChartData = () => chartData?.refetch();\r\n\r\n  let salesDays: any;\r\n  let eventDays: any;\r\n  let todaySales: any;\r\n  let nextEventDays: any;\r\n\r\n  let todayEvents: any;\r\n  let salesTodayTotal: any;\r\n  let eventsTodayCount: any;\r\n\r\n  let salesMonths: any;\r\n  let eventMonths: any;\r\n  let salesMonth: any;\r\n  let eventsMonth: any;\r\n  let salesMonthTotal: any;\r\n  let eventsMonthCount: any;\r\n\r\n  let raseeds: any;\r\n\r\n  const fname = isRTL ? \"nameAr\" : \"name\";\r\n  const dfname = isRTL ? \"departmentNameAr\" : \"departmentName\";\r\n  const efname = isRTL ? \"employeeNameAr\" : \"employeeName\";\r\n  const sfname = isRTL ? \"statusAr\" : \"statusEn\";\r\n\r\n  if (data) {\r\n    const charts = JSON.parse(data);\r\n\r\n    const {\r\n      accounts,\r\n      daysEvents,\r\n      daysSales,\r\n      monthsEvents,\r\n      monthsSales,\r\n      todayEventsData,\r\n      todaySalesData,\r\n    } = charts;\r\n\r\n    raseeds = accounts;\r\n\r\n    const daysSale = daysSales.map((d: any) => {\r\n      const { date, count, amount } = d;\r\n      return {\r\n        name: getDateFormat(new Date(date), isRTL),\r\n        count,\r\n        total: amount,\r\n        date: new Date(date),\r\n      };\r\n    });\r\n\r\n    const daysList = getLastDays(7, isRTL);\r\n\r\n    salesDays = daysList.map((day: any) => {\r\n      const is = daysSale.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n\r\n    const daydata: any = _.groupBy(daysEvents, \"date\");\r\n    const dayskeys = Object.keys(daydata);\r\n\r\n    const daysEvent = dayskeys.map((day: any) => {\r\n      const status = _(daydata[day])\r\n        .groupBy(sfname)\r\n        .map((array, key) => ({\r\n          name: key,\r\n          count: _.sumBy(array, \"count\"),\r\n          amount: _.sumBy(array, \"amount\"),\r\n        }))\r\n        .orderBy(\"count\")\r\n        .value();\r\n\r\n      const spredstatus = _.mapValues(_.keyBy(status, \"name\"), \"count\");\r\n\r\n      const time: any = daydata[day]?.[0]?.date;\r\n      const total = _.sumBy(daydata[day], \"amount\");\r\n      const count = _.sumBy(daydata[day], \"count\");\r\n\r\n      const name = getDateFormat(new Date(time), isRTL);\r\n      return {\r\n        name,\r\n        status,\r\n        ...spredstatus,\r\n        count,\r\n        total,\r\n        date: new Date(day),\r\n      };\r\n    });\r\n    eventDays = daysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    const nextdaysList = getLastDays(7, isRTL, \"mid\");\r\n    nextEventDays = nextdaysList.map((day: any) => {\r\n      const is = daysEvent.filter((ds: any) => ds.name === day);\r\n      if (is && is.length > 0) {\r\n        return is[0];\r\n      } else {\r\n        return {\r\n          name: day,\r\n          count: 0,\r\n          total: 0,\r\n        };\r\n      }\r\n    });\r\n    if (todaySalesData) {\r\n      const mdata = _.groupBy(todaySalesData, dfname);\r\n      const todayKeys = Object.keys(mdata);\r\n      todaySales = todayKeys.map((dep: any) => {\r\n        const value = _.sumBy(mdata[dep], \"amount\");\r\n        const color =\r\n          departments && departments.length\r\n            ? departments.filter((item: any) => item[fname] === dep)\r\n            : null;\r\n        return {\r\n          name: dep,\r\n          value,\r\n          color: color ? color?.[0]?.color : \"\",\r\n        };\r\n      });\r\n      salesTodayTotal = _.sumBy(todaySales, \"value\");\r\n    }\r\n    if (todayEventsData) {\r\n      eventsTodayCount = todayEventsData.length;\r\n    }\r\n    todayEvents = todayEventsData;\r\n\r\n    if (monthsSales) {\r\n      const mdata = _.groupBy(monthsSales, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n      const monthsSale = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n            color: array[0].color,\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      salesMonths = monthsList.map((mon: any) => {\r\n        const is = monthsSale.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      salesMonth = salesMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      salesMonthTotal = salesMonth?.total;\r\n    }\r\n    if (monthsEvents) {\r\n      const mdata = _.groupBy(monthsEvents, \"month\");\r\n      const monthsKeys = Object.keys(mdata);\r\n\r\n      const monthsEvent = monthsKeys.map((month: any) => {\r\n        const departs = _(mdata[month])\r\n          .groupBy(dfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n\r\n        const employees = _(mdata[month])\r\n          .groupBy(efname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"name\")\r\n          .value();\r\n        const status = _(mdata[month])\r\n          .groupBy(sfname)\r\n          .map((array, key) => ({\r\n            name: key,\r\n            count: _.sumBy(array, \"count\"),\r\n            amount: _.sumBy(array, \"amount\"),\r\n          }))\r\n          .orderBy(\"count\")\r\n          .value();\r\n        const time: any = mdata[month]?.[0]?.date;\r\n        const total = _.sumBy(mdata[month], \"amount\");\r\n        const count = _.sumBy(mdata[month], \"count\");\r\n        const name = getDateMonthFormat(time, isRTL);\r\n        return {\r\n          name,\r\n          departments: departs,\r\n          employees,\r\n          status,\r\n          count,\r\n          total,\r\n          date: new Date(time),\r\n        };\r\n      });\r\n\r\n      const monthsList = getLastMonths(6, isRTL);\r\n      eventMonths = monthsList.map((mon: any) => {\r\n        const is = monthsEvent.filter((ds: any) => ds.name === mon);\r\n        if (is && is.length > 0) {\r\n          return is[0];\r\n        } else {\r\n          return {\r\n            name: mon,\r\n            count: 0,\r\n            total: 0,\r\n          };\r\n        }\r\n      });\r\n      const mname = getDateMonthFormat(new Date(), isRTL);\r\n      eventsMonth = eventMonths.filter((sm: any) => sm.name === mname)?.[0];\r\n      eventsMonthCount = eventsMonth.count;\r\n    }\r\n  }\r\n\r\n  return {\r\n    salesDays,\r\n    eventDays,\r\n    nextEventDays,\r\n    todaySales,\r\n    todayEvents,\r\n    salesTodayTotal,\r\n    eventsTodayCount,\r\n    salesMonths,\r\n    eventMonths,\r\n    salesMonth,\r\n    salesMonthTotal,\r\n    eventsMonthCount,\r\n    raseeds,\r\n    refreshChartData,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { AlertLocal } from \"../../components\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayout(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    onSubmit,\r\n    width,\r\n    height,\r\n    alrt,\r\n    mt = 30,\r\n    mb = 70,\r\n    maxWidth = \"sm\",\r\n    onlyclose = false,\r\n    print,\r\n    savetitle = isRTL ? \"حفظ\" : \"Save\",\r\n    taskvalue,\r\n    preventclose = false,\r\n    saving,\r\n    bgcolor,\r\n  } = props;\r\n  const bgc = bgcolor ? fade(bgcolor, 0.1) : \"#eee\";\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={preventclose ? () => null : onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      maxWidth={maxWidth}\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: bgc,\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title} {taskvalue ? ` - ${taskvalue?.title}` : \"\"}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width ? width : undefined,\r\n          height: height ? height : undefined,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {React.cloneElement(children, { ...props })}\r\n      </DialogContent>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n        ></AlertLocal>\r\n      )}\r\n\r\n      <DialogActions\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.05)\r\n            : \"#dddd\",\r\n          height: 60,\r\n          alignItems: \"center\",\r\n          paddingRight: 5,\r\n          paddingLeft: 5,\r\n          flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n        }}\r\n      >\r\n        {onClose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"outlined\"\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"اغلاق\" : \"Close\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {print && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={print}\r\n            color=\"primary\"\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              {isRTL ? \"طباعة\" : \"print\"}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        {!onlyclose && (\r\n          <Button\r\n            style={{ width: 100, height: 36, marginRight: 10, marginLeft: 10 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n            disabled={saving}\r\n          >\r\n            <Typography\r\n              style={{ marginLeft: 5, marginRight: 5 }}\r\n              variant=\"subtitle2\"\r\n            >\r\n              {savetitle}\r\n            </Typography>\r\n            {saving && <CircularProgress color=\"primary\" size={16} />}\r\n            {print && (\r\n              <Typography\r\n                style={{\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  fontSize: 10,\r\n                  color: \"#ddd\",\r\n                }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {isRTL ? `(طباعة)` : `(Print)`}\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocalNoby = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\n\r\nconst PopupDeprtment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [depType, setDepType] = useState(1);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.departResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [color, setColor] = useState<any>(\"#AAAAAA\");\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setColor(row.color);\r\n      setDepType(row.depType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const desc = data.desc;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      depType,\r\n      desc,\r\n      color,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createDepartment\" : \"updateDepartment\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem);\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      setColor(\"#AAAAAA\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    onClose();\r\n    reset();\r\n    setColor(\"#AAAAAA\");\r\n    setSaving(false);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة قسم\"\r\n      : \"تعديل بيانات قسم\"\r\n    : isNew\r\n    ? \"New Department\"\r\n    : \"Edit Department\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={depType}\r\n                onChange={(e: any) => setDepType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  width: 200,\r\n                }}\r\n                InputProps={{\r\n                  style: { borderRadius: 5, color: \"#fff\" },\r\n                }}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDeprtment;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { dayslist } from \"../constants/datatypes\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function DaysOffView({ isRTL, daysoff, daysoffChange }) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        style={{ fontWeight: \"bold\", marginBottom: 10 }}\r\n      >\r\n        {isRTL ? \"يوم العطلة\" : \"Day Off\"}\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        {dayslist.map((day: any) => {\r\n          return (\r\n            <FormControlLabel\r\n              style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n              key={day.id}\r\n              control={\r\n                <Checkbox\r\n                  checked={daysoff[day.short]}\r\n                  onChange={daysoffChange}\r\n                  color=\"primary\"\r\n                  name={day.short}\r\n                  style={{ margin: 0, padding: 0, paddingBottom: 5 }}\r\n                />\r\n              }\r\n              label={isRTL ? day.nameAr : day.name}\r\n            />\r\n          );\r\n        })}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport OptionItem from \"../../Shared/OptionItem\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport OptionItemData from \"../../Shared/OptionItemData\";\r\n\r\nexport default function AutoFieldLocal({\r\n  name,\r\n  options,\r\n  value,\r\n  setSelectValue,\r\n  setSelectError,\r\n  selectError,\r\n  refernce,\r\n  register,\r\n  openAdd,\r\n  title,\r\n  ms,\r\n  openOnFocus,\r\n  classes,\r\n  basename,\r\n  resetRelated,\r\n  disabled,\r\n  isRTL,\r\n  setPricevalue,\r\n  mb,\r\n  day,\r\n  width,\r\n  showphone,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={openAdd ? 11 : 12}>\r\n        <Autocomplete\r\n          openOnFocus={openOnFocus}\r\n          autoSelect\r\n          fullWidth\r\n          options={options}\r\n          getOptionLabel={(option: any) => {\r\n            let nm;\r\n            if (basename) {\r\n              nm = isRTL ? option?.[`${basename}Ar`] : option?.[basename];\r\n            } else if (option.title && !option.name) {\r\n              nm = option?.title;\r\n            } else {\r\n              nm = isRTL ? option?.nameAr : option?.name;\r\n            }\r\n            const phone = option?.phone ? option?.phone : \"\";\r\n            if (phone && showphone) {\r\n              return `${nm} - ${phone}`;\r\n            } else {\r\n              return nm ? nm : \"\";\r\n            }\r\n          }}\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => {\r\n            if (name === \"item\") {\r\n              return (\r\n                <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n              );\r\n            } else {\r\n              return (\r\n                <OptionItem\r\n                  day={day}\r\n                  isRTL={isRTL}\r\n                  item={option}\r\n                  basename={basename}\r\n                  showphone={showphone}\r\n                ></OptionItem>\r\n              );\r\n            }\r\n          }}\r\n          value={value}\r\n          disabled={disabled}\r\n          onChange={(_, newValue: any) => {\r\n            setSelectValue(newValue);\r\n            if (setSelectError) {\r\n              setSelectError(false);\r\n            }\r\n            if (resetRelated) {\r\n              resetRelated(null);\r\n            }\r\n            if (setPricevalue) {\r\n              setPricevalue(newValue?.price);\r\n            }\r\n          }}\r\n          style={{\r\n            marginInlineStart: ms ? ms : undefined,\r\n            width: width ? width : undefined,\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n          }}\r\n          classes={classes ? { input: classes.smallFont } : undefined}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={name}\r\n              name={name}\r\n              label={title}\r\n              variant=\"outlined\"\r\n              error={selectError}\r\n              style={{ marginBottom: mb }}\r\n              fullWidth\r\n              inputRef={(ref) => {\r\n                if (refernce) {\r\n                  refernce.current = ref;\r\n                  if (register) {\r\n                    register(ref);\r\n                  }\r\n                }\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n      </Grid>\r\n      {openAdd && (\r\n        <Grid item xs={1}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            onClick={() => {\r\n              openAdd();\r\n            }}\r\n            style={{ width: 30, height: 30, marginTop: 15 }}\r\n          >\r\n            <AddIcon style={{ color: \"#aaa\" }}></AddIcon>\r\n          </IconButton>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DaysOffView from \"../Shared/DaysOffView\";\r\nimport { weekdays } from \"../constants/datatypes\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { SelectLocalNoby } from \"../pages/calendar/common/SelectLocalNoby\";\r\nimport { sectionTypes } from \"../constants/reports\";\r\n\r\nconst PopupEmployee = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n  const [daysoff, setDaysoff] = React.useState(weekdays);\r\n  const [resType, setResType] = useState(1);\r\n\r\n  const daysoffChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDaysoff({ ...daysoff, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      if (row.daysoff) {\r\n        setDaysoff(JSON.parse(row.daysoff));\r\n      }\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n      setResType(row.resType);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const phone = data.phone;\r\n    const email = data.email;\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      resType,\r\n      email,\r\n      color,\r\n      info,\r\n      daysoff: JSON.stringify(daysoff),\r\n      phone,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n    setDaysoff(weekdays);\r\n    setSaving(false);\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة موظف\"\r\n      : \"تعديل بيانات موظف\"\r\n    : isNew\r\n    ? \"New Employee\"\r\n    : \"Edit Employee\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <SelectLocalNoby\r\n                options={sectionTypes}\r\n                value={resType}\r\n                onChange={(e: any) => setResType(Number(e.target.value))}\r\n                isRTL={isRTL}\r\n                width={230}\r\n              ></SelectLocalNoby>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            margin={20}\r\n            mb={10}\r\n          />\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === resType)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            // openAdd={openDepartment}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"info\"\r\n            label={words.info}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={6}>\r\n              <DaysOffView\r\n                isRTL={isRTL}\r\n                daysoff={daysoff}\r\n                daysoffChange={daysoffChange}\r\n              ></DaysOffView>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                name=\"color\"\r\n                value={row?.color ? row.color : color}\r\n                variant=\"outlined\"\r\n                style={{ width: 200, backgroundColor: color }}\r\n                InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                margin=\"dense\"\r\n              />\r\n              <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployee;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { TextFieldLocal } from \"../components\";\r\n\r\nconst PopupCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.custResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { phone, email, mobile, address } = data;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      phone,\r\n      email,\r\n      mobile,\r\n      address,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createCustomer\" : \"updateCustomer\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"customer\");\r\n      reset();\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة عميل\"\r\n      : \"تعديل بيانات عميل\"\r\n    : isNew\r\n    ? \"New Customer\"\r\n    : \"Edit Customer\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n      // maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"phone\"\r\n                label={words.phoneNumber}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"mobile\"\r\n                label={words.mobile}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TextFieldLocal\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            name=\"address\"\r\n            label={words.theaddress}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { FormControlLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupService = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.itmResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      setResType(null);\r\n      // const catId = row.categoryId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { price, unit, desc } = data;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      itemType: 2,\r\n      name,\r\n      nameAr,\r\n      price,\r\n      unit,\r\n      desc,\r\n      department,\r\n      employee,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createItem\" : \"updateItem\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"item\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"خدمة جديدة\"\r\n      : \"تعديل خدمة\"\r\n    : isNew\r\n    ? \"New Service\"\r\n    : \"Edit Service\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"price\"\r\n                label={words.price}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                name=\"unit\"\r\n                label={words.unit}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                newtext={newtext}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 2)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={resType}\r\n            onChange={(e: any) => {\r\n              setResType(Number(e.target.value));\r\n              setEmplvalue(null);\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              value={2}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n            />\r\n\r\n            <FormControlLabel\r\n              value={3}\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n            />\r\n          </RadioGroup>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={resType === 3 ? words.resourses : words.employee}\r\n            disabled={!resType}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            isRTL={isRTL}\r\n            mb={20}\r\n          ></AutoFieldLocal>\r\n          <TextFieldLocal\r\n            name=\"desc\"\r\n            label={words.description}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={4}\r\n            rows={4}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupService;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Popper } from \"@material-ui/core\";\r\n\r\nconst styles: any = () => ({\r\n  popper: {\r\n    width: \"fit-content\",\r\n  },\r\n});\r\n\r\nconst AutoPopper = (props) => {\r\n  return <Popper {...props} style={styles.popper} placement=\"bottom-start\" />;\r\n};\r\n\r\nexport default AutoPopper;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"./OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"./AutoField\";\r\nimport AutoPopper from \"./AutoPopper\";\r\n\r\nexport default function ServiceItemForm({\r\n  options,\r\n  addItem,\r\n  words,\r\n  employees,\r\n  departments,\r\n  classes,\r\n  user,\r\n  isRTL,\r\n}: any) {\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (itemvalue) {\r\n      if (itemvalue.employeeId) {\r\n        const itememp = employees.filter(\r\n          (emp: any) => emp._id === itemvalue.employeeId\r\n        )[0];\r\n        setEmplvalue(itememp);\r\n      }\r\n      if (itemvalue.departmentId) {\r\n        const itemdep = departments.filter(\r\n          (it: any) => it._id === itemvalue.departmentId\r\n        )[0];\r\n        setDepartvalue(itemdep);\r\n      }\r\n    }\r\n  }, [employees, departments, itemvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n    setDepartvalue(null);\r\n  };\r\n\r\n  const addLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : undefined;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : undefined;\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    addItem(itemdata);\r\n    resetAll();\r\n    itemRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          // openOnFocus\r\n          PopperComponent={AutoPopper}\r\n          autoSelect\r\n          size=\"small\"\r\n          options={options}\r\n          getOptionLabel={(option: any) =>\r\n            isRTL ? option.nameAr : option.name\r\n          }\r\n          getOptionSelected={(option, values) => option._id === values._id}\r\n          renderOption={(option) => (\r\n            <OptionItemData isRTL={isRTL} item={option}></OptionItemData>\r\n          )}\r\n          value={itemvalue}\r\n          onChange={(_, newValue: any) => {\r\n            setItemvalue(newValue);\r\n            setItemprice(newValue?.price || 0);\r\n            if (newValue) {\r\n              setItemError(false);\r\n            }\r\n          }}\r\n          classes={{ input: classes.smallFont }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id=\"service\"\r\n              name=\"service\"\r\n              label={`${words.service}/${words.product}`}\r\n              error={itemError}\r\n              variant=\"outlined\"\r\n              style={{ width: 220 }}\r\n              inputRef={(ref) => {\r\n                itemRef.current = ref;\r\n              }}\r\n              InputLabelProps={{\r\n                style: { fontSize: isRTL ? 16 : 13 },\r\n              }}\r\n            ></TextField>\r\n          )}\r\n        />\r\n\r\n        <Box>\r\n          <Box style={{ marginRight: 10, marginTop: -20 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={3}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            // title={words.employee}\r\n            words={words}\r\n            disabled={!resType}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={180}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n        </Box>\r\n        <AutoField\r\n          name=\"department\"\r\n          title={words.department}\r\n          words={words}\r\n          options={departments.filter((dep: any) => dep.depType === 2)}\r\n          value={departvalue}\r\n          setSelectValue={setDepartvalue}\r\n          setSelectError={setDepError}\r\n          selectError={depError}\r\n          refernce={departRef}\r\n          register={register}\r\n          width={200}\r\n          ms={0}\r\n          nolabel\r\n          noPlus\r\n          classes={classes}\r\n          isRTL={isRTL}\r\n        ></AutoField>\r\n        <TextField\r\n          name=\"qty\"\r\n          onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n          value={itemqty}\r\n          label={words.qty}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          error={errors.qty ? true : false}\r\n          style={{ width: 80 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <TextField\r\n          name=\"price\"\r\n          onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n          value={itemprice}\r\n          label={words.price}\r\n          error={errors.price ? true : false}\r\n          variant=\"outlined\"\r\n          inputRef={register}\r\n          type=\"number\"\r\n          style={{ width: 100 }}\r\n          margin=\"dense\"\r\n          onFocus={(e) => e.target.select()}\r\n          inputProps={{\r\n            style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n          }}\r\n        />\r\n        <Fab\r\n          style={{ marginLeft: 10 }}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={handleSubmit(addLocalItem)}\r\n          title=\"Create new row\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { Box, IconButton, Fab } from \"@material-ui/core\";\r\n\r\nconst AddButton = ({ onExecute }) => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <Box m={1}>\r\n      <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </Box>\r\n  </div>\r\n);\r\n\r\nconst EditButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Edit row\"\r\n  >\r\n    <EditIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst DeleteButton = ({ onExecute }) => (\r\n  <IconButton\r\n    onClick={onExecute}\r\n    style={{ height: 30, width: 30 }}\r\n    title=\"Delete row\"\r\n  >\r\n    <DeleteIcon style={{ fontSize: 22, color: \"#aaa\" }} />\r\n  </IconButton>\r\n);\r\n\r\nconst commandComponents = {\r\n  add: AddButton,\r\n  edit: EditButton,\r\n  delete: DeleteButton,\r\n};\r\n\r\nexport const CommandSmall = ({ id, onExecute }) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionItemData from \"../Shared/OptionItemData\";\r\nimport { yup } from \"../constants\";\r\nimport AutoField from \"../Shared/AutoField\";\r\nimport { itemClasses } from \"../themes/classes\";\r\nimport { useDepartments, useEmployees, useServices } from \"../hooks\";\r\nimport { PopupDialog } from \"../Shared\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupItem = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  editAction,\r\n  isRTL,\r\n  words,\r\n  user,\r\n}: any) => {\r\n  const classes = itemClasses();\r\n  const [itemError, setItemError] = useState<any>(false);\r\n\r\n  const [itemvalue, setItemvalue] = useState<any>(null);\r\n  const [itemqty, setItemqty] = useState(1);\r\n  const [itemprice, setItemprice] = useState(0);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors } = useForm(yup.invItemResolver);\r\n\r\n  const { departments } = useDepartments();\r\n  const { services } = useServices();\r\n  const { employees } = useEmployees();\r\n\r\n  const itemRef: any = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setItemprice(row.itemprice);\r\n      setItemqty(row.itemqty);\r\n      const servId = row._id;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (servId) {\r\n        const serv = services.filter((se: any) => se._id === servId)[0];\r\n        setItemvalue(serv);\r\n      }\r\n    }\r\n  }, [open]);\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n  const resetAll = () => {\r\n    setItemprice(0);\r\n    setItemqty(1);\r\n    setItemvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const editLocalItem = () => {\r\n    if (!itemvalue) {\r\n      setItemError(true);\r\n      itemRef.current.focus();\r\n      return;\r\n    }\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const itemdata = {\r\n      ...itemvalue,\r\n      ...employee,\r\n      ...department,\r\n      itemqty,\r\n      itemprice,\r\n      itemtotal: itemqty * itemprice,\r\n      itemtotalcost: itemqty * itemvalue.cost,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    editAction(itemdata);\r\n    onFormClose();\r\n  };\r\n  const onFormClose = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  return (\r\n    <PopupDialog\r\n      open={open}\r\n      onClose={onFormClose}\r\n      maxWidth={\"lg\"}\r\n      classes={classes}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          flex: 1,\r\n          margin: 20,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            flex: 1,\r\n\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            // openOnFocus\r\n            autoSelect\r\n            size=\"small\"\r\n            options={services}\r\n            getOptionLabel={(option: any) =>\r\n              isRTL ? option.nameAr : option.name\r\n            }\r\n            getOptionSelected={(option, values) => option._id === values._id}\r\n            renderOption={(option) => (\r\n              <OptionItemData item={option}></OptionItemData>\r\n            )}\r\n            disabled={true}\r\n            value={itemvalue}\r\n            onChange={(_, newValue: any) => {\r\n              setItemvalue(newValue);\r\n              // setItemprice(newValue?.price || 0);\r\n              if (newValue) {\r\n                setItemError(false);\r\n              }\r\n            }}\r\n            classes={{ input: classes.smallFont }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                id=\"service\"\r\n                name=\"service\"\r\n                label={words.service}\r\n                error={itemError}\r\n                variant=\"outlined\"\r\n                style={{ width: 180 }}\r\n                inputRef={(ref) => {\r\n                  itemRef.current = ref;\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { fontSize: 13 },\r\n                }}\r\n              ></TextField>\r\n            )}\r\n          />\r\n\r\n          <AutoField\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepError}\r\n            selectError={depError}\r\n            refernce={departRef}\r\n            register={register}\r\n            width={200}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n\r\n          <Box style={{ position: \"absolute\", marginTop: -80, right: 480 }}>\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={resType}\r\n              onChange={(e: any) => {\r\n                setResType(Number(e.target.value));\r\n                setEmplvalue(null);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value={1}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموظفين\" : \"Employees\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value={2}\r\n                control={\r\n                  <Radio style={{ padding: 0, margin: 0 }} color=\"primary\" />\r\n                }\r\n                label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n              />\r\n            </RadioGroup>\r\n          </Box>\r\n          <AutoField\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={emplslist}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            register={register}\r\n            width={150}\r\n            ms={0}\r\n            nolabel\r\n            noPlus\r\n            classes={classes}\r\n            isRTL={isRTL}\r\n          ></AutoField>\r\n          <TextField\r\n            name=\"qty\"\r\n            onChange={(e: any) => setItemqty(Number(e.target.value))}\r\n            value={itemqty}\r\n            label={words.qty}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            error={errors.qty ? true : false}\r\n            style={{ width: 80 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            onChange={(e: any) => setItemprice(Number(e.target.value))}\r\n            value={itemprice}\r\n            label={words.price}\r\n            error={errors.price ? true : false}\r\n            variant=\"outlined\"\r\n            inputRef={register}\r\n            type=\"number\"\r\n            style={{ width: 100 }}\r\n            margin=\"dense\"\r\n            onFocus={(e) => e.target.select()}\r\n            inputProps={{\r\n              style: { textAlign: \"right\", fontSize: 13, height: 13 },\r\n            }}\r\n          />\r\n          <Fab\r\n            style={{ marginLeft: 10 }}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={handleSubmit(editLocalItem)}\r\n            title=\"Create new row\"\r\n          >\r\n            <SaveOutlinedIcon />\r\n          </Fab>\r\n        </Box>\r\n      </Box>\r\n    </PopupDialog>\r\n  );\r\n};\r\n\r\nexport default PopupItem;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport PopupItem from \"../pubups/PopupItem\";\r\n// import { Command, PopupEditing } from \"../../Shared\";\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst CurrencyFormatter = ({ value }) => (\r\n  <Box\r\n    display=\"flex\"\r\n    style={{\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    }}\r\n  >\r\n    <Typography variant=\"subtitle2\">\r\n      {value ? value.toLocaleString(\"en-QA\") : \"\"}\r\n    </Typography>\r\n  </Box>\r\n);\r\n\r\nconst CurrencyTypeProvider = (props) => (\r\n  <DataTypeProvider formatterComponent={CurrencyFormatter} {...props} />\r\n);\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ItemsTable({\r\n  rows,\r\n  removeItem,\r\n  editItem,\r\n  isRTL,\r\n  words,\r\n  user,\r\n  height = 265,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.service },\r\n    { name: isRTL ? \"employeeNameAr\" : \"employeeName\", title: words.employee },\r\n    { name: \"itemqty\", title: words.qty },\r\n    { name: \"itemprice\", title: words.price },\r\n    { name: \"itemtotal\", title: words.total },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"name\", width: \"auto\" },\r\n    { columnName: \"itemqty\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemprice\", width: \"10%\", align: \"right\" },\r\n    { columnName: \"itemtotal\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  const addAction = () => {\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: height,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: height,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <CurrencyTypeProvider for={[\"itemtotal\", \"itemqty\", \"itemprice\"]} />\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow />\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <PopupEditing addAction={addAction} editAction={editItem}>\r\n            <PopupItem user={user} isRTL={isRTL} words={words}></PopupItem>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\n\r\nexport const PriceTotal = ({ items, amount, total, words }: any) => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        height: 65,\r\n      }}\r\n    >\r\n      <Typography style={{}}>\r\n        {words.total} : {moneyFormat(total)}\r\n        {/* {(sum || 0).toLocaleString(\"en-QA\", {\r\n          style: \"currency\",\r\n          currency: \"QAR\",\r\n        })} */}\r\n      </Typography>\r\n      <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n        {words.grandtotal} : {moneyFormat(amount)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\n\r\nconst PaymentSelect = ({ ptype, setPtype, isCash, setIsCash, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n  };\r\n  const onMainChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value === \"paid\") {\r\n      setIsCash(true);\r\n      setPtype(\"cash\");\r\n    } else {\r\n      setIsCash(false);\r\n      setPtype(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            value={isCash ? \"paid\" : \"credit\"}\r\n            onChange={onMainChange}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"paid\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.paid}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\", padding: 5 }}>\r\n              <FormControlLabel\r\n                value=\"credit\"\r\n                style={{\r\n                  minWidth: 200,\r\n                  backgroundColor: !isCash ? \"#e5e5e5\" : \"#f3f3f3\",\r\n                  marginInlineStart: 5,\r\n                  borderRadius: 10,\r\n                }}\r\n                control={<Radio color=\"primary\" />}\r\n                label={words.credit}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {isCash && (\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={ptype}\r\n              onChange={onchange}\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"cash\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.cash}\r\n                />\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginTop: 5 }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"card\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label={words.card}\r\n                />\r\n              </Box>\r\n            </RadioGroup>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst LoadingInline = () => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: \"relative\",\r\n      }}\r\n      display=\"flex\"\r\n      flex=\"1\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingInline;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { moneyFormat, simpleDateFormatter } from \"../Shared/colorFormat\";\r\n\r\nconst contHeader: any = { fontSize: 12, fontWeight: \"bold\" };\r\n\r\nconst contItem: any = { fontSize: 12 };\r\n\r\nexport class InvoicePrintA5 extends React.PureComponent<any, any> {\r\n  renderTableHeader = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            No\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              height: 34,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            ITEM DESCRIPTION\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            PRICE\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            QTY\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            TOTAL\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n  renderGrandTotal = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: 15 }}></div>\r\n        </Grid>\r\n        <Grid item xs={7}></Grid>\r\n        <Grid item xs={3}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderWidth: 1,\r\n              borderColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            GRAND TOTAL\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 6,\r\n              fontSize: 13,\r\n              fontWeight: \"bold\",\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              backgroundColor: \"#eee\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {moneyFormat(this.props.printData?.total)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderItem = (item: any) => {\r\n    var trimmed = item.name.substring(0, 42);\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.index + 1}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            <div>{trimmed}</div>\r\n            {item.sn && <div>SN: {item.sn}</div>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemprice)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {item.itemqty}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              paddingLeft: 8,\r\n              paddingRight: 8,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              height: 34,\r\n            }}\r\n          >\r\n            {moneyFormat(item.itemtotal)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderEmptyItem = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              textAlign: \"center\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <div\r\n            style={{\r\n              padding: 14,\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: \"#777\",\r\n              borderLeftWidth: 1,\r\n              borderLeftColor: \"#777\",\r\n              borderRightWidth: 1,\r\n              borderRightColor: \"#777\",\r\n              textAlign: \"right\",\r\n              height: 34,\r\n            }}\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  renderTableItems = () => {\r\n    const len = this.props.printData?.items?.length;\r\n    const empt = Array.from(Array(10 - len).fill({}));\r\n    const newitems = [...this.props.printData?.items, ...empt];\r\n    return newitems?.map((item: any) => {\r\n      if (item?._id) {\r\n        return this.renderItem(item);\r\n      } else {\r\n        return this.renderEmptyItem();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const invoice = this.props.printData;\r\n    const { company } = this.props;\r\n\r\n    return (\r\n      <Box style={{ fontFamily: \"inherit\" }} m={5}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={5}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderLeftWidth: 1,\r\n                borderTopColor: \"#ccc\",\r\n                borderBottomColor: \"#ccc\",\r\n                borderLeftColor: \"#ccc\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n                borderTopLeftRadius: 15,\r\n                height: 90,\r\n              }}\r\n            >\r\n              <img\r\n                src={company?.logo}\r\n                alt={company?.name}\r\n                height={100}\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  borderRadius: 10,\r\n                  marginTop: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <div\r\n              style={{\r\n                padding: 10,\r\n                backgroundColor: \"#eee\",\r\n                borderTopRightRadius: 15,\r\n                borderTopWidth: 1,\r\n                borderBottomWidth: 1,\r\n                borderRightWidth: 1,\r\n                borderBottomColor: \"#ccc\",\r\n                borderTopColor: \"#ccc\",\r\n                borderRightColor: \"#ccc\",\r\n                height: 90,\r\n              }}\r\n            >\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Contact</div>\r\n                  <div style={contItem}>{company.tel1}</div>\r\n                  <div style={contItem}>{company?.email}</div>\r\n                  <div style={contItem}>{company?.website}</div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div style={contHeader}>Address</div>\r\n                  <div style={contItem}>{company?.address}</div>\r\n                  {/* <div style={contItem}>Doha, Qatar</div> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <div style={{ fontWeight: \"bold\", marginBottom: 10, fontSize: 16 }}>\r\n              To:\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                fontWeight: \"bold\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {invoice.customerName}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: \"bold\" }}>Phone: </span>\r\n              {invoice.customerPhone}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ fontSize: 24, letterSpacing: 2 }}>INVOICE</div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Invoice No:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{invoice.invoiceNo}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n              <Grid item xs={4}>\r\n                <div style={{ fontWeight: \"bold\" }}>Date:</div>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <div>{simpleDateFormatter(invoice?.time)}</div>\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: 15 }}></div>\r\n          </Grid>\r\n          {this.renderTableHeader()}\r\n          {this.renderTableItems()}\r\n          {this.renderGrandTotal()}\r\n        </Grid>\r\n        <Box style={{ position: \"absolute\", bottom: 80, right: 100 }}>\r\n          <div style={{ fontWeight: \"bold\" }}>Name</div>\r\n          <div>Sales Executive</div>\r\n        </Box>\r\n        <Box style={{ position: \"absolute\", bottom: 40, left: 50 }}>\r\n          <div style={{ fontWeight: \"bold\", color: \"#999\", fontSize: 11 }}>\r\n            Thank you for your business.\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTasks(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getTasks(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        title\r\n        desc\r\n\r\n        id\r\n        name\r\n        type\r\n        start\r\n        end\r\n        progress\r\n        isDisabled\r\n        tasktype\r\n\r\n        priority\r\n        amount\r\n        evQty\r\n        evDone\r\n\r\n        status\r\n        totalinvoiced\r\n        totalpaid\r\n        toatlExpenses\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default () => {\r\n  const [getfins, finData] = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getfins();\r\n  }, [getfins]);\r\n\r\n  const baretasks = finData?.data?.[\"getTasks\"]?.data || [];\r\n  const tasks = baretasks.map((bt: any) => {\r\n    return {\r\n      ...bt,\r\n      name: bt.title,\r\n      nameAr: bt.title,\r\n    };\r\n  });\r\n\r\n  return { tasks };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { getCompany, updateCompany } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getComp, compData]: any = useLazyQuery(getCompany);\r\n\r\n  const [editCompany] = useMutation(updateCompany, {\r\n    refetchQueries: [{ query: getCompany }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getComp();\r\n  }, [getComp]);\r\n\r\n  let company: any;\r\n  const comp1 = compData?.data?.[\"getCompany\"]?.data || null;\r\n  if (comp1) {\r\n    company = JSON.parse(comp1);\r\n  }\r\n  const refreshcompany = () => compData?.refetch();\r\n\r\n  return { company, editCompany, refreshcompany };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useCustomers, useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../graphql\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupInvoice = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  task,\r\n  value,\r\n  name,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n  const { tasks } = useTasks();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const { company } = useCompany();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setTaskvalue(null);\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n      const _id = row.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n\r\n      if (!task && row.taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === row.taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      setCustvalue(cust);\r\n      setIsCash(row.isCash);\r\n      setDiscount(row.discount);\r\n      setInvNo(row.docNo);\r\n      handleDateChange(row.time);\r\n      setPtype(row.paymentType ? row.paymentType : \"\");\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      if (row && row._id) {\r\n        itemsData?.refetch();\r\n      }\r\n      // handlePrint();\r\n      freshlastNos({});\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleReactPrint();\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${row?.invoiceNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: row?.invoiceNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n            disabled={name === \"customerId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            disabled={name === \"taskId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n            disabled={name === \"employeeId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((dep: any) => dep.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n            disabled={name === \"departmentId\"}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f3f3f3\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              marginRight: 10,\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupInvoice;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { accountCodes } from \"../constants/kaid\";\r\n\r\nexport const getAccountCodeRange = (acc: any) => {\r\n  const parentcode = acc.parentcode;\r\n  if (parentcode) {\r\n    return accountCodes[parentcode];\r\n  }\r\n};\r\n\r\nexport const getAccountsNumbers = (parentvalue: any, accounts: any) => {\r\n  const { parentcode } = parentvalue;\r\n  const filteredaccounts = accounts.filter(\r\n    (acc: any) => parentcode === acc.parentcode\r\n  );\r\n  const codes = filteredaccounts.map((fc: any) => fc.code);\r\n  return codes;\r\n};\r\n\r\nexport const getValidCode = (codes: any[], range: any) => {\r\n  const len = range.max + 1 - range.min;\r\n  const arr = Array.from(Array(len), (_, i) => i + range.min);\r\n  const code = arr.find((item: any) => !codes.includes(item));\r\n  return code;\r\n};\r\n\r\nexport const getNewCode = (parentvalue: any, accounts: any, range: any) => {\r\n  const codes = getAccountsNumbers(parentvalue, accounts);\r\n  const newcode = getValidCode(codes, range);\r\n  return newcode;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { parentsAccountsList } from \"../constants/kaid\";\r\nimport useBranches from \"../hooks/useBranches\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { dublicateAlert, errorAlert } from \"../Shared\";\r\nimport { getAccountCodeRange, getNewCode } from \"../common/accounts\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nexport const accountClasses = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popup: {\r\n      height: \"50vh\",\r\n      width: \"60vh\",\r\n    },\r\n    margin: {\r\n      margin: 8,\r\n      height: 36,\r\n      width: 100,\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst accountSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nconst accountEditSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string(),\r\n});\r\nexport const accountResolver = { resolver: yupResolver(accountSchema) };\r\nexport const accountEditResolver = { resolver: yupResolver(accountEditSchema) };\r\n\r\nconst PopupAccount = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  accounts,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [parentvalue, setParentvalue] = useState<any>(null);\r\n  const [parentError, setParentError] = useState<any>(false);\r\n  const parentRef: any = React.useRef();\r\n\r\n  const [branchvalue, setBranchvalue] = useState<any>(null);\r\n\r\n  const [filteredParents, setFilteredParents] = useState([]);\r\n  const [range, setRange] = useState<any>({});\r\n  const [code, setCode] = useState(0);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? accountResolver : accountEditResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { branches } = useBranches();\r\n\r\n  useEffect(() => {\r\n    setBranchvalue(branches[0]);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (parentvalue) {\r\n      const rng = getAccountCodeRange(parentvalue);\r\n      setRange(rng);\r\n      if (isNew) {\r\n        const newcode = getNewCode(parentvalue, accounts, rng);\r\n        setCode(newcode);\r\n      }\r\n    } else {\r\n      setCode(0);\r\n    }\r\n  }, [parentvalue]);\r\n\r\n  useEffect(() => {\r\n    if (row && row.parentcode) {\r\n      const { parentcode } = row;\r\n      const parent = parentsAccountsList.filter(\r\n        (par: any) => par.parentcode === parentcode\r\n      )[0];\r\n      const branch = branches.filter(\r\n        (pra: any) => pra.basename === row.branch\r\n      )[0];\r\n      setParentvalue(parent);\r\n      setBranchvalue(branch);\r\n      setCode(row.code);\r\n    }\r\n  }, [row]);\r\n\r\n  useEffect(() => {\r\n    if (branchvalue) {\r\n      setFilteredParents(parentsAccountsList);\r\n    } else {\r\n      setFilteredParents([]);\r\n    }\r\n  }, [branchvalue]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (!parentvalue) {\r\n      setParentError(true);\r\n      parentRef.current.focus();\r\n      return;\r\n    }\r\n    if (code > range.max || code < range.min) {\r\n      await errorAlertMsg(\r\n        setAlrt,\r\n        isRTL ? \"رقم الحساب خارج النطاق\" : \"Code range issue\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const branch = branchvalue.basename;\r\n    const variables: any = {\r\n      _id: row._id ? row._id : undefined, // is it new or edit\r\n      branch,\r\n      code,\r\n      name,\r\n      nameAr,\r\n      canedit: row._id ? undefined : true,\r\n      ...parentvalue,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      await mutate({ variables });\r\n      setSaving(false);\r\n      closeForm();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setParentvalue(null);\r\n    setParentError(false);\r\n    setBranchvalue(null);\r\n    setRange({});\r\n    setCode(0);\r\n    reset();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة حساب\"\r\n      : \"تعديل بيانات حساب\"\r\n    : isNew\r\n    ? \"New Account\"\r\n    : \"Edit Account\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <AutoFieldLocal\r\n            name=\"parent\"\r\n            nolabel\r\n            title={isRTL ? \"الحساب الرئيسي\" : \"Main Account\"}\r\n            basename=\"parent\"\r\n            options={filteredParents}\r\n            value={parentvalue}\r\n            setSelectValue={setParentvalue}\r\n            setSelectError={setParentError}\r\n            selectError={parentError}\r\n            refernce={parentRef}\r\n            register={register}\r\n            disabled={row && row.parentcode ? true : false}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n          {range && range?.min && isNew && (\r\n            <Typography>\r\n              {range.min} - {range.max}\r\n            </Typography>\r\n          )}\r\n          <TextFieldLocal\r\n            required\r\n            name=\"code\"\r\n            label={isRTL ? \"كود الحساب\" : \"Code\"}\r\n            value={code}\r\n            onChange={(e: any) => setCode(e.target.value)}\r\n            row={row}\r\n            disabled={row && row.parentcode ? true : false}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n          {isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          {!isRTL && (\r\n            <React.Fragment>\r\n              <TextFieldLocal\r\n                autoFocus\r\n                required\r\n                name=\"name\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                // newtext={newtext}\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                required\r\n                name=\"nameAr\"\r\n                label={words.nameAr}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAccount;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport ScheduleOutlinedIcon from \"@material-ui/icons/ScheduleOutlined\";\r\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\n\r\nexport const renderStatusIcon = (status: any, color = \"#eee\", size = 18) => {\r\n  switch (status) {\r\n    case 1:\r\n      return (\r\n        <RadioButtonUncheckedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></RadioButtonUncheckedIcon>\r\n      );\r\n    case 2:\r\n      // return <div></div>;\r\n      return (\r\n        <ScheduleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></ScheduleOutlinedIcon>\r\n      );\r\n    case 3:\r\n      return (\r\n        <PauseCircleOutlineIcon\r\n          style={{ fontSize: size, color }}\r\n        ></PauseCircleOutlineIcon>\r\n      );\r\n    case 4:\r\n      return (\r\n        <BlockOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></BlockOutlinedIcon>\r\n      );\r\n    case 10:\r\n      return (\r\n        <CheckCircleOutlinedIcon\r\n          style={{ fontSize: size, color }}\r\n        ></CheckCircleOutlinedIcon>\r\n      );\r\n\r\n    default:\r\n      return <div></div>;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { eventStatus } from \"../../../constants\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\n\r\nexport const StatusSelect = ({\r\n  status,\r\n  setStatus,\r\n  onNewFieldChange,\r\n  title,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <Box display=\"flex\">\r\n      <FormControl>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={(e) => {\r\n            const value = Number(e.target.value);\r\n            setStatus(value);\r\n            onNewFieldChange(value, \"status\");\r\n          }}\r\n          variant=\"outlined\"\r\n          style={{ maxHeight: 38, minWidth: 140 }}\r\n        >\r\n          {eventStatus.map((es: any) => {\r\n            return (\r\n              <MenuItem key={es.id} value={es.id} selected={es.id === status}>\r\n                {isRTL ? es.nameAr : es.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          minWidth: 70,\r\n          alignItems: \"center\",\r\n          height: 40,\r\n          padding: 10,\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        <Typography>{title}</Typography>\r\n        {renderStatusIcon(status, \"#777\", 30)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const SelectLocal = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n  width = 180,\r\n  disabled = false,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: width,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {isRTL ? item.nameAr : item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import RRule from \"rrule\";\r\n\r\nexport const freqOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Daily\",\r\n    nameAr: \"يومي\",\r\n    value: RRule.DAILY,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Weekly\",\r\n    nameAr: \"اسبوعي\",\r\n    value: RRule.WEEKLY,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monthly\",\r\n    nameAr: \"شهري\",\r\n    value: RRule.MONTHLY,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Yearly\",\r\n    nameAr: \"سنوي\",\r\n    value: RRule.YEARLY,\r\n  },\r\n];\r\nexport const byweekdayOptions = [\r\n  {\r\n    id: 2,\r\n    name: \"Saturday\",\r\n    nameAr: \"السبت\",\r\n    value: RRule.SA,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Sunday\",\r\n    nameAr: \"الاحد\",\r\n    value: RRule.SU,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Monday\",\r\n    nameAr: \"الاثنين\",\r\n    value: RRule.MO,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tuesday\",\r\n    nameAr: \"الثلاثاء\",\r\n    value: RRule.TU,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Wednesday\",\r\n    nameAr: \"الاربعاء\",\r\n    value: RRule.WE,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Thursday\",\r\n    nameAr: \"الخميس\",\r\n    value: RRule.TH,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Friday\",\r\n    nameAr: \"الجمعة\",\r\n    value: RRule.FR,\r\n  },\r\n];\r\n\r\nexport const actionOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"SMS\",\r\n    nameAr: \"رسالة SMS\",\r\n    value: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Email\",\r\n    nameAr: \"بريد الكتروني\",\r\n    value: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Notification\",\r\n    nameAr: \"تنبيه\",\r\n    value: 3,\r\n  },\r\n];\r\nexport const timeRelationOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Befor Appointment Start\",\r\n    nameAr: \"قبل الموعد\",\r\n    value: \"bstart\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"After Appointment End\",\r\n    nameAr: \"بعد نهاية الموعد\",\r\n    value: \"aend\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"After Appointment Start\",\r\n    nameAr: \"بعد بداية الموعد\",\r\n    value: \"astart\",\r\n  },\r\n];\r\nexport const timeUnitOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"Minutes\",\r\n    nameAr: \"دقيقة\",\r\n    value: \"minute\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hours\",\r\n    nameAr: \"ساعة\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Days\",\r\n    nameAr: \"يوم\",\r\n    value: \"day\",\r\n  },\r\n];\r\n\r\nexport const getSBfromEvent = (event: any, isRTL: boolean) => {\r\n  const s = `${isRTL ? event.customerNameAr : event.customerName} / ${\r\n    isRTL ? event.departmentNameAr : event.departmentName\r\n  } / ${isRTL ? event.employeeNameAr : event.employeeName}`;\r\n  const b = `${isRTL ? event.customerNameAr : event.customerName}\r\n${isRTL ? event.departmentNameAr : event.departmentName}\r\n${isRTL ? event.employeeNameAr : event.employeeName}\r\n${isRTL ? \"المجموع\" : \"Amount\"}: ${event.amount}\r\n`;\r\n  return { s, b };\r\n};\r\n\r\nexport const manamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 4,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const customerTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n];\r\nexport const employeeTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المهمات\",\r\n    name: \"Tasks\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\nexport const taskManamentTabs = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    nameAr: \"المواعيد\",\r\n    name: \"Appointments\",\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 1,\r\n    nameAr: \"الفواتيير\",\r\n    name: \"Invoices\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 2,\r\n    nameAr: \"المقبوضات\",\r\n    name: \"Receipts\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 3,\r\n    nameAr: \"المصاريف\",\r\n    name: \"Expenses\",\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport {\r\n  actionOptions,\r\n  timeRelationOptions,\r\n  timeUnitOptions,\r\n} from \"../constants/rrule\";\r\nimport { getSendTime } from \"../common/helpers\";\r\nimport { getDateDayTimeFormat } from \"../Shared/colorFormat\";\r\n\r\nconst PopupAction = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  event,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [type, setType] = useState(1);\r\n  const [timeunit, setTimeunit] = useState(\"minute\");\r\n  const [timerelate, setTimerelate] = useState(\"bstart\");\r\n  const [qty, setQty] = useState(30);\r\n  const [body, setBody] = useState(\"\");\r\n  const [address, setAddreess] = useState(\"\");\r\n  const [sendtime, setSendtime] = useState(null);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (row) {\r\n      setBody(row.body);\r\n      setType(row.type);\r\n      setAddreess(row.address);\r\n      setType(row.type);\r\n      setTimeunit(row.timeunit);\r\n      setQty(row.qty);\r\n      setTimerelate(row.timerelate);\r\n      setSendtime(row.sendtime);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    const { startDate, endDate } = event;\r\n    const sendtime = getSendTime({\r\n      startDate,\r\n      endDate,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n    });\r\n    setSendtime(sendtime);\r\n  }, [timeunit, timerelate, qty]);\r\n\r\n  const onSubmit = async () => {\r\n    setSaving(true);\r\n\r\n    const variables: any = {\r\n      branch: user.branch,\r\n      type,\r\n      phone: type === 1 ? address : undefined,\r\n      email: type === 2 ? address : undefined,\r\n      userId: type === 3 ? user._id : undefined,\r\n      sendtime,\r\n      body,\r\n      timeunit,\r\n      timerelate,\r\n      qty,\r\n      address,\r\n    };\r\n\r\n    isNew ? addAction(variables) : editAction(variables);\r\n    reset();\r\n    setSaving(false);\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const reset = () => {\r\n    setType(1);\r\n    setTimeunit(\"minute\");\r\n    setTimerelate(\"bstart\");\r\n    setQty(30);\r\n    setBody(\"\");\r\n    setAddreess(\"\");\r\n    setSendtime(null);\r\n  };\r\n\r\n  const onCloseForem = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة تنبيه\"\r\n      : \"تعديل تنبيه\"\r\n    : isNew\r\n    ? \"New Action\"\r\n    : \"Edit Action\";\r\n  const addresstitle =\r\n    type === 1 ? words.mobile : type === 2 ? words.email : words.notification;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={{}}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"body\"\r\n                multiline\r\n                rows={4}\r\n                label={words.body}\r\n                value={body}\r\n                onChange={(e: any) => setBody(e.target.value)}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <SelectLocal\r\n                options={actionOptions}\r\n                value={type}\r\n                onChange={(e: any) => setType(e.target.value)}\r\n                isRTL={isRTL}\r\n                width={160}\r\n              ></SelectLocal>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {type !== 3 && (\r\n                <TextFieldLocal\r\n                  name=\"address\"\r\n                  label={addresstitle}\r\n                  value={address}\r\n                  onChange={(e: any) => setAddreess(e.target.value)}\r\n                  fullWidth\r\n                  mb={0}\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeRelationOptions}\r\n                    value={timerelate}\r\n                    onChange={(e: any) => setTimerelate(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"qty\"\r\n                    label={words.qty}\r\n                    value={qty}\r\n                    onChange={(e: any) => setQty(Number(e.target.value))}\r\n                    type=\"number\"\r\n                    width={128}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <SelectLocal\r\n                    options={timeUnitOptions}\r\n                    value={timeunit}\r\n                    onChange={(e: any) => setTimeunit(e.target.value)}\r\n                    isRTL={isRTL}\r\n                    width={128}\r\n                  ></SelectLocal>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      flex: 1,\r\n                      direction: \"ltr\",\r\n                      fontSize: 16,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDateDayTimeFormat(sendtime, isRTL)}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAction;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PopupCustomer } from \"../../../pubups\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { StatusSelect } from \"./StatusSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../../../components\";\r\nimport AutoFieldLocal from \"../../../components/fields/AutoFieldLocal\";\r\nimport { weekdaysNNo } from \"../../../constants/datatypes\";\r\nimport { setRowFromAppointment } from \"../../../common/calendar\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../../../graphql\";\r\nimport ServiceItemForm from \"../../../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../../../Shared/ItemsTable\";\r\nimport LoadingInline from \"../../../Shared/LoadingInline\";\r\nimport { invoiceClasses } from \"../../../themes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../../../Shared/colorFormat\";\r\nimport { useCustomers } from \"../../../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"../../../pubups/PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nexport const AppointForm = (props: any) => {\r\n  const {\r\n    onFieldChange,\r\n    appointmentData,\r\n    departments,\r\n    tasks,\r\n    employees,\r\n    theme,\r\n    servicesproducts,\r\n  } = props;\r\n\r\n  const row = setRowFromAppointment(appointmentData);\r\n\r\n  const classes = invoiceClasses();\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(row?.startDate);\r\n  const [endDate, setEndDate]: any = useState(row?.endDate);\r\n\r\n  const [status, setStatus] = useState(row?.status || 2);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(row?.title);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      if (row.taskId) {\r\n        const tks = tasks.filter((t: any) => t.id === row.taskId)?.[0];\r\n        setTaskvalue(tks);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    onFieldChange({ amount });\r\n    onFieldChange({ items: JSON.stringify(itemsList) });\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any, name: any) => {\r\n    onFieldChange({ [name]: nextValue });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row.status) {\r\n      onNewFieldChange(2, \"status\");\r\n    }\r\n  }, [row.status]);\r\n\r\n  const selectCustomer = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        customerId: undefined,\r\n        customerName: undefined,\r\n        customerNameAr: undefined,\r\n        customerPhone: undefined,\r\n      };\r\n      onNewFieldChange(value, \"customerId\");\r\n      onNewFieldChange(value, \"customerName\");\r\n      onNewFieldChange(value, \"customerNameAr\");\r\n      onNewFieldChange(value, \"customerPhone\");\r\n    }\r\n    onNewFieldChange(newValue, \"customer\");\r\n  };\r\n  const selectDepartment = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        departmentId: undefined,\r\n        departmentName: undefined,\r\n        departmentNameAr: undefined,\r\n        departmentColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"departmentId\");\r\n      onNewFieldChange(value, \"departmentName\");\r\n      onNewFieldChange(value, \"departmentNameAr\");\r\n      onNewFieldChange(value, \"departmentColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"department\");\r\n  };\r\n  const selectEmployee = (value: any) => {\r\n    let newValue = value;\r\n    if (!value) {\r\n      newValue = {\r\n        employeeId: undefined,\r\n        employeeName: undefined,\r\n        employeeNameAr: undefined,\r\n        employeeColor: undefined,\r\n      };\r\n      onNewFieldChange(value, \"employeeId\");\r\n      onNewFieldChange(value, \"employeeName\");\r\n      onNewFieldChange(value, \"employeeNameAr\");\r\n      onNewFieldChange(value, \"employeeColor\");\r\n    }\r\n    onNewFieldChange(newValue, \"employee\");\r\n    setEmplvalue(newValue);\r\n  };\r\n  const selectTask = (value: any) => {\r\n    let newValue = value?.id;\r\n    setTaskvalue(value);\r\n    onNewFieldChange(newValue, \"taskId\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (taskvalue?.employeeId) {\r\n        const empl = employees.filter(\r\n          (em: any) => em._id === taskvalue?.employeeId\r\n        )?.[0];\r\n        onNewFieldChange(empl, \"employee\");\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (!row._id) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          onNewFieldChange(dept, \"department\");\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    onFieldChange({ actions: JSON.stringify(actionslist) });\r\n  }, [actionslist]);\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n          {row?.docNo}\r\n        </Typography>\r\n      </Box>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.start}\r\n                value={startDate}\r\n                onChange={(d: any) => {\r\n                  setStartDate(d);\r\n                  onNewFieldChange(d, \"startDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.end}\r\n                value={endDate}\r\n                onChange={(d: any) => {\r\n                  setEndDate(d);\r\n                  onNewFieldChange(d, \"endDate\");\r\n                }}\r\n                format=\"dd/MM/yyyy - hh:mm\"\r\n                time\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                autoFocus={true}\r\n                name=\"tasktitle\"\r\n                label={words.title}\r\n                value={tasktitle}\r\n                onChange={(e: any) => {\r\n                  setTasktitle(e.target.value);\r\n                  onNewFieldChange(e.target.value, \"title\");\r\n                }}\r\n                row={row}\r\n                fullWidth\r\n                mb={0}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={row.customer}\r\n                setSelectValue={selectCustomer}\r\n                isRTL={isRTL}\r\n                openAdd={openCustomer}\r\n                fullWidth\r\n                showphone\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={selectTask}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={words.employee}\r\n                words={words}\r\n                options={employees.filter((em: any) => em.resType === 1)}\r\n                value={emplvalue}\r\n                setSelectValue={selectEmployee}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                day={day}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments.filter((dep: any) => dep.depType === 1)}\r\n                value={row.department}\r\n                setSelectValue={selectDepartment}\r\n                noPlus\r\n                isRTL={isRTL}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            backgroundColor: \"#eee\",\r\n            borderRadius: 5,\r\n            padding: 7,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginBottom: 5,\r\n              fontSize: 14,\r\n              minWidth: 80,\r\n            }}\r\n            onClick={() => {\r\n              setSelected(null);\r\n              setOpenAction(true);\r\n            }}\r\n          >\r\n            {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n          </Button>\r\n          <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n            {actionslist.map((act: any) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={actionTypeFormatter({ row: act })}\r\n                    secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                  />\r\n                  <IconButton\r\n                    onClick={() => removeActionFromList(act)}\r\n                    title=\"Delete row\"\r\n                    style={{ padding: 5, margin: 5 }}\r\n                  >\r\n                    <DeleteOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    style={{ padding: 5 }}\r\n                    onClick={() => {\r\n                      setSelected(act);\r\n                      setOpenAction(true);\r\n                    }}\r\n                    title=\"Edit row\"\r\n                  >\r\n                    <EditOutlinedIcon\r\n                      style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box style={{ marginTop: 20 }}></Box>\r\n\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={servicesproducts}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n            {!loading && (\r\n              <Box style={{ marginBottom: 10 }}>\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            )}\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Box>\r\n          <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n            {words.total} : {moneyFormat(totals.amount)}\r\n          </Typography>\r\n          <Box style={{ marginTop: 10 }}>\r\n            <StatusSelect\r\n              status={status}\r\n              setStatus={setStatus}\r\n              onNewFieldChange={onNewFieldChange}\r\n              isRTL={isRTL}\r\n              title={words.status}\r\n            ></StatusSelect>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport {\r\n  useCustomers,\r\n  useDepartments,\r\n  useEmployees,\r\n  useLastNos,\r\n} from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { weekdaysNNo } from \"../constants/datatypes\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport useCompany from \"../hooks/useCompany\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointInvoice = ({\r\n  open,\r\n  onClose,\r\n  appoint,\r\n  services,\r\n  editEvent,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n  onCloseAppoint = () => null,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { company } = useCompany();\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    reset();\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"\");\r\n    setIsCash(false);\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (appoint && appoint.startDate) {\r\n      const _id = appoint.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n    }\r\n    const depId = appoint.departmentId;\r\n    const empId = appoint.employeeId;\r\n    if (depId) {\r\n      const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n      setDepartvalue(depart);\r\n    }\r\n    if (empId) {\r\n      const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n      setEmplvalue(empl);\r\n    }\r\n    if (appoint.taskId) {\r\n      const empl = tasks.filter((emp: any) => emp.id === appoint.taskId)[0];\r\n      setTaskvalue(empl);\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [appoint, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      eventId: appoint.id,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      eventNo: appoint.docNo,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      editEvent({ variables: { id: appoint.id, status: 10 } });\r\n      freshlastNos();\r\n      onCloseForm();\r\n      onCloseAppoint();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const date = appoint?.startDate ? new Date(appoint?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            openAdd={openCustomer}\r\n            showphone\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <AutoFieldLocal\r\n            name=\"task\"\r\n            title={words.task}\r\n            words={words}\r\n            options={tasks}\r\n            value={taskvalue}\r\n            setSelectValue={setTaskvalue}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={day}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <PopupCustomer\r\n            newtext={newtext}\r\n            open={openCust}\r\n            onClose={onCloseCustomer}\r\n            isNew={true}\r\n            setNewValue={onNewFieldChange}\r\n            row={null}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          ></PopupCustomer>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointInvoice;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { roles, timeToHourMinute } from \"../../../common\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { cardClasses } from \"../../../themes/classes\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport PopupAppointInvoice from \"../../../pubups/PopupAppointInvoice\";\r\nimport { Avatar } from \"../../../Shared\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\nimport { eventStatusAr } from \"../../../constants/datatypes\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getOperationItems } from \"../../../graphql\";\r\n\r\nexport const RenderToolTip = ({\r\n  appointmentData,\r\n  setVisible,\r\n  departments,\r\n  employees,\r\n  services,\r\n  editEvent,\r\n  company,\r\n  viewonly,\r\n  theme,\r\n  tasks,\r\n}: any) => {\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const classes = cardClasses();\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    customerPhone,\r\n    items,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    employeePhone,\r\n    departmentId,\r\n    departmentName,\r\n    departmentNameAr,\r\n    status,\r\n    amount,\r\n    docNo,\r\n    taskId,\r\n    title,\r\n  } = appointmentData;\r\n\r\n  const task = tasks.filter((t: any) => t.id === taskId)?.[0];\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appointmentData && appointmentData._id) {\r\n      const variables = { opId: appointmentData._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = services.filter((ser: any) => ids.includes(ser._id));\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const handleNewInvoice = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const employeeColor = empColor?.[0]?.color || \"\";\r\n\r\n  const departColor = departments\r\n    ? departments.filter((dep: any) => dep._id === departmentId)\r\n    : \"\";\r\n  const departmentColor = departColor?.[0]?.color || \"\";\r\n\r\n  const desabledSave = (!customerPhone && !items) || status === 10 || !isEditor;\r\n\r\n  return (\r\n    <Card style={{ direction: isRTL ? \"rtl\" : \"ltr\" }} className={classes.root}>\r\n      <CardContent>\r\n        {status && (\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              position: \"absolute\",\r\n              height: 30,\r\n              paddingRight: 5,\r\n              paddingLeft: 5,\r\n              borderRadius: 3,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              left: 10,\r\n              top: 10,\r\n            }}\r\n          >\r\n            {renderStatusIcon(status, \"#555\", 20)}\r\n            <Typography\r\n              style={{\r\n                marginTop: -1,\r\n                marginLeft: 3,\r\n              }}\r\n            >\r\n              {isRTL ? eventStatusAr[status] : eventStatusEn[status]}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {docNo}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {task?.title}\r\n          </Typography>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Box>\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n              {startDate.toLocaleString(isRTL ? \"ar-QA\" : \"en-US\", options)}\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" style={{ marginBottom: 3 }}>\r\n            <div>\r\n              {timeToHourMinute(startDate, isRTL ? \"ar-QA\" : \"en-US\")} -{\" \"}\r\n            </div>\r\n            <div> {timeToHourMinute(endDate, isRTL ? \"ar-QA\" : \"en-US\")}</div>\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n          <Typography\r\n            style={{ marginTop: -5, marginLeft: 5 }}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h2\"\r\n          >\r\n            {customerPhone}\r\n          </Typography>\r\n        </Box>\r\n        <Divider></Divider>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n        >\r\n          {itemsList?.[0] && (\r\n            <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n              {isRTL ? itemsList?.[0].nameAr : itemsList?.[0].name}\r\n            </Typography>\r\n          )}\r\n\r\n          {amount && (\r\n            <Typography\r\n              style={{\r\n                zIndex: 10,\r\n                padding: 3,\r\n                backgroundColor: \"#667fb5\",\r\n                color: \"#fff\",\r\n              }}\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n              component=\"h2\"\r\n            >\r\n              {amount} QR\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          m={2}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              width: 40,\r\n              height: 40,\r\n              borderRadius: 20,\r\n              backgroundColor: departmentColor,\r\n            }}\r\n          ></Box>\r\n          <Typography\r\n            style={{ marginTop: 8, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? departmentNameAr : departmentName}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          m={3}\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar name={employeeName} bg={employeeColor} size={26}></Avatar>\r\n\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft: 10, marginRight: 10 }}\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            component=\"h2\"\r\n          >\r\n            {isRTL ? employeeNameAr : employeeName}\r\n          </Typography>\r\n        </Box>\r\n        <Box style={{ marginTop: -25, marginRight: 60 }}>\r\n          <Typography gutterBottom variant=\"subtitle2\">\r\n            {employeePhone}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {!viewonly && (\r\n          <Box\r\n            m={1}\r\n            display=\"flex\"\r\n            style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n          >\r\n            <Button\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleNewInvoice}\r\n              disabled={desabledSave}\r\n            >\r\n              {words.addInvoice}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </CardActions>\r\n      <PopupAppointInvoice\r\n        open={open}\r\n        onClose={() => {\r\n          setVisible(false);\r\n          setOpen(false);\r\n        }}\r\n        appoint={appointmentData}\r\n        services={services}\r\n        editEvent={editEvent}\r\n        company={company}\r\n        theme={theme}\r\n        items={itemsList}\r\n      ></PopupAppointInvoice>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { Box, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { Appointments } from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { timeToHourMinute } from \"../../../common\";\r\nimport { renderStatusIcon } from \"./StatusIcon\";\r\nimport { useEmployees } from \"../../../hooks\";\r\nimport { eventStatusEn } from \"../../../constants\";\r\nimport { GContextTypes } from \"../../../types\";\r\nimport { GlobalContext } from \"../../../contexts\";\r\n\r\nexport const AppointmentContent = (props: any) => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    customerName,\r\n    customerNameAr,\r\n    serviceName,\r\n    serviceNameAr,\r\n    employeeId,\r\n    employeeName,\r\n    employeeNameAr,\r\n    status,\r\n  } = props.data;\r\n  const { employees } = useEmployees();\r\n\r\n  const empColor = employees\r\n    ? employees.filter((emp: any) => emp._id === employeeId)\r\n    : \"\";\r\n  const color = empColor?.[0]?.color || \"\";\r\n\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Appointments.AppointmentContent {...props}>\r\n      <div className={props.container}>\r\n        {status && (\r\n          <Tooltip title={eventStatusEn[status]}>\r\n            <Box\r\n              style={{\r\n                position: \"absolute\",\r\n                right: isRTL ? undefined : 2,\r\n                left: isRTL ? 2 : undefined,\r\n                top: 2,\r\n                zIndex: 12,\r\n                width: 22,\r\n                height: 22,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"#555\",\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStatusIcon(status, \"#ffffff\", 22)}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n        <Box display=\"flex\" style={{ flexWrap: \"wrap\" }}>\r\n          <div>{timeToHourMinute(startDate)}-</div>\r\n          <div>{timeToHourMinute(endDate)}</div>\r\n        </Box>\r\n        <Box>\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"subtitle2\">\r\n            {isRTL ? customerNameAr : customerName}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"caption\">\r\n            {isRTL ? serviceNameAr : serviceName}\r\n          </Typography>\r\n        </Box>\r\n        {employeeName && (\r\n          <Tooltip title={isRTL ? employeeNameAr : employeeName}>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                bottom: 2,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ marginLeft: 4, marginRight: 4 }}\r\n              >\r\n                {isRTL ? employeeNameAr : employeeName}\r\n              </Typography>\r\n              {/* <Avatar name={employeeName} bg={color} size={18}></Avatar> */}\r\n            </Box>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  );\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function OptionItem({ item, isRTL, col }: any) {\r\n  const { color } = item;\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n      }}\r\n    >\r\n      {item.color && !col && (\r\n        <Box\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 9,\r\n            backgroundColor: color ? color : \"#fff\",\r\n          }}\r\n        ></Box>\r\n      )}\r\n      <Typography\r\n        style={{\r\n          marginLeft: color ? 10 : undefined,\r\n          marginRight: color ? 10 : undefined,\r\n          textAlign: isRTL ? \"right\" : \"left\",\r\n        }}\r\n        variant={isRTL ? \"subtitle1\" : \"subtitle2\"}\r\n      >\r\n        {isRTL ? item.nameAr : item.name}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport OptionFilterItem from \"./OptionFilterItem\";\r\n\r\nexport default function FilterSelectCkeckBox({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  fullWidth,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      options={options}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      getOptionSelected={(option, values) => option.id === values.id}\r\n      renderOption={(option) => (\r\n        <OptionFilterItem isRTL={isRTL} item={option}></OptionFilterItem>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          id={name}\r\n          fullWidth={fullWidth}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : undefined,\r\n            backgroundColor: value ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, fade, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\n\r\nconst DepartemplSelect = ({\r\n  value,\r\n  setValue,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) => {\r\n  const onchange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <Box m={1}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={value}\r\n            onChange={onchange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"employeeId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الموظف\" : \"Employee\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"departmentId\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"القسم\" : \"Department\"}\r\n            />\r\n            <FormControlLabel\r\n              value=\"status\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={isRTL ? \"الحالة\" : \"Status\"}\r\n            />\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {count > 0 && (\r\n            <Box display=\"flex\">\r\n              <Typography\r\n                style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"المواعيد: \" : \"Appointments: \"}\r\n              </Typography>\r\n              <Typography\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {count}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DepartemplSelect;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { eventStatus } from \"../constants\";\r\nimport FilterSelect from \"./FilterSelect\";\r\nimport DepartemplSelect from \"../pages/options/DepartemplSelect\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function EventsCalFilter({\r\n  employees,\r\n  departments,\r\n  departvalue,\r\n  setDepartvalue,\r\n  emplvalue,\r\n  setEmplvalue,\r\n  status,\r\n  setStatus,\r\n  mainResourceName,\r\n  setMainResourceName,\r\n  words,\r\n  isRTL,\r\n  count,\r\n  theme,\r\n  refresh,\r\n}: any) {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={employees}\r\n          value={emplvalue}\r\n          setValue={setEmplvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"employee\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={departments}\r\n          value={departvalue}\r\n          setValue={setDepartvalue}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"department\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <FilterSelect\r\n          options={eventStatus}\r\n          value={status}\r\n          setValue={setStatus}\r\n          words={words}\r\n          isRTL={isRTL}\r\n          name=\"status\"\r\n          fullWidth\r\n        ></FilterSelect>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <DepartemplSelect\r\n          value={mainResourceName}\r\n          setValue={setMainResourceName}\r\n          isRTL={isRTL}\r\n          count={count}\r\n          theme={theme}\r\n          refresh={refresh}\r\n        ></DepartemplSelect>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  fade,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Draggable from \"react-draggable\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nfunction PaperComponent(props: any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PopupLayoutBox(props: any) {\r\n  const {\r\n    children,\r\n    isRTL,\r\n    theme,\r\n    open,\r\n    onClose,\r\n    title,\r\n    width,\r\n    height,\r\n    isMobile,\r\n    mt = 30,\r\n    mb = 70,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperComponent={PaperComponent}\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n      fullWidth={isMobile}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Box\r\n        id=\"draggable-dialog-title\"\r\n        style={{\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          backgroundColor: theme\r\n            ? fade(theme.palette.primary.main, 0.15)\r\n            : \"#eee\",\r\n          cursor: \"move\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            fontSize: 20,\r\n            marginRight: 20,\r\n            marginLeft: 20,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onClose}>\r\n          <CloseOutlinedIcon\r\n            style={{ fontSize: 26, color: \"#777\" }}\r\n          ></CloseOutlinedIcon>\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          direction: isRTL ? \"rtl\" : \"ltr\",\r\n          paddingTop: mt,\r\n          paddingBottom: mb,\r\n        }}\r\n        dividers={true}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  MonthView,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  AllDayPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppointForm } from \"./common/AppointForm\";\r\nimport { getResourses } from \"../../common/helpers\";\r\nimport { commitAppointmentChanges } from \"../../common\";\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { CommandAppointment } from \"../../Shared\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEvent,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\r\nimport EventsCalFilter from \"../../Shared/EventsCalFilter\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport { CalendarContext } from \"../../contexts\";\r\nimport PopupLayoutBox from \"../main/PopupLayoutBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nconst Main = (props: any) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [resourseData, setResourseData]: any = useState([]);\r\n  const [mainResourceName, setMainResourceName]: any = useState(\"departmentId\");\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, departvalue, emplvalue, status },\r\n    dispatch,\r\n  } = useContext(CalendarContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          departmentId: departvalue ? departvalue._id : undefined,\r\n          employeeId: emplvalue ? emplvalue._id : undefined,\r\n          status: status ? status.id : undefined,\r\n          start,\r\n          end,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEvent] = useMutation(deleteEvent, refresQuery);\r\n\r\n  const [getCalEvents, evnData]: any = useLazyQuery(getEvents);\r\n\r\n  const {\r\n    departments,\r\n    employees,\r\n    calendar,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    isEditor,\r\n    theme,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    setStart(startend.start);\r\n    setEnd(startend.end);\r\n    const variables = {\r\n      departmentId: departvalue ? departvalue._id : undefined,\r\n      employeeId: emplvalue ? emplvalue._id : undefined,\r\n      status: status ? status.id : undefined,\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({ variables });\r\n  }, [\r\n    currentDate,\r\n    currentViewName,\r\n    departvalue,\r\n    emplvalue,\r\n    getCalEvents,\r\n    status,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let res: any;\r\n    if (mainResourceName === \"employeeId\") {\r\n      res = employees;\r\n    }\r\n    if (mainResourceName === \"status\") {\r\n      res = eventStatus;\r\n    }\r\n    if (mainResourceName === \"departmentId\") {\r\n      res = departments;\r\n    }\r\n    const resourses = getResourses(res, mainResourceName, \"Data\");\r\n    setResourseData(resourses);\r\n  }, [mainResourceName, departments]);\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  const isMonth = currentViewName === \"Month\";\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const commitChanges = async ({ added, changed, deleted }: any) => {\r\n    commitAppointmentChanges({\r\n      added,\r\n      changed,\r\n      deleted,\r\n      addEvent,\r\n      editEvent,\r\n      removeEvent,\r\n      isRTL,\r\n    });\r\n  };\r\n\r\n  const title = isRTL ? \"بيانات الموعد\" : \"Appointment\";\r\n  return (\r\n    <Box\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        marginTop: isMobile ? 47 : undefined,\r\n        height: window.innerHeight - 10,\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Box style={{ margin: 10 }}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={4}>\r\n            <DateNavigator\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              currentViewNameChange={currentViewNameChange}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentDate={currentDate}\r\n              views={[1, 3, 7, 30]}\r\n            ></DateNavigator>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Box style={{ marginBottom: 3 }}>\r\n                <EventsCalFilter\r\n                  count={rows.length}\r\n                  departvalue={departvalue}\r\n                  setDepartvalue={setDepartvalueDispatch}\r\n                  emplvalue={emplvalue}\r\n                  setEmplvalue={setEmplvalueDispatch}\r\n                  departments={departments.filter(\r\n                    (dep: any) => dep.depType === 1\r\n                  )}\r\n                  employees={employees.filter((dep: any) => dep.resType === 1)}\r\n                  status={status}\r\n                  setStatus={setStatusDispatch}\r\n                  setMainResourceName={setMainResourceName}\r\n                  mainResourceName={mainResourceName}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  refresh={refresh}\r\n                ></EventsCalFilter>\r\n              </Box>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={{ margin: 0 }}>\r\n          <Scheduler\r\n            data={rows}\r\n            height={\r\n              isMonth\r\n                ? \"auto\"\r\n                : isMobile\r\n                ? window.innerHeight\r\n                : window.innerHeight - 90\r\n            }\r\n            firstDayOfWeek={6}\r\n            locale={isRTL ? \"ar\" : \"en\"}\r\n          >\r\n            {!isMonth && <EditingState onCommitChanges={commitChanges} />}\r\n            {!isMonth && (\r\n              <EditRecurrenceMenu\r\n                messages={{\r\n                  current: isRTL ? \"الموعد الحالي فقط\" : \"This appointment\",\r\n                  currentAndFollowing: isRTL\r\n                    ? \"الموعد الحالي والمواعيد اللاحقة\"\r\n                    : \"This and following appointments\",\r\n                  all: isRTL ? \"كل المواعيد\" : \"All appointments\",\r\n                  menuEditingTitle: isRTL\r\n                    ? \"تعديل موعد متكرر\"\r\n                    : \"Edit recurring appointment\",\r\n                  menuDeletingTitle: isRTL\r\n                    ? \"حذف موعد متكرر\"\r\n                    : \"Delete recurring appointment\",\r\n                  cancelButton: isRTL ? \"الغاء\" : \"Cancel\",\r\n                  commitButton: isRTL ? \"تعديل\" : \"OK\",\r\n                }}\r\n              />\r\n            )}\r\n            {/* {!isMonth && <IntegratedEditing />} */}\r\n            <ViewState\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n            />\r\n            <DayView\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <DayView\r\n              name=\"3Days\"\r\n              displayName=\"3 Days\"\r\n              intervalCount={3}\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <WeekView\r\n              name=\"Week\"\r\n              displayName=\"Week\"\r\n              cellDuration={calendar ? calendar?.duration : 30}\r\n              startDayHour={calendar ? calendar?.start : 8.5}\r\n              endDayHour={calendar ? calendar?.end : 21.5}\r\n            />\r\n            <MonthView intervalCount={1} />\r\n            {/* <Toolbar /> */}\r\n            <Appointments appointmentContentComponent={AppointmentContent} />\r\n            <Resources\r\n              data={resourseData}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n            <AppointmentTooltip\r\n              showCloseButton\r\n              showOpenButton={isEditor ? true : false}\r\n              // showDeleteButton\r\n              visible={visible}\r\n              onVisibilityChange={() => setVisible(!visible)}\r\n              contentComponent={({ appointmentData }) => (\r\n                <RenderToolTip\r\n                  appointmentData={appointmentData}\r\n                  setVisible={setVisible}\r\n                  departments={departments}\r\n                  employees={employees}\r\n                  services={services}\r\n                  editEvent={editEvent}\r\n                  company={company}\r\n                  theme={theme}\r\n                  viewonly={isMobile}\r\n                  tasks={tasks}\r\n                ></RenderToolTip>\r\n              )}\r\n            />\r\n            {/* {!isMonth && <AppointmentForm />} */}\r\n            {!isMonth && (\r\n              <AppointmentForm\r\n                overlayComponent={(args: any) => (\r\n                  <PopupLayoutBox\r\n                    isRTL={isRTL}\r\n                    theme={theme}\r\n                    alrt={{}}\r\n                    open={args.visible || false}\r\n                    title={title}\r\n                    onSubmit={commitChanges}\r\n                    mt={0}\r\n                    mb={50}\r\n                    {...args}\r\n                    onClose={args.onHide}\r\n                    isMobile={isMobile}\r\n                  ></PopupLayoutBox>\r\n                )}\r\n                basicLayoutComponent={(pr: any) => (\r\n                  <AppointForm\r\n                    departments={departments}\r\n                    employees={employees}\r\n                    servicesproducts={services}\r\n                    theme={theme}\r\n                    tasks={tasks}\r\n                    isMobile={isMobile}\r\n                    {...pr}\r\n                  ></AppointForm>\r\n                )}\r\n                commandButtonComponent={CommandAppointment}\r\n              />\r\n            )}\r\n            <AllDayPanel />\r\n            {!isMonth && <DragDropProvider></DragDropProvider>}\r\n            <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n          </Scheduler>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useDepartments, useEmployees } from \"../../hooks\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainCalendar = (props: any) => {\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  return (\r\n    <Main {...props} employees={employees} departments={departments}></Main>\r\n  );\r\n};\r\n\r\nexport default MainCalendar;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst GenLanguage = ({ lang, setLang, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setLang(e.target.value);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 185 }}>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تغيير اللغة\" : \"Change Language\"}\r\n        </Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={lang}\r\n          onChange={onchange}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"English\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n          >\r\n            <FormControlLabel\r\n              value=\"ar\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"عربي\"\r\n            />\r\n          </Box>\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenLanguage;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { palettes } from \"../../themes/palettes\";\r\nconst GenTheme = ({ themeId, setThemeId, isRTL }) => {\r\n  const onchange = (e: any) => {\r\n    setThemeId(e.target.value);\r\n  };\r\n\r\n  const renderColors = (pallet: any) => {\r\n    return (\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.primary.main,\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            backgroundColor: pallet.secondary.main,\r\n          }}\r\n        ></Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">{isRTL ? \"الثيمة\" : \"Themes\"}</Typography>\r\n\r\n        <RadioGroup\r\n          aria-label=\"Views\"\r\n          style={{ marginTop: 12 }}\r\n          name=\"views\"\r\n          value={themeId}\r\n          onChange={onchange}\r\n        >\r\n          {palettes.map((pal: any, index: number) => {\r\n            return (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                style={{ flexDirection: \"row\", marginBottom: 20 }}\r\n              >\r\n                <FormControlLabel\r\n                  value={index.toString()}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"\"\r\n                />\r\n                {renderColors(pal.palette)}\r\n              </Box>\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GenTheme;\r\n","// const remote = require(\"electron\").remote;\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { remote } from \"electron\";\r\nimport { useBackup } from \"../hooks\";\r\nimport Loading from \"./Loading\";\r\nimport { messageAlert, messageShow } from \"./helpers\";\r\nimport AlertMsg from \"./AlertMsg\";\r\n// const eFS = remote.require(\"fs\");\r\n// const ePath = remote.require(\"path\");\r\n\r\nexport default function BackupRestoreDB({ dialog, isRTL }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [btype, setBtype] = useState(\"auto\");\r\n  const [pathlist, setPathlist]: any = useState(null);\r\n\r\n  const { backup, restore } = useBackup();\r\n\r\n  // useEffect(() => {\r\n  //   // const root = process.cwd().split(ePath.sep)[0];\r\n  //   // const backupDir = root + \"/jadwaldata/backups/\";\r\n  //   eFS.readdir(backupDir, function (err, items) {\r\n  //     if (err) {\r\n  //       console.log(err);\r\n  //     } else {\r\n  //       const list = items.map((item: any, index: any) => {\r\n  //         return {\r\n  //           id: index,\r\n  //           name: item,\r\n  //           path: `${backupDir}${item}`,\r\n  //         };\r\n  //       });\r\n  //       const updatedList = list.filter((litem: any) =>\r\n  //         litem.name.startsWith(btype),\r\n  //       );\r\n  //       updatedList.sort((b: any, a: any) =>\r\n  //         a.name > b.name ? 1 : b.name > a.name ? -1 : 0,\r\n  //       );\r\n  //       setPathlist(updatedList);\r\n  //     }\r\n  //   });\r\n  // }, [btype]);\r\n\r\n  const hendleBackup = async () => {\r\n    setLoading(true);\r\n    const res = await backup({});\r\n    if (res?.data?.backupDB?.ok) {\r\n      await messageShow(setAlrt, `backup Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `backup Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const hendleRestore = async (filepath: any) => {\r\n    setLoading(true);\r\n    const res = await restore({ variables: { path: filepath } });\r\n    if (res?.data?.restoreDB?.ok) {\r\n      await messageShow(setAlrt, `Restore Succeed`);\r\n    } else {\r\n      await messageAlert(setAlrt, `Restore Fail`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Paper style={{ height: 500 }}>\r\n      <Box padding={3}>\r\n        {alrt.show && (\r\n          <AlertMsg top right type={alrt.type} msg={alrt.msg}></AlertMsg>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {isRTL\r\n              ? \"نسخ احتياطي لقاعدة البيانات\"\r\n              : \"Backup and Restore Database\"}\r\n          </Typography>\r\n          {!dialog && (\r\n            <Button\r\n              onClick={hendleBackup}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ height: 36 }}\r\n            >\r\n              {isRTL ? \"انشاء نسخ احتياطي\" : \"Backup Now\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Box style={{ marginInlineStart: 30 }}>\r\n          <RadioGroup\r\n            aria-label=\"Views\"\r\n            name=\"views\"\r\n            row\r\n            value={btype}\r\n            onChange={(e: any) => setBtype(e.target.value)}\r\n          >\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"auto\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي الألي\" : \"Auto Backups\"}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value=\"manual\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"النسخ الاحتياطي اليدوي\" : \"Manual Backups\"}\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </Box>\r\n        <Paper elevation={3} style={{ height: 360, overflow: \"auto\" }}>\r\n          <Box padding={3}>\r\n            <TableContainer>\r\n              {pathlist && (\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    {pathlist.map((row: any) => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            onClick={() => hendleRestore(row.path)}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {isRTL ? \"استرجاع البيانات\" : \"Restore\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </TableContainer>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { backupDB, restoreDB } from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [backup] = useMutation(backupDB);\r\n  const [restore] = useMutation(restoreDB);\r\n\r\n  return { backup, restore };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\n\r\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst calSchema = yup.object().shape({\r\n  start: yup.number().required().min(0).max(23),\r\n  end: yup.number().required().min(1).max(24),\r\n  duration: yup.number().required().min(15).max(120),\r\n});\r\n\r\nconst CalendarOptions = ({ words, calendar, setCalendar, isRTL }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      start: calendar ? calendar?.start : 8.5,\r\n      end: calendar ? calendar?.end : 21.5,\r\n      duration: calendar ? calendar?.duration : 30,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    setCalendar({\r\n      start: Number(data.start),\r\n      end: Number(data.end),\r\n      duration: Number(data.duration),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل التقويم\" : \"Edit Calendar\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"start\"\r\n                label={words.start}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <PopupTextField\r\n                required\r\n                name=\"end\"\r\n                label={words.end}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={8}></Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              {\" \"}\r\n              <PopupTextField\r\n                required\r\n                name=\"duration\"\r\n                label={words.duration}\r\n                register={register}\r\n                errors={errors}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CalendarOptions;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport {\r\n  CLOUD_NAME,\r\n  imageUploadOptions,\r\n  UPLOAD_PRESET,\r\n} from \"../constants/sizes\";\r\n\r\nconst serverURL = \"http://jadwal-server:4000\";\r\n\r\nexport const FileUpload = () => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadfile`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const renderFile = () => {\r\n    return (\r\n      <div style={{ padding: 10 }}>\r\n        <p>file location {data.path}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input type=\"file\" name=\"file\" onChange={handleChange} />\r\n        {data.path && renderFile()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageUpload = ({ setLogo, disabled }) => {\r\n  const [data, setFile] = useState({ name: \"\", path: \"\" });\r\n  const handleChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(`${serverURL}/uploadimage`, formData)\r\n      .then((res) => {\r\n        setFile({\r\n          name: res.data.filename,\r\n          path: serverURL + res.data.path,\r\n        });\r\n        if (setLogo) {\r\n          setLogo(serverURL + res.data.path);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: 20, marginBottom: 10 }}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ImageOnlineUpload = ({\r\n  url,\r\n  setUrl,\r\n  image,\r\n  setImage,\r\n  width,\r\n  height,\r\n  size,\r\n}) => {\r\n  const [localimage, setLocalImage]: any = useState(null);\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  const selectImage = (e: any) => {\r\n    const img = e.target?.files?.[0];\r\n    if (img) {\r\n      setImage(img);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setUrl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setLocalImage(URL.createObjectURL(image));\r\n    } else {\r\n      setLocalImage(null);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Box>\r\n      <input\r\n        ref={fileInput}\r\n        style={{\r\n          width: 0.1,\r\n          height: 0.1,\r\n          opacity: 0,\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n        }}\r\n        type=\"file\"\r\n        onChange={selectImage}\r\n      />\r\n      {localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={localimage}\r\n          />\r\n        </Box>\r\n      )}\r\n      {url && !localimage && (\r\n        <Box>\r\n          <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: 10,\r\n              marginLeft: 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <HighlightOffIcon style={{ color: \"#ff9d2d\" }}></HighlightOffIcon>\r\n          </div>\r\n          <img\r\n            onClick={() => fileInput.current.click()}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            src={url}\r\n          />\r\n        </Box>\r\n      )}\r\n      {!localimage && !url && (\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            overflow: \"hidden\",\r\n            width: width,\r\n            height: height,\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#eaeaea\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => fileInput.current.click()}\r\n        >\r\n          <Typography style={{ color: \"#bbb\", fontSize: 14 }}>\r\n            {size}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const uploadPhotoOnline = async (image: any) => {\r\n  try {\r\n    const compressedImage = await imageCompression(image, imageUploadOptions);\r\n    const d = new FormData();\r\n    d.append(\"file\", compressedImage);\r\n    d.append(\"upload_preset\", UPLOAD_PRESET);\r\n    d.append(\"cloud_name\", CLOUD_NAME);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/fivegstore/image/upload\",\r\n      {\r\n        method: \"post\",\r\n        body: d,\r\n      }\r\n    );\r\n    const json = await res.json();\r\n    return json.url;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { PopupTextField } from \"../../Shared\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  ImageOnlineUpload,\r\n  ImageUpload,\r\n  uploadPhotoOnline,\r\n} from \"../../common/upload\";\r\nimport { isProd } from \"../../constants/sizes\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst calSchema = yup.object().shape({\r\n  name: yup.string().required().min(3).max(100),\r\n  nameAr: yup.string().required(),\r\n  tel1: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(),\r\n});\r\n\r\nconst Company = ({ words, editCompany, company, isRTL }) => {\r\n  const [logo, setLogo] = useState(undefined);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [iconimage, setIconimage] = useState(null);\r\n  const [iconurl, setIconurl] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(calSchema),\r\n    defaultValues: {\r\n      name: company?.name,\r\n      nameAr: company?.nameAr,\r\n      tel1: company?.tel1,\r\n      tel2: company?.tel2,\r\n      fax: company?.fax,\r\n      mob: company?.mob,\r\n      email: company?.email,\r\n      website: company?.website,\r\n      address: company?.address,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company?.logo) {\r\n      setLogo(company?.logo);\r\n      setIconurl(company?.logo);\r\n    }\r\n  }, [company]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const { tel1, tel2, fax, mob, email, website, address } = data;\r\n    let icon: any;\r\n    if (iconimage) {\r\n      icon = await uploadPhotoOnline(iconimage);\r\n      icon = icon.replace(\"http://\", \"https://\");\r\n    }\r\n    const variables: any = {\r\n      name,\r\n      nameAr,\r\n      tel1,\r\n      tel2,\r\n      fax,\r\n      mob,\r\n      email,\r\n      website,\r\n      address,\r\n      logo: icon ? icon : logo,\r\n    };\r\n\r\n    await editCompany({ variables });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={2}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"معلوات الشركة\" : \"Company Information\"}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            {isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.nameEn}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {!isRTL && (\r\n              <React.Fragment>\r\n                <PopupTextField\r\n                  autoFocus\r\n                  required\r\n                  name=\"name\"\r\n                  label={words.name}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n                <PopupTextField\r\n                  required\r\n                  name=\"nameAr\"\r\n                  label={words.nameAr}\r\n                  register={register}\r\n                  errors={errors}\r\n                  disabled={!active}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <PopupTextField\r\n              required\r\n              name=\"tel1\"\r\n              label={words.phoneNumber}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"fax\"\r\n              label={words.fax}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"mob\"\r\n              label={words.mobile}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"tel2\"\r\n              label={words.phone2}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"email\"\r\n              label={words.email}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            <PopupTextField\r\n              name=\"address\"\r\n              label={words.address}\r\n              register={register}\r\n              errors={errors}\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n              disabled={!active}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <PopupTextField\r\n              name=\"website\"\r\n              label={words.website}\r\n              register={register}\r\n              errors={errors}\r\n              disabled={!active}\r\n            />\r\n            {!isProd && (\r\n              <>\r\n                <img\r\n                  src={logo}\r\n                  alt={company?.name}\r\n                  height={100}\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    borderRadius: 10,\r\n                    marginTop: 5,\r\n                  }}\r\n                />\r\n                <ImageUpload disabled={!active} setLogo={setLogo}></ImageUpload>\r\n              </>\r\n            )}\r\n            <Box style={{ marginBottom: 20 }}></Box>\r\n            {isProd && (\r\n              <ImageOnlineUpload\r\n                url={iconurl}\r\n                setUrl={setIconurl}\r\n                image={iconimage}\r\n                setImage={setIconimage}\r\n                width={300}\r\n                height={150}\r\n                size=\"400x200\"\r\n              ></ImageOnlineUpload>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={4}></Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: 50,\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleSubmit(onSubmit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={!active}\r\n                style={{\r\n                  width: 90,\r\n                  height: 34,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography>{words.save}</Typography>\r\n              </Button>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={active}\r\n                    onChange={(e: any) => setActive(e.target.checked)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={isRTL ? \"تفعيل التعديل\" : \"Activate\"}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flexDirection: \"row\",\r\n              direction: \"ltr\",\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              style={{ flexDirection: \"row\", direction: \"ltr\" }}\r\n            >\r\n              <Box\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                  marginLeft: 10,\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                App ID:\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 11,\r\n                  color: \"#ccc\",\r\n                }}\r\n              >\r\n                {company?.appid}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 11,\r\n                color: \"#ccc\",\r\n                marginLeft: 10,\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              {company?.appversion}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport { PopupTextField } from \"../../Shared\";\r\n\r\nexport default function Names({ isRTL, words, setNames }) {\r\n  const { store } = useContext(GlobalContext);\r\n  const { names } = store;\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      tasks: names ? names?.tasks : null,\r\n      customers: names ? names?.customers : null,\r\n      employees: names ? names?.employees : null,\r\n      departments: names ? names?.departments : null,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    const { customers, departments, employees, tasks } = data;\r\n    if (\r\n      customers?.length < 3 ||\r\n      customers?.length < 3 ||\r\n      customers?.length < 3 ||\r\n      customers?.length < 3\r\n    ) {\r\n      return;\r\n    }\r\n    const names = {\r\n      tasks,\r\n      customers,\r\n      employees,\r\n      departments,\r\n    };\r\n    setNames(names);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box padding={3}>\r\n        <Typography variant=\"h6\">\r\n          {isRTL ? \"تعديل الاسماء\" : \"Edit Names\"}\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"tasks\"\r\n                label={words.task}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"tasksAr\"\r\n                label={words.task}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"employees\"\r\n                label={words.employee}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"employeesAr\"\r\n                label={words.employee}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"departments\"\r\n                label={words.department}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"departmentsAr\"\r\n                label={words.deparrtment}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={3}>\r\n              <PopupTextField\r\n                name=\"customers\"\r\n                label={words.customer}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n              <PopupTextField\r\n                name=\"customersAr\"\r\n                label={words.customer}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              height: 50,\r\n              // marginTop: 20,\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={handleSubmit(onSubmit)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                width: 90,\r\n                height: 34,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography>{words.save}</Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\n\r\nimport Language from \"./LanguageSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport GenTheme from \"./ThemeSelect\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport BackupRestoreDB from \"../../Shared/BackupRestoreDB\";\r\nimport { isSuperAdmin } from \"../../common/roles\";\r\nimport CalendarOptions from \"./CalendarOptions\";\r\nimport Company from \"./Company\";\r\nimport Names from \"./Names\";\r\n\r\nconst initcalendar = {\r\n  duration: 30,\r\n  start: 8.5,\r\n  end: 21.5,\r\n};\r\n\r\nconst Options = ({\r\n  menuitem,\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  company,\r\n  editCompany,\r\n  theme,\r\n}: any) => {\r\n  const { store, dispatch }: GContextTypes = useContext(GlobalContext);\r\n  const { lang, themeId, user, calendar } = store;\r\n\r\n  const view = isSuperAdmin(user);\r\n\r\n  const setLang = (lang: any) => {\r\n    dispatch({ type: \"setLang\", payload: lang });\r\n  };\r\n  const setThemeId = (themeId: any) => {\r\n    dispatch({ type: \"setThemeId\", payload: themeId });\r\n  };\r\n  const setCalendar = (data: any) => {\r\n    dispatch({ type: \"setCalendar\", payload: data });\r\n  };\r\n  const setNames = (data: any) => {\r\n    dispatch({ type: \"setNames\", payload: data });\r\n  };\r\n\r\n  if (!calendar) {\r\n    setCalendar(initcalendar);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={10}>\r\n          <Language lang={lang} setLang={setLang} isRTL={isRTL}></Language>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          {isEditor && (\r\n            <CalendarOptions\r\n              calendar={calendar}\r\n              words={words}\r\n              setCalendar={setCalendar}\r\n              isRTL={isRTL}\r\n            ></CalendarOptions>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={10}>\r\n          <GenTheme\r\n            isRTL={isRTL}\r\n            themeId={themeId}\r\n            setThemeId={setThemeId}\r\n          ></GenTheme>\r\n        </Grid>\r\n\r\n        {view && (\r\n          <Grid item xs={12} md={10}>\r\n            <BackupRestoreDB isRTL={isRTL} dialog={false}></BackupRestoreDB>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} md={10}>\r\n          <Company\r\n            company={company}\r\n            editCompany={editCompany}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></Company>\r\n        </Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <Names setNames={setNames} isRTL={isRTL} words={words}></Names>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { successAlert, dublicateAlert, errorAlert, yup } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupPassword = ({ open, onClose, row, editPassword, theme }: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.passResolver);\r\n  const {\r\n    translate: { isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const password = data.password;\r\n    const newPassword = data.newPassword;\r\n    const newPassword2 = data.newPassword2;\r\n\r\n    if (newPassword !== newPassword2) {\r\n      await errorAlertMsg(setAlrt, \"password not match\");\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      _id: row._id,\r\n      password,\r\n      newPassword,\r\n    };\r\n    try {\r\n      const res = await editPassword({ variables });\r\n      if (res?.data?.changePassword?.ok === true) {\r\n        await successAlert(setAlrt, isRTL);\r\n      } else if (res?.data?.changePassword?.ok === false) {\r\n        await errorAlertMsg(setAlrt, res?.data?.changePassword?.error);\r\n        return;\r\n      }\r\n      reset();\r\n      onClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL ? \"تعديل كلمة المرور\" : \"Change Password\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <TextFieldLocal\r\n            autoFocus\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            label={isRTL ? \"كلمة المرور الحالية\" : \"Current Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n          <TextFieldLocal\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword2\"\r\n            label={isRTL ? \"كلمة المرور الجديدة\" : \"New Password\"}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupPassword;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useBranches } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  PopupTextField,\r\n  UserRoles,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { branchesToEmptyWithKeep, isBranchAdmin } from \"../common/roles\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PopupPassword from \"./PopupPassword\";\r\nimport { errorAlertMsg } from \"../Shared/helpers\";\r\n\r\nconst PopupUser = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  applyChanges,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  editPassword,\r\n  block,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [roles, setRoles] = useState({});\r\n  const [brch, setBrch] = useState(\"branch1\");\r\n  const [blockUser, setBlockUser] = useState(false);\r\n\r\n  const [openPass, setOpenPass] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    isNew ? yup.addUserResolver : yup.editUserResolver\r\n  );\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const isBA = isBranchAdmin(user);\r\n  const { branches } = useBranches();\r\n  const handleChangeRoles = ({ branch, system, role }: any) => {\r\n    if (!branch) return;\r\n    const rolesObj = { ...roles };\r\n\r\n    if (branch && !system) {\r\n      if (rolesObj[branch][role] === true) {\r\n        delete rolesObj[branch][role];\r\n      } else {\r\n        rolesObj[branch][role] = true;\r\n      }\r\n    } else {\r\n      if (rolesObj[branch][system][role] === true) {\r\n        delete rolesObj[branch][system][role];\r\n      } else {\r\n        rolesObj[branch][system][role] = true;\r\n      }\r\n    }\r\n    setRoles(rolesObj);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rols = branchesToEmptyWithKeep(branches, brch);\r\n    setRoles(rols);\r\n  }, [open, brch]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const rols = JSON.parse(row.roles);\r\n      setBrch(row.branch);\r\n      setRoles(rols);\r\n      setBlockUser(row.block);\r\n    }\r\n  }, [open]);\r\n\r\n  const onClosePass = () => setOpenPass(false);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (user.isSuperAdmin !== true) {\r\n      if (row.isSuperAdmin === true || row.isSuperAdmin === \"true\") {\r\n        await errorAlertMsg(setAlrt, \"You can't change this account\");\r\n        return;\r\n      }\r\n    }\r\n    setSaving(true);\r\n    applyChanges();\r\n    const username = isNew ? data.username : row.username;\r\n    const name = data.name.trim();\r\n    const phone = data.phone;\r\n    const password = data.password;\r\n    const email = data.email;\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      username,\r\n      name,\r\n      phone,\r\n      email,\r\n      password: isNew ? password : undefined,\r\n      roles: JSON.stringify(roles),\r\n      branch: brch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setSaving(false);\r\n      onFormClose();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onBlockUser = () => {\r\n    const variables = {\r\n      _id: row._id,\r\n      block: !blockUser,\r\n    };\r\n    block({ variables });\r\n  };\r\n\r\n  const onFormClose = () => {\r\n    reset();\r\n    setRoles({});\r\n    setBrch(\"branch1\");\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مستخدم\"\r\n      : \"تعديل بيانات مستخدم\"\r\n    : isNew\r\n    ? \"New User\"\r\n    : \"Edit User\";\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <PopupTextField\r\n            autoFocus\r\n            required\r\n            name=\"username\"\r\n            label={words.username}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n            disabled={!isNew}\r\n          />\r\n          {isNew && (\r\n            <PopupTextField\r\n              required\r\n              name=\"password\"\r\n              label={words.password}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              type=\"password\"\r\n            />\r\n          )}\r\n          <PopupTextField\r\n            required\r\n            name=\"name\"\r\n            label={words.name}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"phone\"\r\n            label={words.phoneNumber}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <PopupTextField\r\n            name=\"email\"\r\n            label={words.email}\r\n            register={register}\r\n            errors={errors}\r\n            row={row}\r\n          />\r\n          <Box>\r\n            <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n              {isRTL ? \"الصلاحيات\" : \"Roles\"}\r\n            </Typography>\r\n          </Box>\r\n          {branches && roles && (\r\n            <UserRoles\r\n              roles={roles}\r\n              isRTL={isRTL}\r\n              branches={branches}\r\n              brch={brch}\r\n              handleChangeRoles={handleChangeRoles}\r\n            ></UserRoles>\r\n          )}\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 20,\r\n            }}\r\n          ></Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {!isNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => setOpenPass(true)}\r\n                style={{ marginLeft: 10, marginRight: 10 }}\r\n              >\r\n                {isRTL ? \"تغيير كلمة المرور\" : \"Change Password\"}\r\n              </Button>\r\n            )}\r\n            {isBA && !row.isSuperAdmin && !isNew && (\r\n              <Button\r\n                color={blockUser ? \"secondary\" : \"primary\"}\r\n                onClick={onBlockUser}\r\n                variant=\"outlined\"\r\n              >\r\n                {blockUser\r\n                  ? isRTL\r\n                    ? \"تفعيل الحساب\"\r\n                    : \"Unblock user\"\r\n                  : isRTL\r\n                  ? \"تعطيل الحساب\"\r\n                  : \"Block user\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <PopupPassword\r\n          open={openPass}\r\n          onClose={onClosePass}\r\n          row={row}\r\n          editPassword={editPassword}\r\n          theme={theme}\r\n        ></PopupPassword>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupUser;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { Box, Fab, IconButton } from \"@material-ui/core\";\r\nimport { useUsers } from \"../../hooks\";\r\nimport PopupUser from \"../../pubups/PopupUser\";\r\nimport {\r\n  activeFormatter,\r\n  avatarFormatter,\r\n  rolesFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nconst getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Users({\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  menuitem,\r\n  isEditor,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: \"avatar\", title: words.avatar },\r\n    { name: \"username\", title: words.username },\r\n    { name: \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"roles\", title: words.roles },\r\n    { name: \"block\", title: isRTL ? \"الحالة\" : \"Status\" },\r\n  ]);\r\n\r\n  const {\r\n    users,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n    refreshuser,\r\n  } = useUsers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeUser({ variables: { _id } });\r\n      if (res?.data?.deleteUser?.ok === false) {\r\n        await errorAlert(setAlrt, isRTL);\r\n        return;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const AddButton = ({ onExecute }) => (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Box m={1}>\r\n        <Fab color=\"primary\" onClick={onExecute} title=\"Create new row\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  const EditButton = ({ onExecute }) => (\r\n    <IconButton onClick={onExecute} title=\"Edit row\">\r\n      <EditIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const DeleteButton = ({ onExecute }) => (\r\n    <IconButton\r\n      onClick={() => {\r\n        if (window.confirm(\"Are you sure you want to delete this row?\")) {\r\n          onExecute();\r\n        }\r\n      }}\r\n      title=\"Delete row\"\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const commandComponents = {\r\n    add: AddButton,\r\n    edit: EditButton,\r\n    delete: DeleteButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshuser}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={users} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"roles\"]}\r\n            formatterComponent={(props: any) =>\r\n              rolesFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"block\"]}\r\n            formatterComponent={activeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing theme={theme} addAction={addUser} editAction={editUser}>\r\n            <PopupUser editPassword={editPassword} block={block}></PopupUser>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getUsers,\r\n  signup,\r\n  updateUser,\r\n  deleteUser,\r\n  changePassword,\r\n  blockUser,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getUsrs, usrData]: any = useLazyQuery(getUsers);\r\n\r\n  const [addUser] = useMutation(signup, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editUser] = useMutation(updateUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [editPassword] = useMutation(changePassword, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [block] = useMutation(blockUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n  const [removeUser] = useMutation(deleteUser, {\r\n    refetchQueries: [{ query: getUsers }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsrs();\r\n  }, [getUsrs]);\r\n\r\n  const users = usrData?.data?.[\"getUsers\"]?.data || [];\r\n  const refreshuser = () => usrData?.refetch();\r\n\r\n  return {\r\n    users,\r\n    refreshuser,\r\n    addUser,\r\n    editUser,\r\n    removeUser,\r\n    editPassword,\r\n    block,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useDepartments } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Departments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: isRTL ? \"name\" : \"nameAr\", title: words.name },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"avatar\", title: words.color },\r\n    { id: 11, ref: \"status\", name: \"status\", title: \" \" },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid rows={departments} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [1, 2] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [1, 2] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Employees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"resType\", title: isRTL ? \"القطاع\" : \"Section\" },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"resType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getObjectEvents(\r\n    $departmentId: String\r\n    $employeeId: String\r\n    $customerId: String\r\n    $taskId: Int\r\n  ) {\r\n    getObjectEvents(\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n      customerId: $customerId\r\n      taskId: $taskId\r\n    ) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        id\r\n        taskId\r\n        branch\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { RRule } from \"rrule\";\r\n\r\nconst start = new Date(Date.UTC(2012, 1, 1, 10, 30));\r\nconst end = null;\r\n\r\nexport default function getRruleData({\r\n  freq = RRule.WEEKLY,\r\n  byweekday,\r\n  dtstart = start,\r\n  until = end,\r\n  interval = 1,\r\n  count = 1,\r\n}) {\r\n  const rule = new RRule({ freq, interval, byweekday, dtstart, until, count });\r\n  const all = rule.all();\r\n  const str = rule.toString();\r\n  const txt = rule.toText();\r\n\r\n  return { all, str, txt };\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport getRruleData from \"../common/getRruleData\";\r\nimport { SelectLocal } from \"../pages/calendar/common/SelectLocal\";\r\nimport RRule from \"rrule\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport SelectMulti from \"../Shared/SelectMulti\";\r\nimport { byweekdayOptions, freqOptions } from \"../constants/rrule\";\r\n\r\nconst PopupAddMultiEvents = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  theme,\r\n  isRTL,\r\n  words,\r\n  start,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [freq, setFreq] = useState(RRule.DAILY);\r\n  const [weekdays, setWeekdays] = useState([]);\r\n  const [byweekday, setByweekday] = useState([]);\r\n  const [dtstart, setDtstart] = useState(start ? start : new Date());\r\n  const [until, setUntil] = useState(null);\r\n  const [interval, setInterval] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const onChangeFreq = (e: any) => {\r\n    setFreq(e.target.value);\r\n  };\r\n\r\n  const onChangeInterval = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setInterval(1) : setInterval(value);\r\n  };\r\n  const onChangeCount = (e: any) => {\r\n    const value = Number(e.target.value);\r\n    value < 1 ? setCount(1) : setCount(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weekdays && weekdays.length > 0) {\r\n      const bwd = weekdays.map((wd: any) => wd.value);\r\n      setByweekday(bwd);\r\n    }\r\n  }, [weekdays]);\r\n  useEffect(() => {\r\n    if (freq !== RRule.WEEKLY) {\r\n      setWeekdays([]);\r\n      setByweekday([]);\r\n    }\r\n  }, [freq]);\r\n\r\n  const submit = () => {\r\n    setSaving(true);\r\n    const rdata = getRruleData({\r\n      freq,\r\n      byweekday: byweekday.length > 0 ? byweekday : undefined,\r\n      dtstart,\r\n      until,\r\n      interval,\r\n      count,\r\n    });\r\n    onSubmit(rdata);\r\n    setSaving(false);\r\n    onFormClose();\r\n  };\r\n\r\n  const title = isRTL ? \"انشاء مواعيد متعددة\" : \"Add Multi Appointments\";\r\n\r\n  const onFormClose = () => {\r\n    setFreq(RRule.DAILY);\r\n    setDtstart(new Date());\r\n    setUntil(null);\r\n    setInterval(1);\r\n    setCount(1);\r\n    setWeekdays([]);\r\n    setByweekday([]);\r\n    onClose();\r\n    setSaving(false);\r\n  };\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onFormClose}\r\n      title={title}\r\n      onSubmit={submit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      fullwidth\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={dtstart}\r\n              onChange={(date: any) => setDtstart(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n          <SelectLocal\r\n            options={freqOptions}\r\n            value={freq}\r\n            onChange={onChangeFreq}\r\n            isRTL={isRTL}\r\n          ></SelectLocal>\r\n          {freq === RRule.WEEKLY && (\r\n            <SelectMulti\r\n              options={byweekdayOptions}\r\n              value={weekdays}\r\n              setValue={setWeekdays}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"weekdays\"\r\n              width={240}\r\n            ></SelectMulti>\r\n          )}\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"count\"\r\n              label={words.qty}\r\n              value={count}\r\n              onChange={onChangeCount}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextFieldLocal\r\n              required\r\n              name=\"interval\"\r\n              label={words.interval}\r\n              value={interval}\r\n              onChange={onChangeInterval}\r\n              type=\"number\"\r\n              width={240}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={until}\r\n              onChange={(date: any) => setUntil(date)}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAddMultiEvents;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointmentCustomer = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n      setTasktitle(row?.title);\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n      setRrule(row?.rRule);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const rRule = rrule?.str ? rrule?.str : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      rRule,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      bgcolor={colors.blue[500]}\r\n      mb={20}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      setSelectError={setCustError}\r\n                      selectError={custError}\r\n                      refernce={custRef}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      showphone\r\n                      disabled={name === \"customerId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"taskId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                      disabled={name === \"employeeId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      disabled={name === \"departmentId\"}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}></Grid>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <ItemsTable\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <Box>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n        </Grid>\r\n        <PopupAddMultiEvents\r\n          open={openMulti}\r\n          onClose={() => setOpenMulti(false)}\r\n          onSubmit={setRrule}\r\n          theme={theme}\r\n          isRTL={isRTL}\r\n          words={words}\r\n        ></PopupAddMultiEvents>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointmentCustomer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  updateEvent,\r\n} from \"../graphql\";\r\nimport { Command } from \"./Command\";\r\nimport PopupEditing from \"./PopupEditing\";\r\nimport getObjectEvents from \"../graphql/query/getObjectEvents\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport LoadingInline from \"./LoadingInline\";\r\nimport PopupAppointmentCustomer from \"../pubups/PopupAppointmentCustomer\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nexport const getRowId = (row: any) => row._id;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  id,\r\n  name,\r\n  isNew,\r\n  company,\r\n  value,\r\n}: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    col.docNo,\r\n    col.department,\r\n    col.employee,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n  const { tasks } = useTasks();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getObjectEvents,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [getEvents, eventsData]: any = useLazyQuery(getObjectEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n    getEvents({ variables });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const data = eventsData?.data?.[\"getObjectEvents\"]?.data;\r\n    if (data) {\r\n      setLoading(false);\r\n    }\r\n    const events = data || [];\r\n    setRows(events);\r\n  }, [eventsData]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      {loading && <LoadingInline></LoadingInline>}\r\n\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n\r\n          <VirtualTable\r\n            height={600}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {isEditor && !isNew && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand={rows && rows.length > 1}\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointmentCustomer\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              company={company}\r\n              isEditor={isEditor}\r\n              tasks={tasks}\r\n              name={name}\r\n              value={value}\r\n            ></PopupAppointmentCustomer>\r\n          </PopupEditing>\r\n\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: isNew ? 20 : 100,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelectMulti({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      limitTags={3}\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{ padding: 10 }}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { moneyFormat } from \"./colorFormat\";\r\nimport FilterSelectMulti from \"./FilterSelectMulti\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import SelectServProd from \"./SelectServProd\";\r\nexport default function SalesFilter({\r\n  emplvalue,\r\n  setEmplvalue,\r\n  servicevalue,\r\n  setServicevalue,\r\n  departvalue,\r\n  setDepartvalue,\r\n  custvalue,\r\n  setCustvalue,\r\n  itemType,\r\n  tasks,\r\n  taskvalue,\r\n  setTaskvalue,\r\n  employees,\r\n  departments,\r\n  services,\r\n  customers,\r\n  total,\r\n  words,\r\n  isRTL,\r\n  documentTypes,\r\n  types,\r\n  setTypes,\r\n}: any) {\r\n  const [emplvalueLocal, setEmplvalueLocal] = React.useState([]);\r\n  const [servicevalueLocal, setServicevalueLocal] = React.useState([]);\r\n  const [departvalueLocal, setDepartvalueLocal] = React.useState([]);\r\n  const [custvalueLocal, setCustvalueLocal] = React.useState([]);\r\n  const [taskvalueLocal, setTaskvalueLocal] = React.useState([]);\r\n  const [typesvalueLocal, setTypesvalueLocal] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState<any>(\"paper\");\r\n\r\n  useEffect(() => {\r\n    if (open === true) {\r\n      setEmplvalueLocal(emplvalue);\r\n      setServicevalueLocal(servicevalue);\r\n      setDepartvalueLocal(departvalue);\r\n      setCustvalueLocal(custvalue);\r\n      setTaskvalueLocal(taskvalue);\r\n      setTypesvalueLocal(types);\r\n    }\r\n  }, [open]);\r\n\r\n  const reset = () => {\r\n    setEmplvalueLocal([]);\r\n    setServicevalueLocal([]);\r\n    setDepartvalueLocal([]);\r\n    setCustvalueLocal([]);\r\n    setTaskvalueLocal([]);\r\n    setTypesvalueLocal([]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleResetAll = () => {\r\n    reset();\r\n    setEmplvalue([]);\r\n    setServicevalue([]);\r\n    setDepartvalue([]);\r\n    setCustvalue([]);\r\n    setTaskvalue([]);\r\n    setTypes([]);\r\n  };\r\n  const handleClickOpen = (scrollType: any) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const onSubmit = () => {\r\n    setEmplvalue(emplvalueLocal);\r\n    setServicevalue(servicevalueLocal);\r\n    setDepartvalue(departvalueLocal);\r\n    setCustvalue(custvalueLocal);\r\n    setTaskvalue(taskvalueLocal);\r\n    setTypes(typesvalueLocal);\r\n    setOpen(false);\r\n  };\r\n  const tt = types ? types : [];\r\n  const filtercounts = [\r\n    ...emplvalue,\r\n    ...servicevalue,\r\n    ...departvalue,\r\n    ...custvalue,\r\n    ...taskvalue,\r\n    ...tt,\r\n    itemType ? itemType : undefined,\r\n  ].filter((x: any) => x);\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        marginTop: 2,\r\n        height: 38,\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 160,\r\n          backgroundColor:\r\n            filtercounts.length > 0 || itemType ? \"#FFF5D6\" : undefined,\r\n        }}\r\n        onClick={handleClickOpen(\"paper\")}\r\n      >\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography style={{}} variant=\"button\">\r\n            {isRTL\r\n              ? `الفلاتر - (${filtercounts.length})`\r\n              : `Filters - (${filtercounts.length})`}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ marginRight: 10, width: 30, height: 30 }}\r\n            onClick={handleResetAll}\r\n          >\r\n            <CloseIcon></CloseIcon>\r\n          </IconButton>\r\n        </Box>\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{ direction: isRTL ? \"rtl\" : \"ltr\", backgroundColor: \"#eee\" }}\r\n        >\r\n          {isRTL\r\n            ? `الفلاتر - (${filtercounts.length})`\r\n            : `Filters - (${filtercounts.length})`}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{ width: 600, height: 450, direction: isRTL ? \"rtl\" : \"ltr\" }}\r\n          dividers={scroll === \"paper\"}\r\n        >\r\n          <Box>\r\n            <Box>\r\n              {documentTypes && (\r\n                <FilterSelectMulti\r\n                  options={documentTypes}\r\n                  value={typesvalueLocal}\r\n                  setValue={setTypesvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"type\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={employees}\r\n                value={emplvalueLocal}\r\n                setValue={setEmplvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"employee\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              <FilterSelectMulti\r\n                options={departments}\r\n                value={departvalueLocal}\r\n                setValue={setDepartvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"department\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n              {tasks && tasks.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={tasks}\r\n                  value={taskvalueLocal}\r\n                  setValue={setTaskvalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"task\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              {servicevalue && servicevalue.length > 0 && (\r\n                <FilterSelectMulti\r\n                  options={services}\r\n                  value={servicevalueLocal}\r\n                  setValue={setServicevalueLocal}\r\n                  words={words}\r\n                  isRTL={isRTL}\r\n                  name=\"serviceproduct\"\r\n                  width={350}\r\n                ></FilterSelectMulti>\r\n              )}\r\n              <FilterSelectMulti\r\n                options={customers}\r\n                value={custvalueLocal}\r\n                setValue={setCustvalueLocal}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"customer\"\r\n                width={350}\r\n              ></FilterSelectMulti>\r\n\r\n              {total && total.length > 0 && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    flex: 1,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Box style={{ marginRight: 20, marginLeft: 20 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {words.total}: {moneyFormat(total[0].total)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions\r\n          style={{\r\n            direction: isRTL ? \"rtl\" : \"ltr\",\r\n            backgroundColor: \"#f8f8f8\",\r\n            height: 60,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={onSubmit}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"تطبيق\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            style={{ width: 100, height: 36 }}\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            {isRTL ? \"الغاء\" : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nexport const ReportGroupBySwitcher = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  isRTL,\r\n}: any) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"simple-menu\"\r\n        value={value}\r\n        onChange={onChange}\r\n        variant=\"outlined\"\r\n        style={{\r\n          height: 38,\r\n          width: 180,\r\n          alignSelf: \"flex-end\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          color: \"#555\",\r\n        }}\r\n      >\r\n        {options.map((item: any) => {\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              style={{ justifyContent: isRTL ? \"flex-end\" : \"flex-start\" }}\r\n              value={item.value}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  fade,\r\n  Hidden,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { DateViewSwitcher } from \"../../pages/calendar/common/DateViewSwitcher\";\r\nimport arLocale from \"date-fns/locale/ar-SA\";\r\nimport enLocale from \"date-fns/locale/en-GB\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport moment from \"moment\";\r\nexport default function DateNavigatorReports({\r\n  setStart,\r\n  setEnd,\r\n  currentDate,\r\n  currentViewName,\r\n  currentDateChange,\r\n  currentViewNameChange,\r\n  setSortDispatch,\r\n  endDate,\r\n  endDateChange,\r\n  isRTL,\r\n  words,\r\n  theme,\r\n  views,\r\n  color = theme.palette.primary.main,\r\n  bgcolor = fade(theme.palette.primary.dark, 0.12),\r\n}: any) {\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n  const [timeFormatEnd, setTimeFormatEnd] = useState(\"\");\r\n\r\n  const [open, setOpen]: any = useState(false);\r\n  const [openEnd, setOpenEnd]: any = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { start, end, period, periodEnd }: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n      isRTL,\r\n      endDate,\r\n    });\r\n\r\n    setStart(start);\r\n    setEnd(end);\r\n    setTimeFormat(period);\r\n    setTimeFormatEnd(periodEnd);\r\n  }, [currentDate, currentViewName, endDate]);\r\n\r\n  const stepForward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const tomorrow = new Date(currentDate);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      currentDateChange(tomorrow);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const next3days = new Date(currentDate);\r\n      next3days.setDate(next3days.getDate() + 3);\r\n      currentDateChange(next3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const nextweek = new Date(currentDate);\r\n      nextweek.setDate(nextweek.getDate() + 7);\r\n      currentDateChange(nextweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const nextmonth = new Date(currentDate);\r\n      nextmonth.setMonth(nextmonth.getMonth() + 1);\r\n      currentDateChange(nextmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const nextyear = new Date(currentDate);\r\n      nextyear.setFullYear(nextyear.getFullYear() + 1);\r\n      currentDateChange(nextyear);\r\n    }\r\n  };\r\n  const stepBackward = () => {\r\n    if (currentViewName === \"Day\") {\r\n      const yestarday = new Date(currentDate);\r\n      yestarday.setDate(yestarday.getDate() - 1);\r\n      currentDateChange(yestarday);\r\n    } else if (currentViewName === \"3Days\") {\r\n      const last3days = new Date(currentDate);\r\n      last3days.setDate(last3days.getDate() - 3);\r\n      currentDateChange(last3days);\r\n    } else if (currentViewName === \"Week\") {\r\n      const lastweek = new Date(currentDate);\r\n      lastweek.setDate(lastweek.getDate() - 7);\r\n      currentDateChange(lastweek);\r\n    } else if (currentViewName === \"Month\") {\r\n      const lastmonth = new Date(currentDate);\r\n      lastmonth.setMonth(lastmonth.getMonth() - 1);\r\n      currentDateChange(lastmonth);\r\n    } else if (currentViewName === \"Year\") {\r\n      const lastyear = new Date(currentDate);\r\n      lastyear.setFullYear(lastyear.getFullYear() - 1);\r\n      currentDateChange(lastyear);\r\n    }\r\n  };\r\n\r\n  const disabled = moment(new Date()).isSame(currentDate, \"day\");\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      style={{\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        minWidth: 450,\r\n      }}\r\n    >\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Button\r\n          style={{\r\n            height: 32,\r\n            width: 32,\r\n            padding: 0,\r\n            margin: 0,\r\n            marginLeft: 5,\r\n            backgroundColor: bgcolor,\r\n          }}\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            currentDateChange(new Date());\r\n            endDateChange(new Date());\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 13,\r\n              color: disabled ? \"#bbb\" : color,\r\n            }}\r\n          >\r\n            {isRTL ? \"الأن\" : \"Now\"}\r\n          </Typography>\r\n        </Button>\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\">\r\n        <DateViewSwitcher\r\n          currentViewName={currentViewName}\r\n          onChange={currentViewNameChange}\r\n          currentDateChange={currentDateChange}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          views={views}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {currentViewName !== \"Custom\" && (\r\n          <React.Fragment>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{}}\r\n              onClick={isRTL ? stepForward : stepBackward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              color=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={isRTL ? stepBackward : stepForward}\r\n            >\r\n              {isRTL && (\r\n                <ArrowBackIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n              {!isRTL && (\r\n                <ArrowForwardIosOutlinedIcon\r\n                  style={{ fontSize: 18, color: \"#555\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </React.Fragment>\r\n        )}\r\n        <Button\r\n          style={{\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            backgroundColor: \"#fff\",\r\n            height: 40,\r\n          }}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Typography color=\"primary\" variant=\"button\">\r\n            {timeFormat}\r\n          </Typography>\r\n        </Button>\r\n        {currentViewName === \"Custom\" && (\r\n          <Button\r\n            style={{\r\n              position: \"relative\",\r\n              zIndex: 10,\r\n              backgroundColor: \"#fff\",\r\n              height: 40,\r\n              marginRight: 30,\r\n            }}\r\n            onClick={() => setOpenEnd(true)}\r\n          >\r\n            <Typography color=\"primary\" variant=\"button\">\r\n              {timeFormatEnd}\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        <MuiPickersUtilsProvider\r\n          locale={isRTL ? arLocale : enLocale}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <DatePicker\r\n            autoOk\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"dense\"\r\n            id=\"date-picker-inline\"\r\n            value={currentDate}\r\n            onChange={currentDateChange}\r\n            open={open}\r\n            // disableToolbar\r\n            onClose={() => setOpen(false)}\r\n            rightArrowIcon={\r\n              isRTL ? (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              )\r\n            }\r\n            leftArrowIcon={\r\n              isRTL ? (\r\n                <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n              ) : (\r\n                <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n              )\r\n            }\r\n            style={{\r\n              direction: \"rtl\",\r\n              position: \"relative\",\r\n              left: isRTL\r\n                ? currentViewName === \"Custom\"\r\n                  ? 150\r\n                  : 60\r\n                : undefined,\r\n              right: isRTL\r\n                ? undefined\r\n                : currentViewName === \"Custom\"\r\n                ? 150\r\n                : 60,\r\n              bottom: 20,\r\n              zIndex: -20,\r\n              marginTop: 0,\r\n              height: 0,\r\n              padding: 0,\r\n              margin: 0,\r\n              width: 0,\r\n            }}\r\n          />\r\n          {currentViewName === \"Custom\" && (\r\n            <DatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-inline\"\r\n              value={endDate}\r\n              onChange={endDateChange}\r\n              open={openEnd}\r\n              onClose={() => setOpenEnd(false)}\r\n              minDate={currentDate}\r\n              rightArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                )\r\n              }\r\n              leftArrowIcon={\r\n                isRTL ? (\r\n                  <ArrowForwardIosOutlinedIcon></ArrowForwardIosOutlinedIcon>\r\n                ) : (\r\n                  <ArrowBackIosOutlinedIcon></ArrowBackIosOutlinedIcon>\r\n                )\r\n              }\r\n              style={{\r\n                direction: \"rtl\",\r\n                position: \"relative\",\r\n                left: isRTL ? 60 : undefined,\r\n                right: isRTL ? undefined : 60,\r\n                bottom: 20,\r\n                zIndex: -20,\r\n                marginTop: 0,\r\n                height: 0,\r\n                padding: 0,\r\n                margin: 0,\r\n                width: 0,\r\n              }}\r\n            />\r\n          )}\r\n        </MuiPickersUtilsProvider>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { SalesReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.taskId,\r\n    col.customer,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n      itemType,\r\n    },\r\n    dispatch,\r\n  } = useContext(SalesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  const setsetItemTypeDispatch = (value: any) => {\r\n    dispatch({ type: \"setItemType\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 13,\r\n      itemType,\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services} // items\r\n              itemType={itemType}\r\n              setItemType={setsetItemTypeDispatch}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { PopupInvoice } from \"../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { getColumns } from \"../common/columns\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport { TableComponent } from \"../pages/reports/SalesReport\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function InvoicesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  employees,\r\n  departments,\r\n  company,\r\n  servicesproducts,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = { [name]: id };\r\n\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={amountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"total\", \"discount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n          <PopupInvoice\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            tasks={tasks}\r\n          ></PopupInvoice>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getAccounts,\r\n  createAccount,\r\n  updateAccount,\r\n  deleteAccount,\r\n} from \"../graphql\";\r\n\r\nexport default () => {\r\n  const [getAccs, accData]: any = useLazyQuery(getAccounts);\r\n\r\n  const [addAccount] = useMutation(createAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [editAccount] = useMutation(updateAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n  const [removeAccount] = useMutation(deleteAccount, {\r\n    refetchQueries: [{ query: getAccounts }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAccs();\r\n  }, [getAccs]);\r\n\r\n  const accounts = accData?.data?.[\"getAccounts\"]?.data || [];\r\n  const filterd =\r\n    accounts?.length > 0\r\n      ? accounts.filter((acc: any) =>\r\n          [1, 2, 3, 7, 8, 13, 14, 15].includes(acc.parentcode),\r\n        )\r\n      : [];\r\n  filterd.sort((a: any, b: any) => a.code - b.code);\r\n  const refreshAccount = () => accData?.refetch();\r\n\r\n  return {\r\n    accounts,\r\n    filterd,\r\n    refreshAccount,\r\n    addAccount,\r\n    editAccount,\r\n    removeAccount,\r\n  };\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReceipts(\r\n    $start: Date\r\n    $end: Date\r\n    $search: String\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getReceipts(\r\n      start: $start\r\n      end: $end\r\n      search: $search\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        debitAcc\r\n        debitAccName\r\n        debitAccNameAr\r\n        creditAcc\r\n        creditAccName\r\n        creditAccNameAr\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getInvoicesList(\r\n    $taskId: Int\r\n    $customerId: String\r\n    $departmentId: String\r\n    $employeeId: String\r\n  ) {\r\n    getInvoicesList(\r\n      taskId: $taskId\r\n      customerId: $customerId\r\n      departmentId: $departmentId\r\n      employeeId: $employeeId\r\n    ) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        opType\r\n        time\r\n        title\r\n        desc\r\n        taskId\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n        supplierPhone\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n        eventNo\r\n\r\n        costAmount\r\n        total\r\n        discount\r\n        amount\r\n        profit\r\n\r\n        debitAcc\r\n        creditAcc\r\n\r\n        paymentType\r\n\r\n        inhand\r\n        change\r\n\r\n        amountPaid\r\n        isPaid\r\n        isCash\r\n        opId\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getInvoicesList from \"../graphql/query/getInvoicesList\";\r\nconst PopupReceipt = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n\r\n  const [invoices, setInvoices] = useState<any>([]);\r\n  const [invoicevalue, setInvoicevalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  const [loadInvoices, invoicesData]: any = useLazyQuery(getInvoicesList, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  useEffect(() => {\r\n    if (custvalue) {\r\n      const variables = { customerId: custvalue._id };\r\n      loadInvoices({ variables });\r\n    }\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.customerId) {\r\n          const dept = customers.filter(\r\n            (dep: any) => dep._id === value?.customerId\r\n          )?.[0];\r\n          setCustvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [custvalue, open]);\r\n\r\n  useEffect(() => {\r\n    if (invoicesData?.data?.getInvoicesList?.data) {\r\n      const { data } = invoicesData.data.getInvoicesList;\r\n      if (data?.length > 0) {\r\n        const ndata = data.map((d: any) => {\r\n          const title = `${d.docNo} - ${d.amount}QR`;\r\n          return {\r\n            ...d,\r\n            name: title,\r\n            nameAr: title,\r\n          };\r\n        });\r\n        setInvoices(ndata);\r\n        if (row.refNo) {\r\n          const inv = ndata.filter((ts: any) => ts.docNo === row.refNo)?.[0];\r\n          setInvoicevalue(inv);\r\n        }\r\n      }\r\n    }\r\n  }, [invoicesData]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n          acc.branch === \"branch1\"\r\n      );\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filteredcredit);\r\n      setDebitAcc(filteredcredit?.[0]);\r\n      setCreditAcc(filtereddebits?.[0]);\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc || !custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = custvalue\r\n      ? {\r\n          customerId: custvalue._id,\r\n          customerName: custvalue.name,\r\n          customerNameAr: custvalue.nameAr,\r\n          customerPhone: custvalue.color,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const department = invoicevalue\r\n      ? {\r\n          departmentId: invoicevalue.departmentId,\r\n          departmentName: invoicevalue.departmentName,\r\n          departmentNameAr: invoicevalue.departmentNameAr,\r\n          departmentColor: invoicevalue.departmentColor,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = invoicevalue\r\n      ? {\r\n          employeeId: invoicevalue.employeeId,\r\n          employeeName: invoicevalue.employeeName,\r\n          employeeNameAr: invoicevalue.employeeNameAr,\r\n          employeeColor: invoicevalue.employeeColor,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.customerReceipt,\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      taskId: invoicevalue ? invoicevalue.taskId : undefined,\r\n      refNo: invoicevalue ? invoicevalue.docNo : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    console.log(variables);\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setInvoices([]);\r\n    setCustvalue(null);\r\n    setInvoicevalue(null);\r\n    setCustError(false);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.receipts}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"customer\"\r\n                title={words.customer}\r\n                words={words}\r\n                options={customers}\r\n                value={custvalue}\r\n                setSelectValue={setCustvalue}\r\n                setSelectError={setCustError}\r\n                selectError={custError}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n                disabled={name === \"customerId\"}\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب القبض\" : \"Receipt Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"invoice\"\r\n                title={isRTL ? \"الفواتير\" : \"Invoices\"}\r\n                words={words}\r\n                options={invoices}\r\n                value={invoicevalue}\r\n                setSelectValue={setInvoicevalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                disabled={!custvalue}\r\n                fullWidth\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupReceipt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\n\r\nimport getReceipts from \"../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../pubups/PopupReceipt\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ReceiptCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            customerAccountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addFinance}\r\n          editAction={editFinance}\r\n        >\r\n          <PopupReceipt name={name} value={value} tasks={tasks}></PopupReceipt>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, yup, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nconst PopupExpenses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n  tasks,\r\n  name,\r\n  value,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n\r\n  const [taskvalue, setTaskvalue] = useState<any>(\r\n    name === \"taskId\" ? value : null\r\n  );\r\n\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId && name !== \"employeeId\") {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId && name !== \"departmentId\") {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (name === \"taskId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (value?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === value?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const taskId = row.taskId;\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n    } else {\r\n      const filtereddebits = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.EXPENCES && acc.branch === \"branch1\"\r\n      );\r\n      setDebaccounts(filtereddebits);\r\n      const filteredcredit = accounts.filter(\r\n        (acc: any) =>\r\n          acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n      );\r\n      setCridaccounts(filteredcredit);\r\n      setCreditAcc(filteredcredit?.[0]);\r\n      setDebitAcc(filtereddebits?.[3]);\r\n    }\r\n  }, [row, open]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const customer = taskvalue\r\n      ? {\r\n          customerId: taskvalue.customerId,\r\n          customerName: taskvalue.customerName,\r\n          customerNameAr: taskvalue.customerNameAr,\r\n          customerPhone: taskvalue.customerPhone,\r\n        }\r\n      : {\r\n          customerId: undefined,\r\n          customerName: undefined,\r\n          customerNameAr: undefined,\r\n          customerPhone: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer,\r\n      department,\r\n      employee,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setTaskvalue(null);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.expenses}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={9}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={isRTL ? \"حساب المصروف\" : \"Expenses Acc\"}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={isRTL ? \"حساب الدفع\" : \"Payment Acc\"}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidtth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                width={203}\r\n              />\r\n              <AutoFieldLocal\r\n                name=\"task\"\r\n                title={words.task}\r\n                words={words}\r\n                options={tasks}\r\n                value={taskvalue}\r\n                setSelectValue={setTaskvalue}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullWidth\r\n                disabled={name === \"taskId\"}\r\n              ></AutoFieldLocal>\r\n\r\n              <RadioGroup\r\n                aria-label=\"Views\"\r\n                name=\"views\"\r\n                row\r\n                value={resType}\r\n                onChange={(e: any) => {\r\n                  setResType(Number(e.target.value));\r\n                  setEmplvalue(null);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={1}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اداري\" : \"Managment\"}\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value={2}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                />\r\n                <FormControlLabel\r\n                  value={3}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                />\r\n              </RadioGroup>\r\n              <AutoFieldLocal\r\n                name=\"employee\"\r\n                title={resType === 3 ? words.resourses : words.employee}\r\n                disabled={!resType || name === \"employeeId\"}\r\n                words={words}\r\n                options={emplslist}\r\n                value={emplvalue}\r\n                setSelectValue={setEmplvalue}\r\n                setSelectError={setEmplError}\r\n                selectError={emplError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n              ></AutoFieldLocal>\r\n              <AutoFieldLocal\r\n                name=\"department\"\r\n                title={words.department}\r\n                words={words}\r\n                options={departments}\r\n                value={departvalue}\r\n                setSelectValue={setDepartvalue}\r\n                setSelectError={setDepartError}\r\n                selectError={departError}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                mb={20}\r\n                disabled={name === \"departmentId\"}\r\n              ></AutoFieldLocal>\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupExpenses;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \".\";\r\nimport { getRowId } from \"../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"./colorFormat\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport PopupExpenses from \"../pubups/PopupExpenses\";\r\nimport useTasks from \"../hooks/useTasks\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\n\r\nexport default function ExpensesCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  name,\r\n  id,\r\n  value,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          [name]: id,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"time\"]}\r\n          formatterComponent={timeFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"docNo\", \"refNo\"]}\r\n          formatterComponent={samllFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"creditAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"taskId\"]}\r\n          formatterComponent={(props: any) =>\r\n            taskIdFormatter({ ...props, tasks })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"debitAcc\"]}\r\n          formatterComponent={(props) =>\r\n            accountFormatter(props, accounts, isRTL)\r\n          }\r\n        ></DataTypeProvider>\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addExpenses}\r\n          editAction={editExpenses}\r\n        >\r\n          <PopupExpenses\r\n            name={name}\r\n            value={value}\r\n            tasks={tasks}\r\n          ></PopupExpenses>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {loading && <Loading isRTL={isRTL} />}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  getDateDayWeek,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAddMultiEvents from \"./PopupAddMultiEvents\";\r\nimport { getEventsList } from \"../common/helpers\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setEnd,\r\n  addEventsToList,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  theme,\r\n  department,\r\n  customer,\r\n  employee,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [rrule, setRrule] = useState<any>(null);\r\n\r\n  const [openMulti, setOpenMulti] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const start = new Date();\r\n    const end = new Date();\r\n    start.setMinutes(0);\r\n    end.setHours(end.getHours() + 1);\r\n    end.setMinutes(0);\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    setCustvalue(customer);\r\n    setDepartvalue(department);\r\n    setEmplvalue(employee);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n  useEffect(() => {\r\n    if (rrule?.all && rrule?.all?.length > 0) {\r\n      setEnd(rrule.all[rrule.all.length - 1]);\r\n    }\r\n  }, [rrule]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setRrule(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setSaving(false);\r\n    setTasktitle(null);\r\n  };\r\n  const onSubmit = async () => {\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const event = {\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      user: user._id,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const eventlist = getEventsList({ event, rrule, actionslist, isRTL });\r\n    addEventsToList(eventlist);\r\n    setSaving(false);\r\n    onCloseForm();\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n      saving={saving}\r\n      bgcolor={colors.blue[500]}\r\n      savetitle={isRTL ? \"متابعة\" : \"Proceed\"}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (em: any) => em.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 150, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}></Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#f4f4f4\",\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <ItemsTable\r\n                  height={200}\r\n                  rows={itemsList}\r\n                  editItem={editItemInList}\r\n                  removeItem={removeItemFromList}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  user={user}\r\n                ></ItemsTable>\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  {words.total} : {moneyFormat(totals.amount)}\r\n                </Typography>\r\n                <Box style={{ marginTop: 20 }}>\r\n                  <AutoFieldLocal\r\n                    name=\"status\"\r\n                    title={words.status}\r\n                    words={words}\r\n                    options={eventStatus}\r\n                    value={status}\r\n                    setSelectValue={setStatus}\r\n                    noPlus\r\n                    isRTL={isRTL}\r\n                    width={200}\r\n                  ></AutoFieldLocal>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setOpenMulti(true)}\r\n                >\r\n                  تكرار\r\n                </Button>\r\n                <Button\r\n                  style={{ minWidth: 100, marginTop: 5 }}\r\n                  variant=\"outlined\"\r\n                  onClick={() => setRrule(null)}\r\n                >\r\n                  حذف التكرار\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                {rrule?.all && (\r\n                  <Paper\r\n                    style={{\r\n                      maxHeight: 150,\r\n                      overflow: \"auto\",\r\n                      minHeight: 150,\r\n                    }}\r\n                  >\r\n                    <Box style={{ flexDirection: \"row\" }}>\r\n                      {rrule?.all?.map((al: any, index: any) => {\r\n                        return (\r\n                          <Box\r\n                            display=\"flex\"\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\",\r\n                              backgroundColor: \"#eee\",\r\n                              margin: 4,\r\n                              padding: 4,\r\n                            }}\r\n                          >\r\n                            <Typography>{getDateDayWeek(al, isRTL)}</Typography>\r\n                            <Typography variant=\"caption\">\r\n                              {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        );\r\n                      })}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <PopupAddMultiEvents\r\n              start={startDate}\r\n              open={openMulti}\r\n              onClose={() => setOpenMulti(false)}\r\n              onSubmit={setRrule}\r\n              theme={theme}\r\n              isRTL={isRTL}\r\n              words={words}\r\n            ></PopupAddMultiEvents>\r\n            <PopupAction\r\n              open={openAction}\r\n              onClose={() => setOpenAction(false)}\r\n              row={selected}\r\n              isNew={selected ? false : true}\r\n              addAction={addActionToList}\r\n              editAction={editActionInList}\r\n              theme={theme}\r\n              event={{ ...row, startDate, endDate }}\r\n            ></PopupAction>\r\n            <PopupCustomer\r\n              newtext={newtext}\r\n              open={openCust}\r\n              onClose={onCloseCustomer}\r\n              isNew={true}\r\n              setNewValue={onNewFieldChange}\r\n              row={null}\r\n              addAction={addCustomer}\r\n              editAction={editCustomer}\r\n            ></PopupCustomer>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport {\r\n  DataTypeProvider,\r\n  EditingState,\r\n  IntegratedSorting,\r\n  SortingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  departmentFormatter,\r\n  employeeFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n} from \"./colorFormat\";\r\n\r\nimport { Command } from \"./Command\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function EventsTable({\r\n  rows,\r\n  removeEventFromList,\r\n  isRTL,\r\n  words,\r\n}: any) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 1, ref: \"title\", name: \"title\", title: words.title },\r\n    col.startDate,\r\n    col.fromto,\r\n    {\r\n      id: 4,\r\n      ref: \"department\",\r\n      name: \"departmentname\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      id: 5,\r\n      ref: \"employee\",\r\n      name: \"employeename\",\r\n      title: words.employee,\r\n    },\r\n\r\n    col.status,\r\n    col.amount,\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeEventFromList(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 500,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 500,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <IntegratedSorting />\r\n          <VirtualTable\r\n            height={500}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"startDate\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentname\"]}\r\n            formatterComponent={(props: any) =>\r\n              departmentFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeename\"]}\r\n            formatterComponent={(props: any) =>\r\n              employeeFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <TableEditColumn\r\n            showDeleteCommand={rows && rows.length > 1}\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 70,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box, Button, colors, Typography } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\nimport { compressEvents } from \"../common/time\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport EventsTable from \"../Shared/EventsTable\";\r\nimport _ from \"lodash\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTask = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n  refresh,\r\n  startrange,\r\n  endrange,\r\n  value = null,\r\n  name = null,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n  const [start, setStart]: any = useState(null);\r\n  const [end, setEnd]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(\r\n    name === \"departmentId\" ? value : null\r\n  );\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(\r\n    name === \"employeeId\" ? value : null\r\n  );\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(\r\n    name === \"customerId\" ? value : null\r\n  );\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const { register, handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const addEventsToList = (events: any) => {\r\n    const newArray = [...evList, ...events];\r\n    const sorted = _.sortBy(newArray, \"startDate\");\r\n    const listwithindex = indexTheList(sorted);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  const removeEventFromList = (index: any) => {\r\n    const newList = [...evList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setEvList(listwithindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue && name !== \"departmentId\") {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setDate(end.getDate() + 7);\r\n      end.setHours(23, 59, 59, 999);\r\n      setStart(start);\r\n      setEnd(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 1)?.[0]);\r\n      setEvList([]);\r\n      if (name === \"employeeId\") {\r\n        if (value?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === value?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [open]);\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n\r\n      setStart(row?.start);\r\n      setEnd(row?.end);\r\n      setTasktitle(row?.title);\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const resetAllForms = () => {\r\n    setStart(null);\r\n    setEnd(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTasktitle(null);\r\n    setSaving(false);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (start > end) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!tasktitle) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة اسم للمهمة\" : \"Please add Task title\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!custvalue) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة عميل للفاتورة\" : \"Please add Customer\"\r\n      );\r\n      return;\r\n    }\r\n    if (isNew && (!evList || evList.length === 0)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يرجى اضافة موعد\" : \"Please add Appointment\"\r\n      );\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    const events =\r\n      evList && evList.length > 0 ? compressEvents(evList) : undefined;\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle ? tasktitle : custvalue?.name,\r\n      start,\r\n      end,\r\n      amount: total,\r\n      status: status ? status.id : 1,\r\n      tasktype: 2, // 1: single event, 2: multi events, 3: no events - only items and time\r\n      events,\r\n      evQty: evList ? evList.length : undefined,\r\n      evDone: isNew ? 0 : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      setTimeout(() => {\r\n        refresh();\r\n        onCloseForm();\r\n      }, 1000);\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.start ? new Date(row?.start) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"مهمة جديدة\"\r\n      : \"تعديل مهمة\"\r\n    : isNew\r\n    ? \"New Task\"\r\n    : \"Edit Task\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      saving={saving}\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <TextFieldLocal\r\n              required\r\n              autoFocus={true}\r\n              name=\"tasktitle\"\r\n              label={words.title}\r\n              value={tasktitle}\r\n              onChange={(e: any) => setTasktitle(e.target.value)}\r\n              row={row}\r\n              fullWidth\r\n              mb={0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"customer\"\r\n              title={words.customer}\r\n              words={words}\r\n              options={customers}\r\n              value={custvalue}\r\n              setSelectValue={setCustvalue}\r\n              setSelectError={setCustError}\r\n              selectError={custError}\r\n              refernce={custRef}\r\n              register={register}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              showphone\r\n              disabled={name === \"customerId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.start}\r\n              value={start}\r\n              onChange={(d: any) => setStart(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"employee\"\r\n              title={words.employee}\r\n              words={words}\r\n              options={employees.filter((em: any) => em.resType === 1)}\r\n              value={emplvalue}\r\n              setSelectValue={setEmplvalue}\r\n              setSelectError={setEmplError}\r\n              selectError={emplError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              day={day}\r\n              disabled={name === \"employeeId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 1)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepartError}\r\n              selectError={departError}\r\n              refernce={departRef}\r\n              register={register}\r\n              noPlus\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              disabled={name === \"departmentId\"}\r\n            ></AutoFieldLocal>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={2}>\r\n            <CalenderLocal\r\n              isRTL={isRTL}\r\n              label={words.end}\r\n              value={end}\r\n              onChange={(d: any) => setEnd(d)}\r\n              format=\"dd/MM/yyyy - hh:mm\"\r\n              time\r\n              mb={0}\r\n            ></CalenderLocal>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={10}>\r\n            {isNew && (\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#F3F3F3\",\r\n                  marginTop: 15,\r\n                  borderRadius: 10,\r\n                }}\r\n              >\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\",\r\n                    marginInlineStart: 10,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => setOpenEvent(true)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {isRTL ? \"اضافة مواعيد\" : \"Add Appointments\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <EventsTable\r\n                    isTaskNew={isNew}\r\n                    rows={evList}\r\n                    removeEventFromList={removeEventFromList}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    taskId={row.id}\r\n                    isNew={isNew}\r\n                    employee={emplvalue}\r\n                    department={departvalue}\r\n                    customer={custvalue}\r\n                    company={company}\r\n                    start={startrange}\r\n                    end={endrange}\r\n                  ></EventsTable>\r\n                  <Typography style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                    {words.total} : {moneyFormat(total)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <PopupTaskAppointment\r\n          open={openEvent}\r\n          onClose={() => setOpenEvent(false)}\r\n          row={null}\r\n          isNew={true}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          employee={emplvalue}\r\n          department={departvalue}\r\n          customer={custvalue}\r\n          servicesproducts={servicesproducts}\r\n          theme={theme}\r\n          setEnd={setEnd}\r\n          addEventsToList={addEventsToList}\r\n        ></PopupTaskAppointment>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTask;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation createTask(\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    createTask(\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation updateTask(\r\n    $id: Int\r\n    $branch: String\r\n    $title: String\r\n    $name: String\r\n    $type: String\r\n    $start: Date\r\n    $end: Date\r\n    $progress: Float\r\n    $tasktype: Int\r\n    $status: Int\r\n    $evQty: Int\r\n    $evDone: Int\r\n    $events: String\r\n    $items: String\r\n    $amount: Float\r\n    $priority: Int\r\n    $customer: CustomerInput\r\n    $department: DepartmentInput\r\n    $employee: EmployeeInput\r\n  ) {\r\n    updateTask(\r\n      id: $id\r\n      branch: $branch\r\n      title: $title\r\n      name: $name\r\n      type: $type\r\n      start: $start\r\n      end: $end\r\n      progress: $progress\r\n      tasktype: $tasktype\r\n      status: $status\r\n      evQty: $evQty\r\n      evDone: $evDone\r\n      events: $events\r\n      items: $items\r\n      amount: $amount\r\n      priority: $priority\r\n      customer: $customer\r\n      department: $department\r\n      employee: $employee\r\n    ) {\r\n      _id\r\n      branch\r\n      autoNo\r\n      docNo\r\n      title\r\n      desc\r\n\r\n      id\r\n      name\r\n      type\r\n      start\r\n      end\r\n      progress\r\n      isDisabled\r\n      tasktype\r\n\r\n      priority\r\n      status\r\n      amount\r\n      evQty\r\n      evDone\r\n\r\n      customerId\r\n      customerName\r\n      customerNameAr\r\n      customerPhone\r\n\r\n      departmentId\r\n      departmentName\r\n      departmentNameAr\r\n      departmentColor\r\n\r\n      employeeId\r\n      employeeName\r\n      employeeNameAr\r\n      employeeColor\r\n      employeePhone\r\n\r\n      userId\r\n      note\r\n\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  mutation deleteTaskById($_id: String) {\r\n    deleteTaskById(_id: $_id) {\r\n      ok\r\n      message\r\n      error\r\n    }\r\n  }\r\n`;\r\n","import { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { colors, fade, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\nconst stylesBlue = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.blue[500], 0.13),\r\n    },\r\n  },\r\n});\r\nconst stylesGreen = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.green[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesRed = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.red[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesOrange = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.orange[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesPurple = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.deepPurple[400], 0.1),\r\n    },\r\n  },\r\n});\r\nconst stylesGrey = () => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(colors.grey[400], 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponentBlue = withStyles(stylesBlue, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGreen = withStyles(stylesGreen, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentRed = withStyles(stylesRed, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentOrange = withStyles(stylesOrange, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentPurple = withStyles(stylesPurple, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\nexport const TableComponentGrey = withStyles(stylesGrey, {\r\n  name: \"TableComponent\",\r\n})(TableComponentBase);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { invoiceClasses } from \"../themes\";\r\nimport { useLastNos } from \"../hooks\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\n\r\nimport { Box, colors, TextField, Typography } from \"@material-ui/core\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport { PriceTotal } from \"../Shared/TotalPrice\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  createInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n} from \"../graphql\";\r\nimport { accountCode } from \"../constants/kaid\";\r\nimport PaymentSelect from \"../pages/options/PaymentSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport { InvoicePrintA5 } from \"../common/InvoicePrintA5\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskInvoice = ({\r\n  open,\r\n  onClose,\r\n  task,\r\n  customers,\r\n  services,\r\n  employees,\r\n  departments,\r\n  company,\r\n  isNew = true,\r\n  theme,\r\n  items,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [invNo, setInvNo] = useState<any>(\"\");\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [accounts, setAccounts] = useState<any>([]);\r\n  const [ptype, setPtype] = useState<any>(\"cash\");\r\n\r\n  const [discount, setDiscount] = useState(0);\r\n  const [totals, setTotals] = useState<any>({});\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [custError, setCustError] = useState<any>(false);\r\n  const custRef: any = React.useRef();\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [isCash, setIsCash] = useState(false);\r\n\r\n  const { handleSubmit, reset } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: new Date().setHours(0, 0, 0, 0),\r\n          end: new Date().setHours(23, 59, 59, 999),\r\n        },\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n\r\n  const { lastNos, freshlastNos } = useLastNos();\r\n\r\n  const resetAllForms = () => {\r\n    setItemsList([]);\r\n    setDiscount(0);\r\n    setTotals({});\r\n    setCustvalue(null);\r\n    setInvNo(\"\");\r\n    setAccounts([]);\r\n    setPtype(\"cash\");\r\n    setSelectedDate(new Date());\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n  };\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNew && lastNos) {\r\n      setInvNo(lastNos?.salesInvoice ? Number(lastNos?.salesInvoice) + 1 : 1);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList, discount, ptype, isCash]);\r\n\r\n  useEffect(() => {\r\n    if (task && task.start) {\r\n      const _id = task.customerId;\r\n      const cust = customers.filter((it: any) => it._id === _id)[0];\r\n      setCustvalue(cust);\r\n      const depId = task.departmentId;\r\n      const empId = task.employeeId;\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n    }\r\n    if (items) {\r\n      setItemsList(items);\r\n    }\r\n  }, [task, services, customers, items]);\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum - discount;\r\n    const profit = sum - discount - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n    const accs = [\r\n      {\r\n        debitAcc: accountCode.accounts_receivable,\r\n        creditAcc: accountCode.sales_income,\r\n        amount: sum,\r\n        type: operationTypes.salesInvoice,\r\n      },\r\n      {\r\n        debitAcc: accountCode.sales_income,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: discount,\r\n        type: operationTypes.customerDiscount,\r\n      },\r\n      {\r\n        debitAcc:\r\n          ptype === \"cash\" ? accountCode.cash_on_hand : accountCode.card,\r\n        creditAcc: accountCode.accounts_receivable,\r\n        amount: isCash ? sum - discount : 0,\r\n        type: operationTypes.customerReceipt,\r\n      },\r\n    ];\r\n    setAccounts(accs);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount < 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسم لا يمكن ان يكون سلبي\" : \"Discount can't be minus\"\r\n      );\r\n      return;\r\n    }\r\n    if (discount > totals?.total) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? \"الحسم لا يمكن ان يكون اكبر من قيمة الفاتورة\"\r\n          : \"Discount can't be biger than Total\"\r\n      );\r\n      return;\r\n    }\r\n    if (!custvalue) {\r\n      setCustError(true);\r\n      custRef.current.focus();\r\n      return;\r\n    }\r\n    if (isNew && Number(invNo) <= Number(lastNos.salesInvoice)) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `Invoice no must be more than ${lastNos.salesInvoice}`\r\n          : `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `رقم الفاتورة يجب ان يكون أكبب من ${lastNos.salesInvoice}`\r\n          : `Invoice no must be more than ${lastNos.salesInvoice}`\r\n      );\r\n      return;\r\n    }\r\n    const { amount, costAmount, profit, total } = totals;\r\n\r\n    const variables: any = {\r\n      docNo: invNo ? invNo.toString() : undefined,\r\n      time: selectedDate,\r\n      customer: {\r\n        customerId: custvalue._id,\r\n        customerName: custvalue.name,\r\n        customerNameAr: custvalue.nameAr,\r\n        customerPhone: custvalue.phone,\r\n      },\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n      items: JSON.stringify(itemsList),\r\n      costAmount,\r\n      total,\r\n      discount,\r\n      amount,\r\n      profit,\r\n      isPaid: isCash,\r\n      isCash,\r\n      amountPaid: isCash ? amount : 0,\r\n      accounts,\r\n      paymentType: ptype,\r\n      userId: user._id,\r\n      taskId: task.id,\r\n    };\r\n\r\n    apply(addInvoice, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      // handlePrint();\r\n      freshlastNos();\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      reset();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const componentRef: any = useRef();\r\n  const handleReactPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    documentTitle: `Invoice #${invNo}`,\r\n    removeAfterPrint: true,\r\n  });\r\n  const printData = {\r\n    invoiceNo: invNo,\r\n    time: selectedDate,\r\n    customerName: custvalue?.name,\r\n    customerPhone: custvalue?.phone,\r\n    total: totals.total,\r\n    amount: totals.amount,\r\n    items: itemsList,\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"فاتورة جديدة\"\r\n      : \"تعديل فاتورة\"\r\n    : isNew\r\n    ? \"New Invoice\"\r\n    : \"Edit Invoice\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      print={handleReactPrint}\r\n      maxWidth=\"md\"\r\n      mt={0}\r\n      mb={50}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={4}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <PaymentSelect\r\n            words={words}\r\n            ptype={ptype}\r\n            isCash={isCash}\r\n            setIsCash={setIsCash}\r\n            setPtype={setPtype}\r\n          ></PaymentSelect>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <AutoFieldLocal\r\n            name=\"customer\"\r\n            title={words.customer}\r\n            words={words}\r\n            options={customers}\r\n            value={custvalue}\r\n            setSelectValue={setCustvalue}\r\n            setSelectError={setCustError}\r\n            selectError={custError}\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            // openAdd={openCustomer}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={3}></Grid>\r\n        <Grid item xs={2}>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: isRTL ? \"row-reverse\" : \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              marginLeft: isRTL ? undefined : 20,\r\n              marginRight: isRTL ? 20 : undefined,\r\n            }}\r\n          >\r\n            {isNew && (\r\n              <Typography style={{ color: \"#777\" }}>{words.no}</Typography>\r\n            )}\r\n            <TextField\r\n              name=\"invNo\"\r\n              disabled={!isNew}\r\n              value={invNo}\r\n              onChange={(e: any) => setInvNo(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: isNew ? 70 : 100, marginLeft: 20 }}\r\n              margin=\"dense\"\r\n              // type=\"number\"\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: 14,\r\n                  height: 13,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"employee\"\r\n            title={words.employee}\r\n            words={words}\r\n            options={employees.filter((em: any) => em.resType === 1)}\r\n            value={emplvalue}\r\n            setSelectValue={setEmplvalue}\r\n            setSelectError={setEmplError}\r\n            selectError={emplError}\r\n            refernce={emplRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            fullWidth\r\n            day={null}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AutoFieldLocal\r\n            name=\"department\"\r\n            title={words.department}\r\n            words={words}\r\n            options={departments.filter((em: any) => em.depType === 1)}\r\n            value={departvalue}\r\n            setSelectValue={setDepartvalue}\r\n            setSelectError={setDepartError}\r\n            selectError={departError}\r\n            refernce={departRef}\r\n            noPlus\r\n            isRTL={isRTL}\r\n            width={420}\r\n          ></AutoFieldLocal>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 10,\r\n              marginTop: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Box display=\"flex\">\r\n              <ServiceItemForm\r\n                options={services}\r\n                addItem={addItemToList}\r\n                words={words}\r\n                employees={employees}\r\n                departments={departments}\r\n                classes={classes}\r\n                user={user}\r\n                isRTL={isRTL}\r\n              ></ServiceItemForm>\r\n            </Box>\r\n\r\n            <Box style={{ marginBottom: 20 }}>\r\n              <ItemsTable\r\n                rows={itemsList}\r\n                editItem={editItemInList}\r\n                removeItem={removeItemFromList}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n              ></ItemsTable>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <TextField\r\n              name=\"discount\"\r\n              label={words.discount}\r\n              value={discount.toString()}\r\n              onChange={(e: any) => setDiscount(Number(e.target.value))}\r\n              variant=\"outlined\"\r\n              style={{ width: 200 }}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              onFocus={(e) => e.target.select()}\r\n            />\r\n\r\n            <PriceTotal\r\n              amount={totals?.amount}\r\n              total={totals?.total}\r\n              discount={discount}\r\n              words={words}\r\n            ></PriceTotal>\r\n          </Box>\r\n          <Box>\r\n            <div style={{ display: \"none\" }}>\r\n              <InvoicePrintA5\r\n                company={company}\r\n                printData={printData}\r\n                ref={componentRef}\r\n              />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskInvoice;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getTaskItems($taskId: Int) {\r\n    getTaskItems(taskId: $taskId) {\r\n      ok\r\n      error\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport PopupTaskAppointment from \"./PopupTaskAppointment\";\r\nimport _ from \"lodash\";\r\nimport PopupTaskInvoice from \"./PopupTaskInvoice\";\r\nimport getTaskItems from \"../graphql/query/getTaskItems\";\r\nimport { taskManamentTabs } from \"../constants/rrule\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 224,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupTaskView = ({\r\n  open,\r\n  onClose,\r\n  item,\r\n  tasks,\r\n  isNew,\r\n  employees,\r\n  departments,\r\n  customers,\r\n  servicesproducts,\r\n  theme,\r\n  isEditor,\r\n  company,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [openEvent, setOpenEvent] = useState<any>(false);\r\n  const [evList, setEvList] = useState<any>([]);\r\n  const [total, setTotal] = useState<any>(null);\r\n  const [row, setRow] = useState(item);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item?.id && tasks && tasks.length > 0) {\r\n      const opened = tasks.filter((ts: any) => ts.id === item.id)?.[0];\r\n      setRow(opened);\r\n    }\r\n  }, [tasks]);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getTaskItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const items = itemsData?.data?.[\"getTaskItems\"]?.data || [];\r\n      if (items && items.length > 0) {\r\n        const ids = items.map((it: any) => it.itemId);\r\n        const servlist = servicesproducts.filter((ser: any) =>\r\n          ids.includes(ser._id)\r\n        );\r\n\r\n        const itemsWqtyprice = items.map((item: any, index: any) => {\r\n          const {\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n          } = item;\r\n          const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n          return {\r\n            ...serv,\r\n            categoryId,\r\n            categoryName,\r\n            categoryNameAr,\r\n            departmentId,\r\n            departmentName,\r\n            departmentNameAr,\r\n            departmentColor,\r\n            employeeId,\r\n            employeeName,\r\n            employeeNameAr,\r\n            employeeColor,\r\n            index,\r\n            itemprice: item.itemPrice,\r\n            itemqty: item.qty,\r\n            itemtotal: item.total,\r\n            // itemtotalcost: item.qty * serv.cost,\r\n          };\r\n        });\r\n        const finalItems = _(itemsWqtyprice)\r\n          .groupBy(\"_id\")\r\n          .map((array, key) => ({\r\n            _id: array[0]._id,\r\n            name: array[0].name,\r\n            nameAr: array[0].nameAr,\r\n            categoryId: array[0].categoryId,\r\n            categoryName: array[0].categoryName,\r\n            categoryNameAr: array[0].categoryNameAr,\r\n            departmentId: array[0].departmentId,\r\n            departmentName: array[0].departmentName,\r\n            departmentNameAr: array[0].departmentNameAr,\r\n            departmentColor: array[0].departmentColor,\r\n            employeeId: array[0].employeeId,\r\n            employeeName: array[0].employeeName,\r\n            employeeNameAr: array[0].employeeNameAr,\r\n            employeeColor: array[0].employeeColor,\r\n            autoNo: array[0].autoNo,\r\n            docNo: array[0].docNo,\r\n            cost: array[0].cost,\r\n            itemType: array[0].itemType,\r\n            index: array[0].index,\r\n            itemprice: array[0].itemprice,\r\n            itemqty: _.sumBy(array, \"itemqty\"),\r\n            itemtotal: _.sumBy(array, \"itemtotal\"),\r\n          }))\r\n          .orderBy(\"index\")\r\n          .value();\r\n        setItemsList(finalItems);\r\n      }\r\n    }\r\n  }, [itemsData, open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [evList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const variables = { taskId: row.id };\r\n      getItems({ variables });\r\n    }\r\n  }, [row]);\r\n\r\n  const getOverallTotal = () => {\r\n    const evssum = _.sumBy(evList, \"amount\");\r\n    setTotal(evssum);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setEvList([]);\r\n    setValue(0);\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const viewtotal = total ? total : amount;\r\n  const title = `${words.task} : ${row?.title}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      alrt={{}}\r\n      mt={10}\r\n      maxWidth={isNew ? \"lg\" : \"xl\"}\r\n      fullWidth\r\n      preventclose\r\n      onlyclose\r\n      bgcolor={colors.deepPurple[500]}\r\n      mb={10}\r\n    >\r\n      <>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={11}>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n              }}\r\n            >\r\n              <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n\r\n              {row && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <TabPanel value={value} index={0}>\r\n                    <EventsCustomer\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      customers={customers}\r\n                      servicesproducts={servicesproducts}\r\n                      isEditor={isEditor}\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      theme={theme}\r\n                      isNew={isNew}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></EventsCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                    <InvoicesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      employees={employees}\r\n                      departments={departments}\r\n                      company={company}\r\n                      servicesproducts={servicesproducts}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></InvoicesCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                    <ReceiptCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ReceiptCustomer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={3}>\r\n                    <ExpensesCustomer\r\n                      isRTL={isRTL}\r\n                      words={words}\r\n                      isEditor={isEditor}\r\n                      theme={theme}\r\n                      name=\"taskId\"\r\n                      value={row}\r\n                      id={row?.id}\r\n                    ></ExpensesCustomer>\r\n                  </TabPanel>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      marginLeft: 20,\r\n                      marginRight: 20,\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(viewtotal)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {progress}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalinvoiced)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                      </Typography>\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.red[500] }}\r\n                      >\r\n                        {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.red[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - totalpaid)}\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                      <Typography style={{ fontSize: 14 }}>\r\n                        {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                        {moneyFormat(toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography\r\n                        style={{ fontSize: 14, color: colors.blue[500] }}\r\n                      >\r\n                        {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                      </Typography>{\" \"}\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 14,\r\n                          color: colors.blue[500],\r\n                        }}\r\n                      >\r\n                        {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          {row && (\r\n            <Grid item xs={1}>\r\n              <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"items\"\r\n                  className={classes.tabs}\r\n                >\r\n                  {taskManamentTabs.map((item: any) => {\r\n                    return (\r\n                      <Tab\r\n                        style={{\r\n                          backgroundColor:\r\n                            value === item.id ? \"#eee\" : undefined,\r\n                        }}\r\n                        label={isRTL ? item.nameAr : item.name}\r\n                        {...a11yProps(item.id)}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Tabs>\r\n              </Box>\r\n              <Box\r\n                style={{\r\n                  backgroundColor: \"#eee\",\r\n                  margin: 7,\r\n                  padding: 8,\r\n                  borderRadius: 5,\r\n                  alignItems: \"flex-start\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    marginTop: 10,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  {row.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.customer}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.customerNameAr : row.customerName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.employee}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.employeeNameAr : row.employeeName}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                >\r\n                  {words.department}\r\n                </Typography>\r\n                <Typography>\r\n                  {isRTL ? row.departmentNameAr : row.departmentName}\r\n                </Typography>\r\n              </Box>\r\n              <Box style={{ padding: 10, marginTop: 20 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenInvoice(true)}\r\n                >\r\n                  {words.newInvoice}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {row && (\r\n          <PopupTaskAppointment\r\n            open={openEvent}\r\n            onClose={() => setOpenEvent(false)}\r\n            row={null}\r\n            isNew={true}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            setEvList={setEvList}\r\n          ></PopupTaskAppointment>\r\n        )}\r\n        {row && (\r\n          <PopupTaskInvoice\r\n            open={openInvoice}\r\n            onClose={() => setOpenInvoice(false)}\r\n            task={row}\r\n            customers={customers}\r\n            services={servicesproducts}\r\n            employees={employees}\r\n            departments={departments}\r\n            company={company}\r\n            theme={theme}\r\n            items={itemsList}\r\n          ></PopupTaskInvoice>\r\n        )}\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupTaskView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  TableColumnVisibility,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \".\";\r\nimport { getLandingChartData } from \"../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"./colorFormat\";\r\nimport { AlertLocal } from \"../components\";\r\nimport { getColumns } from \"../common/columns\";\r\nimport getTasks from \"../graphql/query/getTasks\";\r\nimport PopupTask from \"../pubups/PopupTask\";\r\nimport createTask from \"../graphql/mutation/createTask\";\r\nimport updateTask from \"../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../hooks\";\r\nimport { errorAlert, errorDeleteAlert } from \"./helpers\";\r\nimport { TableComponent } from \"./TableComponent\";\r\nimport PopupTaskView from \"../pubups/PopupTaskView\";\r\nimport useTasks from \"../hooks/useTasks\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function TasksCustomer({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n  value,\r\n  name,\r\n  id,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    col.title,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const { tasks } = useTasks();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: { [name]: id },\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getTasks\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      [name]: id,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [id]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 600,\r\n      }}\r\n    >\r\n      <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <IntegratedSorting />\r\n        <VirtualTable\r\n          height={600}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n          tableComponent={TableComponent}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <TableColumnVisibility\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          defaultHiddenColumnNames={[\r\n            col.department.name,\r\n            col.evQty.name,\r\n            col.toatlExpenses.name,\r\n            col.start.name,\r\n            col.end.name,\r\n          ]}\r\n        />\r\n        <DataTypeProvider\r\n          for={[\"title\"]}\r\n          formatterComponent={(props: any) =>\r\n            nameLinkFormat({ ...props, setItem, setOpenItem })\r\n          }\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"start\", \"end\"]}\r\n          formatterComponent={createdAtFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"due\"]}\r\n          formatterComponent={dueAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n          formatterComponent={currencyFormatterEmpty}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"totalinvoiced\"]}\r\n          formatterComponent={invoiceReceiptFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"income\"]}\r\n          formatterComponent={incomeAmountFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"tasktype\"]}\r\n          formatterComponent={taskNameFormatter}\r\n        ></DataTypeProvider>\r\n        <DataTypeProvider\r\n          for={[\"progress\"]}\r\n          formatterComponent={progressFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <PopupEditing addAction={addTask} editAction={editTask}>\r\n          <PopupTask\r\n            value={value}\r\n            name={name}\r\n            employees={employees}\r\n            departments={departments}\r\n            customers={customers}\r\n            addCustomer={addCustomer}\r\n            editCustomer={editCustomer}\r\n            company={company}\r\n            servicesproducts={servicesproducts}\r\n            theme={theme}\r\n            isEditor={isEditor}\r\n            refresh={refresh}\r\n          ></PopupTask>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n      {item && (\r\n        <PopupTaskView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n          refresh={refresh}\r\n          addAction={addTask}\r\n          editAction={editTask}\r\n        ></PopupTaskView>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupCustomerView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.customer} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"customerId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupCustomerView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupCustomer } from \"../../pubups\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport {\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport {\r\n  createCustomer,\r\n  deleteCustomer,\r\n  getCustomers,\r\n  updateCustomer,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nexport default function Customers(props: any) {\r\n  const { isRTL, words, menuitem, isEditor, theme, company, servicesproducts } =\r\n    props;\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [rows, setRows] = useState([]);\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const col = getColumns({ isRTL, words });\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    { name: \"address\", title: words.address },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getCustomers, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getCustomers,\r\n        variables: { isRTL },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      const tsks = tasksData?.data?.[\"getCustomers\"]?.data || [];\r\n      if (tsks && tsks.length > 0) {\r\n        const opened = tsks.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [tasksData]);\r\n\r\n  useEffect(() => {\r\n    loadTasks({ isRTL });\r\n  }, []);\r\n\r\n  const [addCustomer] = useMutation(createCustomer, refresQuery);\r\n  const [editCustomer] = useMutation(updateCustomer, refresQuery);\r\n  const [removeCustomer] = useMutation(deleteCustomer, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      const res = await removeCustomer({ variables: { _id } });\r\n      if (res?.data?.deleteCustomer?.ok === false) {\r\n        if (res?.data?.deleteCustomer?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.data?.getCustomers?.data) {\r\n      const { data } = tasksData.data.getCustomers;\r\n      setRows(data);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"email\", \"address\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addCustomer}\r\n            editAction={editCustomer}\r\n          >\r\n            <PopupCustomer></PopupCustomer>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupCustomerView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useServices } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupService } from \"../../pubups\";\r\nimport { currencyFormatter } from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport default function Services({ isRTL, words, theme, isEditor }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"price\", title: words.price },\r\n  ]);\r\n\r\n  const { services, addService, editService, removeService } = useServices();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeService({ variables: { _id } });\r\n      if (res?.data?.deleteItem?.ok === false) {\r\n        if (res?.data?.deleteItem?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={services} columns={columns} getRowId={getRowId}>\r\n        <SortingState />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <SearchState />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n\r\n        <DataTypeProvider\r\n          for={[\"price\"]}\r\n          formatterComponent={currencyFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        {isEditor && (\r\n          <TableEditColumn\r\n            showEditCommand\r\n            showDeleteCommand\r\n            showAddCommand\r\n            commandComponent={Command}\r\n          ></TableEditColumn>\r\n        )}\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n        <PopupEditing\r\n          theme={theme}\r\n          addAction={addService}\r\n          editAction={editService}\r\n        >\r\n          <PopupService></PopupService>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupInvoice } from \"../../pubups\";\r\nimport {\r\n  createInvoice,\r\n  deleteInvoice,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getInvoices,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateInvoice,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  amountFormatter,\r\n  currencyFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { SalesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { TableComponent } from \"../reports/SalesReport\";\r\nimport { colors } from \"@material-ui/core\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Invoices({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    col.eventNo,\r\n    col.taskId,\r\n    { name: isRTL ? \"customerNameAr\" : \"customerName\", title: words.customer },\r\n    { name: \"customerPhone\", title: words.phoneNumber },\r\n    { name: \"total\", title: words.total },\r\n    { name: \"discount\", title: words.discount },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(SalesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadInvoices, opData]: any = useLazyQuery(getInvoices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getInvoices,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadInvoices({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addInvoice] = useMutation(createInvoice, refresQuery);\r\n  const [editInvoice] = useMutation(updateInvoice, refresQuery);\r\n  const [removeInvoice] = useMutation(deleteInvoice, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeInvoice({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (opData?.data?.getInvoices?.data) {\r\n      const { data } = opData.data.getInvoices;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [opData]);\r\n\r\n  const refresh = () => {\r\n    opData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      bgcolor={colors.green[500]}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={amountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"total\", \"discount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n          <PopupEditing addAction={addInvoice} editAction={editInvoice}>\r\n            <PopupInvoice\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              tasks={tasks}\r\n            ></PopupInvoice>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  DataTypeProvider,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { PopupEditing, Command, errorAlert, Loading } from \"../../Shared\";\r\nimport { PopupAccount } from \"../../pubups\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport { useBranches } from \"../../hooks\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAccountAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Accounts({ isRTL, accounts }: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: isRTL ? \"اسم الحساب\" : \"Name\" },\r\n    { name: \"code\", title: isRTL ? \"رقم الحساب\" : \"Code\" },\r\n    {\r\n      name: isRTL ? \"parentAr\" : \"parent\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n    {\r\n      name: \"parentcode\",\r\n      title: isRTL ? \"الحساب الرئيسي\" : \"Main Account\",\r\n    },\r\n  ]);\r\n  const { addAccount, editAccount, removeAccount } = useAccounts();\r\n  const { branches } = useBranches();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const account = accounts.filter((acc: any) => acc._id === _id)?.[0];\r\n      if (account && account?.canedit) {\r\n        const res = await removeAccount({ variables: { _id } });\r\n        if (res?.data?.deleteAccount?.ok === false) {\r\n          if (res?.data?.deleteAccount?.error.includes(\"related\")) {\r\n            await errorDeleteAlert(setAlrt, isRTL);\r\n          } else {\r\n            await errorAlert(setAlrt, isRTL);\r\n          }\r\n        }\r\n      } else {\r\n        await errorAccountAlert(setAlrt, isRTL);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const branchFormatter = ({ value }) => {\r\n    const branch = branches.filter((br: any) => br.basename === value)[0];\r\n    const name = isRTL ? \"nameAr\" : \"name\";\r\n    return <div>{branch ? branch[name] : \"\"}</div>;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      {loading && <Loading isRTL={isRTL}></Loading>}\r\n      <Grid rows={accounts} columns={columns} getRowId={getRowId}>\r\n        <SortingState\r\n          defaultSorting={[\r\n            { columnName: \"branch\", direction: \"asc\" },\r\n            { columnName: \"code\", direction: \"asc\" },\r\n          ]}\r\n        />\r\n        <SearchState />\r\n\r\n        <EditingState onCommitChanges={commitChanges} />\r\n\r\n        <IntegratedSorting />\r\n        <IntegratedFiltering />\r\n\r\n        <VirtualTable\r\n          height={window.innerHeight - 133}\r\n          messages={{\r\n            noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n          }}\r\n          estimatedRowHeight={40}\r\n        />\r\n        <TableHeaderRow showSortingControls />\r\n        <DataTypeProvider\r\n          for={[\"branch\"]}\r\n          formatterComponent={branchFormatter}\r\n        ></DataTypeProvider>\r\n\r\n        <TableEditColumn\r\n          showEditCommand\r\n          showDeleteCommand\r\n          showAddCommand\r\n          commandComponent={Command}\r\n        ></TableEditColumn>\r\n        <Toolbar />\r\n        <SearchPanel\r\n          inputComponent={(props: any) => {\r\n            return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n          }}\r\n        />\r\n\r\n        <PopupEditing addAction={addAccount} editAction={editAccount}>\r\n          <PopupAccount accounts={accounts}></PopupAccount>\r\n        </PopupEditing>\r\n      </Grid>\r\n      {alrt.show && (\r\n        <AlertLocal\r\n          isRTL={isRTL}\r\n          type={alrt?.type}\r\n          msg={alrt?.msg}\r\n          top\r\n        ></AlertLocal>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst CashTransfareSelect = ({ ptype, setPtype, setCustvalue, words }) => {\r\n  const onchange = (e: any) => {\r\n    setPtype(e.target.value);\r\n    setCustvalue(null);\r\n  };\r\n  return (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      row\r\n      value={ptype}\r\n      onChange={onchange}\r\n    >\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"deposit\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.depositbank}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partnerdraw\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.drawpartner}\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"partneradd\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.addpartner}\r\n        />\r\n      </Box>\r\n      {/* <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          value=\"customerpay\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={words.customerpay}\r\n        />\r\n      </Box> */}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default CashTransfareSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  yup,\r\n  messageAlert,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport { parents } from \"../constants/kaid\";\r\nimport CashTransfareSelect from \"../pages/options/CashTransfareSelect\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { useCustomers } from \"../hooks\";\r\n\r\nconst PopupFinance = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [ptype, setPtype] = React.useState(\"deposit\");\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(\r\n    yup.depositResolver\r\n  );\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const { accounts } = useAccounts();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const ca = row.creditAcc;\r\n      const da = row.debitAcc;\r\n      const ot = row.opType;\r\n      if (ot === 70) {\r\n        setPtype(\"deposit\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n      }\r\n      if (ot === 71) {\r\n        setPtype(\"partnerdraw\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n      }\r\n      if (ot === 72) {\r\n        setPtype(\"partneradd\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n      if (ot === 14) {\r\n        setPtype(\"customerpay\");\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.ACCOUNTS_RECEIVABLE &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n      }\r\n\r\n      if (ca) {\r\n        const credit = accounts.filter(\r\n          (acc: any) => acc.code === ca && acc.branch === \"branch1\"\r\n        )[0];\r\n        setCreditAcc(credit);\r\n      }\r\n      if (da) {\r\n        const debit = accounts.filter(\r\n          (acc: any) => acc.code === da && acc.branch === \"branch1\"\r\n        )[0];\r\n        setDebitAcc(debit);\r\n      }\r\n      const customerId = row?.customerId;\r\n      if (customerId) {\r\n        const cust = customers.filter((it: any) => it._id === customerId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n    } else {\r\n      if (ptype === \"deposit\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        setCridaccounts(filtereddebits);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n        setDebitAcc(filtereddebits?.[2]);\r\n      }\r\n      if (ptype === \"partnerdraw\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filteredcredit);\r\n        setCreditAcc(filteredcredit?.[0]);\r\n        setDebitAcc(filtereddebits?.[0]);\r\n      }\r\n      if (ptype === \"partneradd\") {\r\n        const filtereddebits = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.OTHER_CURRENT_LIABILITIES &&\r\n            acc.branch === \"branch1\"\r\n        );\r\n        setCridaccounts(filtereddebits);\r\n        const filteredcredit = accounts.filter(\r\n          (acc: any) =>\r\n            acc.parentcode === parents.CASH && acc.branch === \"branch1\"\r\n        );\r\n        setDebaccounts(filteredcredit);\r\n        setDebitAcc(filteredcredit?.[0]);\r\n        setCreditAcc(filtereddebits?.[0]);\r\n      }\r\n    }\r\n  }, [row, ptype, open]);\r\n\r\n  const getActionType = () => {\r\n    if (ptype === \"deposit\") {\r\n      return operationTypes.deposet;\r\n    } else if (ptype === \"partneradd\") {\r\n      return operationTypes.ownerDeposit;\r\n    } else if (ptype === \"partnerdraw\") {\r\n      return operationTypes.ownerDraw;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    const { amount, desc } = data;\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const customer = {\r\n      customerId: custvalue?._id,\r\n      customerName: custvalue?.name,\r\n      customerNameAr: custvalue?.nameAr,\r\n      customerPhone: custvalue?.phone,\r\n    };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: getActionType(),\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      customer: custvalue ? customer : undefined,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setPtype(\"deposit\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.depdraw}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CalenderLocal\r\n                isRTL={isRTL}\r\n                label={words.time}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n              ></CalenderLocal>\r\n\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CashTransfareSelect\r\n                ptype={ptype}\r\n                setPtype={setPtype}\r\n                setCustvalue={setCustvalue}\r\n                words={words}\r\n              ></CashTransfareSelect>\r\n              <Box style={{ marginBottom: 20 }}></Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"creditAcc\"\r\n                title={words.from}\r\n                words={words}\r\n                options={cridaccounts}\r\n                value={creditAcc}\r\n                setSelectValue={setCreditAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <AutoFieldLocal\r\n                name=\"debitAcc\"\r\n                title={words.to}\r\n                words={words}\r\n                options={debaccounts}\r\n                value={debitAcc}\r\n                setSelectValue={setDebitAcc}\r\n                register={register}\r\n                isRTL={isRTL}\r\n                fullwidth\r\n              ></AutoFieldLocal>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ marginBottom: 10 }}></Box>\r\n\r\n              <TextFieldLocal\r\n                required\r\n                name=\"amount\"\r\n                label={words.amount}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextFieldLocal\r\n                name=\"desc\"\r\n                multiline\r\n                rows={4}\r\n                label={words.description}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinance;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport PopupFinance from \"../../pubups/PopupFinance\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Finance({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getFinances?.data) {\r\n      const { data } = financeData.data.getFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinance></PopupFinance>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  fade,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { eventStatus, weekdaysNNo } from \"../constants/datatypes\";\r\n// import { getAppStartEndPeriod } from \"../common/time\";\r\nimport ServiceItemForm from \"../Shared/ServiceItemForm\";\r\nimport ItemsTable from \"../Shared/ItemsTable\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getActions, getOperationItems } from \"../graphql\";\r\nimport { invoiceClasses } from \"../themes/classes\";\r\nimport {\r\n  actionTypeFormatter,\r\n  getDateDayTimeFormat,\r\n  moneyFormat,\r\n} from \"../Shared/colorFormat\";\r\nimport PopupAppointInvoice from \"./PopupAppointInvoice\";\r\nimport PopupAction from \"./PopupAction\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport { useCustomers } from \"../hooks\";\r\nimport PopupCustomer from \"./PopupCustomer\";\r\nimport { tafkeet } from \"../common/helpers\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupAppointment = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  employees,\r\n  departments,\r\n  servicesproducts,\r\n  tasks,\r\n  theme,\r\n  company,\r\n  isEditor,\r\n}: any) => {\r\n  const classes = invoiceClasses();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [startDate, setStartDate]: any = useState(null);\r\n  const [endDate, setEndDate]: any = useState(null);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [custvalue, setCustvalue] = useState<any>(null);\r\n  const [openCust, setOpenCust] = useState(false);\r\n  const [newtext, setNewtext] = useState(\"\");\r\n\r\n  const [status, setStatus]: any = useState(null);\r\n\r\n  const [totals, setTotals] = useState<any>({});\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n  const [taskvalue, setTaskvalue] = useState<any>(null);\r\n\r\n  const [openInvoice, setOpenInvoice] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [actionslist, setActionslist] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tasktitle, setTasktitle]: any = useState(null);\r\n\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const { register, handleSubmit } = useForm({});\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationItems, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [loadActions, actionsData]: any = useLazyQuery(getActions, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (taskvalue) {\r\n        if (taskvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === taskvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n        if (taskvalue?.employeeId) {\r\n          const dept = employees.filter(\r\n            (dep: any) => dep._id === taskvalue?.employeeId\r\n          )?.[0];\r\n          setEmplvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [taskvalue]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationItems\"]?.data || [];\r\n    const actions = actionsData?.data?.[\"getActions\"]?.data || [];\r\n\r\n    if (items && items.length > 0) {\r\n      const ids = items.map((it: any) => it.itemId);\r\n      const servlist = servicesproducts.filter((ser: any) =>\r\n        ids.includes(ser._id)\r\n      );\r\n\r\n      const itemsWqtyprice = items.map((item: any, index: any) => {\r\n        const {\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n        } = item;\r\n        const serv = servlist.filter((se: any) => se._id === item.itemId)[0];\r\n        return {\r\n          ...serv,\r\n          categoryId,\r\n          categoryName,\r\n          categoryNameAr,\r\n          departmentId,\r\n          departmentName,\r\n          departmentNameAr,\r\n          departmentColor,\r\n          employeeId,\r\n          employeeName,\r\n          employeeNameAr,\r\n          employeeColor,\r\n          index,\r\n          itemprice: item.itemPrice,\r\n          itemqty: item.qty,\r\n          itemtotal: item.total,\r\n          // itemtotalcost: item.qty * serv.cost,\r\n        };\r\n      });\r\n      itemsWqtyprice.sort((a: any, b: any) =>\r\n        a.indx > b.indx ? 1 : b.indx > a.indx ? -1 : 0\r\n      );\r\n      setItemsList(itemsWqtyprice);\r\n\r\n      const listwithindex = indexTheList(actions);\r\n      setActionslist(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData, actionsData]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      const start = new Date();\r\n      const end = new Date();\r\n      start.setMinutes(0);\r\n      end.setHours(end.getHours() + 1);\r\n      end.setMinutes(0);\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n      setStatus(eventStatus.filter((es: any) => es.id === 2)?.[0]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    getOverallTotal();\r\n  }, [itemsList]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      getItems({ variables: { opId: row._id } });\r\n      loadActions({ variables: { eventId: row.id } });\r\n\r\n      const depId = row.departmentId;\r\n      const empId = row.employeeId;\r\n      const custId = row.customerId;\r\n      const statNo = row.status;\r\n      const taskId = row.taskId;\r\n      setTasktitle(row?.title);\r\n\r\n      setStartDate(row?.startDate);\r\n      setEndDate(row?.endDate);\r\n\r\n      if (depId) {\r\n        const depart = departments.filter((dep: any) => dep._id === depId)[0];\r\n        setDepartvalue(depart);\r\n      }\r\n      if (taskId) {\r\n        const tsk = tasks.filter((ts: any) => ts.id === taskId)[0];\r\n        setTaskvalue(tsk);\r\n      }\r\n      if (empId) {\r\n        const empl = employees.filter((emp: any) => emp._id === empId)[0];\r\n        setEmplvalue(empl);\r\n      }\r\n      if (custId) {\r\n        const cust = customers.filter((cu: any) => cu._id === custId)[0];\r\n        setCustvalue(cust);\r\n      }\r\n      if (statNo) {\r\n        const stat = eventStatus.filter((es: any) => es.id === statNo)[0];\r\n        setStatus(stat);\r\n      }\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = (item: any) => {\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n  const addActionToList = (item: any) => {\r\n    const newArray = [...actionslist, item];\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n  const editActionInList = (item: any) => {\r\n    const newArray = actionslist.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const removeActionFromList = (item: any) => {\r\n    const newlist = actionslist.filter((il: any) => il.index !== item.index);\r\n    const listwithindex = indexTheList(newlist);\r\n    setActionslist(listwithindex);\r\n  };\r\n\r\n  const getOverallTotal = () => {\r\n    const totalsin = itemsList.map((litem: any) => litem.itemtotal);\r\n    const sum = totalsin.reduce((psum: any, a: any) => psum + a, 0);\r\n    const costtotals = itemsList.map((litem: any) => litem.itemtotalcost);\r\n    const costsum = costtotals.reduce((psum: any, a: any) => psum + a, 0);\r\n    const amount = sum;\r\n    const profit = sum - costsum;\r\n    const tots = {\r\n      itemsSum: amount,\r\n      itemsCostSum: costsum,\r\n      costAmount: costsum,\r\n      total: sum,\r\n      amount,\r\n      profit,\r\n    };\r\n    setTotals(tots);\r\n  };\r\n\r\n  const openCustomer = () => {\r\n    setOpenCust(true);\r\n  };\r\n  const onCloseCustomer = () => {\r\n    setOpenCust(false);\r\n    setNewtext(\"\");\r\n  };\r\n\r\n  const onNewFieldChange = (nextValue: any) => {\r\n    setCustvalue(nextValue);\r\n  };\r\n\r\n  const resetAllForms = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setCustvalue(null);\r\n    setDepartvalue(null);\r\n    setEmplvalue(null);\r\n    setStatus(null);\r\n    setTaskvalue(null);\r\n    setItemsList([]);\r\n    setTotals({});\r\n    setActionslist([]);\r\n    setSelected(null);\r\n    setTasktitle(null);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    // const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    // if (\r\n    //   startDate < startPeriod ||\r\n    //   startDate > endPeriod ||\r\n    //   endDate < startPeriod ||\r\n    //   endDate > endPeriod\r\n    // ) {\r\n    //   await messageAlert(\r\n    //     setAlrt,\r\n    //     isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n    if (startDate > endDate) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (new Date(startDate).getDate() !== new Date(endDate).getDate()) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL\r\n          ? `يجب اضافة عنصر (خدمة او منتج) واحد للفاتورة على الأقل`\r\n          : `You should add min one service to invoice`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const variables: any = {\r\n      id: row && row.id ? row.id : undefined, // is it new or edit\r\n      title: tasktitle,\r\n      startDate,\r\n      endDate,\r\n      amount: totals.amount,\r\n      status: status ? status.id : 2,\r\n      items: JSON.stringify(itemsList),\r\n      actions: JSON.stringify(actionslist),\r\n      taskId: taskvalue ? taskvalue.id : undefined,\r\n      customer: custvalue\r\n        ? {\r\n            customerId: custvalue._id,\r\n            customerName: custvalue.name,\r\n            customerNameAr: custvalue.nameAr,\r\n            customerPhone: custvalue.phone,\r\n          }\r\n        : {\r\n            customerId: undefined,\r\n            customerName: undefined,\r\n            customerNameAr: undefined,\r\n            customerPhone: undefined,\r\n          },\r\n\r\n      department: departvalue\r\n        ? {\r\n            departmentId: departvalue._id,\r\n            departmentName: departvalue.name,\r\n            departmentNameAr: departvalue.nameAr,\r\n            departmentColor: departvalue.color,\r\n          }\r\n        : {\r\n            departmentId: undefined,\r\n            departmentName: undefined,\r\n            departmentNameAr: undefined,\r\n            departmentColor: undefined,\r\n          },\r\n      employee: emplvalue\r\n        ? {\r\n            employeeId: emplvalue._id,\r\n            employeeName: emplvalue.name,\r\n            employeeNameAr: emplvalue.nameAr,\r\n            employeeColor: emplvalue.color,\r\n            employeePhone: emplvalue.phone,\r\n          }\r\n        : {\r\n            employeeId: undefined,\r\n            employeeName: undefined,\r\n            employeeNameAr: undefined,\r\n            employeeColor: undefined,\r\n            employeePhone: undefined,\r\n          },\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      onCloseForm();\r\n    } catch (error) {\r\n      onError(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onCloseForm = () => {\r\n    resetAllForms();\r\n    onClose();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const date = row?.startDate ? new Date(row?.startDate) : new Date();\r\n  const day = weekdaysNNo?.[date.getDay()];\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"موعد جديد\"\r\n      : \"تعديل موعد\"\r\n    : isNew\r\n    ? \"New Appointment\"\r\n    : \"Edit Appointment\";\r\n  const desabledSave = row.status === 10 || !isEditor;\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForm}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      mb={20}\r\n      maxWidth=\"md\"\r\n      taskvalue={taskvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <>\r\n        <Box display=\"flex\">\r\n          <Typography style={{ fontWeight: \"bold\" }} variant=\"body2\">\r\n            {row?.docNo}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.start}\r\n                      value={startDate}\r\n                      onChange={(d: any) => setStartDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <CalenderLocal\r\n                      isRTL={isRTL}\r\n                      label={words.end}\r\n                      value={endDate}\r\n                      onChange={(d: any) => setEndDate(d)}\r\n                      format=\"dd/MM/yyyy - hh:mm\"\r\n                      time\r\n                    ></CalenderLocal>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldLocal\r\n                      autoFocus={true}\r\n                      name=\"tasktitle\"\r\n                      label={words.title}\r\n                      value={tasktitle}\r\n                      onChange={(e: any) => setTasktitle(e.target.value)}\r\n                      row={row}\r\n                      fullWidth\r\n                      mb={0}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"customer\"\r\n                      title={words.customer}\r\n                      words={words}\r\n                      options={customers}\r\n                      value={custvalue}\r\n                      setSelectValue={setCustvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      openAdd={openCustomer}\r\n                      showphone\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"task\"\r\n                      title={words.task}\r\n                      words={words}\r\n                      options={tasks}\r\n                      value={taskvalue}\r\n                      setSelectValue={setTaskvalue}\r\n                      register={register}\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"employee\"\r\n                      title={words.employee}\r\n                      words={words}\r\n                      options={employees.filter((em: any) => em.resType === 1)}\r\n                      value={emplvalue}\r\n                      setSelectValue={setEmplvalue}\r\n                      setSelectError={setEmplError}\r\n                      selectError={emplError}\r\n                      refernce={emplRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                      day={day}\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <AutoFieldLocal\r\n                      name=\"department\"\r\n                      title={words.department}\r\n                      words={words}\r\n                      options={departments.filter(\r\n                        (dep: any) => dep.depType === 1\r\n                      )}\r\n                      value={departvalue}\r\n                      setSelectValue={setDepartvalue}\r\n                      setSelectError={setDepartError}\r\n                      selectError={departError}\r\n                      refernce={departRef}\r\n                      register={register}\r\n                      noPlus\r\n                      isRTL={isRTL}\r\n                      fullWidth\r\n                    ></AutoFieldLocal>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  marginTop: 5,\r\n                  backgroundColor: fade(colors.grey[400], 0.2),\r\n                  borderRadius: 5,\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{\r\n                    marginBottom: 10,\r\n                    fontSize: 14,\r\n                    minWidth: 80,\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelected(null);\r\n                    setOpenAction(true);\r\n                  }}\r\n                >\r\n                  {isRTL ? \"اضافة تنبيه\" : \"Add Reminder\"}\r\n                </Button>\r\n                <Paper style={{ height: 180, overflow: \"auto\" }}>\r\n                  {actionslist.map((act: any) => {\r\n                    return (\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={actionTypeFormatter({ row: act })}\r\n                          secondary={getDateDayTimeFormat(act.sendtime, isRTL)}\r\n                        />\r\n                        <IconButton\r\n                          onClick={() => removeActionFromList(act)}\r\n                          title=\"Delete row\"\r\n                          style={{ padding: 5 }}\r\n                        >\r\n                          <DeleteOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#a76f9a\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          style={{ padding: 5 }}\r\n                          onClick={() => {\r\n                            setSelected(act);\r\n                            setOpenAction(true);\r\n                          }}\r\n                          title=\"Edit row\"\r\n                        >\r\n                          <EditOutlinedIcon\r\n                            style={{ fontSize: 22, color: \"#729aaf\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              style={{\r\n                backgroundColor: fade(colors.grey[400], 0.2),\r\n                padding: 10,\r\n                marginTop: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box display=\"flex\">\r\n                <ServiceItemForm\r\n                  options={servicesproducts}\r\n                  addItem={addItemToList}\r\n                  words={words}\r\n                  employees={employees}\r\n                  departments={departments}\r\n                  classes={classes}\r\n                  user={user}\r\n                  isRTL={isRTL}\r\n                ></ServiceItemForm>\r\n              </Box>\r\n              {!loading && (\r\n                <Box style={{ marginBottom: 20 }}>\r\n                  <ItemsTable\r\n                    rows={itemsList}\r\n                    editItem={editItemInList}\r\n                    removeItem={removeItemFromList}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    user={user}\r\n                  ></ItemsTable>\r\n                </Box>\r\n              )}\r\n              {loading && <LoadingInline></LoadingInline>}\r\n            </Box>\r\n            <Box display=\"flex\" style={{ flexDirection: \"row\" }}>\r\n              <Typography\r\n                style={{ fontWeight: \"bold\", fontSize: 16, marginBottom: 10 }}\r\n              >\r\n                {words.total} : {moneyFormat(totals.amount)}\r\n              </Typography>\r\n              {totals?.amount && (\r\n                <Typography style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                  {tafkeet(totals.amount)}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <AutoFieldLocal\r\n                  name=\"status\"\r\n                  title={words.status}\r\n                  words={words}\r\n                  options={eventStatus}\r\n                  value={status}\r\n                  setSelectValue={setStatus}\r\n                  noPlus\r\n                  isRTL={isRTL}\r\n                  width={200}\r\n                ></AutoFieldLocal>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {!isNew && (\r\n                  <Box\r\n                    m={1}\r\n                    display=\"flex\"\r\n                    style={{ flex: 1, justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => setOpenInvoice(true)}\r\n                      disabled={desabledSave}\r\n                    >\r\n                      {words.addInvoice}\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <PopupAppointInvoice\r\n          open={openInvoice}\r\n          onClose={() => setOpenInvoice(false)}\r\n          onCloseAppoint={onClose}\r\n          appoint={row}\r\n          services={servicesproducts}\r\n          editEvent={editAction}\r\n          company={company}\r\n          theme={theme}\r\n          items={itemsList}\r\n        ></PopupAppointInvoice>\r\n        <PopupCustomer\r\n          newtext={newtext}\r\n          open={openCust}\r\n          onClose={onCloseCustomer}\r\n          isNew={true}\r\n          setNewValue={onNewFieldChange}\r\n          row={null}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n        ></PopupCustomer>\r\n        <PopupAction\r\n          open={openAction}\r\n          onClose={() => setOpenAction(false)}\r\n          row={selected}\r\n          isNew={selected ? false : true}\r\n          addAction={addActionToList}\r\n          editAction={editActionInList}\r\n          theme={theme}\r\n          event={{ ...row, startDate, endDate }}\r\n        ></PopupAction>\r\n      </>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupAppointment;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupDepartmentView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.department} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"departmentId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupDepartmentView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport {\r\n  Box,\r\n  colors,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { moneyFormat } from \"../Shared/colorFormat\";\r\nimport EventsCustomer from \"../Shared/EventsCustomer\";\r\nimport InvoicesCustomer from \"../Shared/InvoicesCustomer\";\r\nimport ReceiptCustomer from \"../Shared/ReceiptCustomer\";\r\nimport ExpensesCustomer from \"../Shared/ExpensesCustomer\";\r\nimport TasksCustomer from \"../Shared/TasksCustomer\";\r\nimport { manamentTabs } from \"../constants/rrule\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: 300,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupEmployeeView = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  theme,\r\n  isEditor,\r\n  departments,\r\n  company,\r\n  employees,\r\n  servicesproducts,\r\n  customers,\r\n}: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const amount = row?.amount ? row.amount : 0;\r\n  const totalinvoiced = row?.totalinvoiced ? row.totalinvoiced : 0;\r\n  const totalpaid = row?.totalpaid ? row.totalpaid : 0;\r\n  const toatlExpenses = row?.toatlExpenses ? row.toatlExpenses : 0;\r\n  const progress = row?.progress ? row.progress : 0;\r\n\r\n  const {\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const title = `${words.employee} : ${isRTL ? row?.nameAr : row?.name}`;\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      onlyclose\r\n      theme={theme}\r\n      alrt={{}}\r\n      maxWidth={\"xl\"}\r\n      mb={10}\r\n      mt={10}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={11}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <Box display=\"flex\" style={{ margin: 10 }}></Box>\r\n            {row && (\r\n              <Box style={{ marginBottom: 20 }}>\r\n                <TabPanel value={value} index={0}>\r\n                  <TasksCustomer\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    company={company}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></TasksCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <EventsCustomer\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    customers={customers}\r\n                    servicesproducts={servicesproducts}\r\n                    isEditor={isEditor}\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    theme={theme}\r\n                    isNew={isNew}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></EventsCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                  <InvoicesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    employees={employees}\r\n                    departments={departments}\r\n                    company={company}\r\n                    servicesproducts={servicesproducts}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></InvoicesCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                  <ReceiptCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ReceiptCustomer>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                  <ExpensesCustomer\r\n                    isRTL={isRTL}\r\n                    words={words}\r\n                    isEditor={isEditor}\r\n                    theme={theme}\r\n                    name=\"employeeId\"\r\n                    value={row}\r\n                    id={row?._id}\r\n                  ></ExpensesCustomer>\r\n                </TabPanel>\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    marginLeft: 20,\r\n                    marginRight: 20,\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الاجمالي\" : \"Total\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(amount)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"نسبة الانجاز\" : \"Progress\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"الفواتير\" : \"Total Invoiced\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalinvoiced)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المقبوضات\" : \"Total Paid\"}\r\n                    </Typography>\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.red[500] }}\r\n                    >\r\n                      {isRTL ? \"المتبقي\" : \"Due Payment\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.red[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - totalpaid)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography style={{ fontSize: 14 }}>\r\n                      {isRTL ? \"المصاريف\" : \"Total Expenses\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography style={{ fontWeight: \"bold\", fontSize: 14 }}>\r\n                      {moneyFormat(toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      style={{ fontSize: 14, color: colors.blue[500] }}\r\n                    >\r\n                      {isRTL ? \"صافي الايراد\" : \"Total Income\"}\r\n                    </Typography>{\" \"}\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 14,\r\n                        color: colors.blue[500],\r\n                      }}\r\n                    >\r\n                      {moneyFormat(totalinvoiced - toatlExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        {row && (\r\n          <Grid item xs={1}>\r\n            <Box style={{ marginTop: 10, marginBottom: 100 }}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"items\"\r\n                className={classes.tabs}\r\n              >\r\n                {manamentTabs.map((item: any) => {\r\n                  return (\r\n                    <Tab\r\n                      style={{\r\n                        backgroundColor: value === item.id ? \"#eee\" : undefined,\r\n                      }}\r\n                      label={isRTL ? item.nameAr : item.name}\r\n                      {...a11yProps(item.id)}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                backgroundColor: \"#eee\",\r\n                margin: 7,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingBottom: 15,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {isRTL ? row.nameAr : row.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n              >\r\n                {words.phoneNumber}\r\n              </Typography>\r\n              <Typography>{row.phone}</Typography>\r\n              {row.email && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{ fontWeight: \"bold\", marginTop: 10 }}\r\n                  >\r\n                    {words.email}\r\n                  </Typography>\r\n                  <Typography>{row.email}</Typography>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupEmployeeView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  createEvent,\r\n  deleteEventById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getEvents,\r\n  getLandingChartData,\r\n  // getReminders,\r\n  updateEvent,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  doneFormatter,\r\n  eventStatusFormatter,\r\n  fromToFormatter,\r\n  nameLinkFormat,\r\n  taskIdLinkFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupAppointment from \"../../pubups/PopupAppointment\";\r\nimport { EventsContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport { Getter } from \"@devexpress/dx-react-core\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\nimport PopupCustomerView from \"../../pubups/PopupCustomerView\";\r\n\r\nexport default function Appointments({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [due, setDue] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    { id: 4, ref: \"title\", name: \"title\", title: words.title },\r\n    col.createdAt,\r\n    col.startDate,\r\n    col.fromto,\r\n    col.customer,\r\n    col.docNo,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.status,\r\n    col.done,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [openTaskItem, setOpenTaskItem] = useState(false);\r\n  const [openCustomerItem, setOpenCustomerItem] = useState(false);\r\n  const [openEmployeeItem, setOpenEmployeeItem] = useState(false);\r\n  const [openDepartmentItem, setOpenDepartmentItem] = useState(false);\r\n\r\n  const onCloseTaskItem = () => {\r\n    setOpenTaskItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseCustomerItem = () => {\r\n    setOpenCustomerItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseEmployeeItem = () => {\r\n    setOpenEmployeeItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n  const onCloseDepartmentItem = () => {\r\n    setOpenDepartmentItem(false);\r\n    setItem(null);\r\n    setName(null);\r\n  };\r\n\r\n  const setEmployeeItem = (data: any) => {\r\n    const empl = employees.filter((em: any) => em._id === data.employeeId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"employee\");\r\n    }\r\n  };\r\n  const setDepartmentItem = (data: any) => {\r\n    const empl = departments.filter(\r\n      (em: any) => em._id === data.departmentId\r\n    )?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"department\");\r\n    }\r\n  };\r\n  const setCustomerItem = (data: any) => {\r\n    const empl = customers.filter((em: any) => em._id === data.customerId)?.[0];\r\n    if (empl) {\r\n      setItem(empl);\r\n      setName(\"customer\");\r\n    }\r\n  };\r\n\r\n  const { tasks } = useTasks();\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n  const { departments, addDepartment, editDepartment } = useDepartments();\r\n  const { employees, addEmployee, editEmployee } = useEmployees();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(EventsContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadEvents, eventsData]: any = useLazyQuery(getEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getEvents,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n      due,\r\n    };\r\n    loadEvents({\r\n      variables,\r\n    });\r\n  }, [start, end, due]);\r\n\r\n  const [addEvent] = useMutation(createEvent, refresQuery);\r\n  const [editEvent] = useMutation(updateEvent, refresQuery);\r\n  const [removeEventById] = useMutation(deleteEventById, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeEventById({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventsData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (eventsData?.data?.getEvents?.data) {\r\n      const { data } = eventsData.data.getEvents;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [eventsData]);\r\n\r\n  useEffect(() => {\r\n    if (name === \"department\") {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"employee\") {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n    if (name === \"customer\") {\r\n      console.log(\"customer\", item);\r\n\r\n      if (customers && customers.length > 0) {\r\n        const opened = customers.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments, employees, customers]);\r\n\r\n  const refresh = () => {\r\n    eventsData?.refetch();\r\n  };\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.startDate.name, togglingEnabled: false },\r\n    { columnName: col.fromto.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.blue[500]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            style={{\r\n              opacity: due ? 0.5 : undefined,\r\n              pointerEvents: due ? \"none\" : undefined,\r\n            }}\r\n          >\r\n            <DateNavigatorReports\r\n              setStart={setStart}\r\n              setEnd={setEnd}\r\n              currentDate={currentDate}\r\n              currentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              currentViewNameChange={currentViewNameChange}\r\n              endDate={endDate}\r\n              endDateChange={endDateChange}\r\n              views={[1, 7, 30, 365, 1000]}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              theme={theme}\r\n              color={colors.blue[700]}\r\n              bgcolor={colors.blue[50]}\r\n            ></DateNavigatorReports>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: colors.blue[50],\r\n              paddingRight: 10,\r\n              marginLeft: 40,\r\n              marginRight: 40,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  style={{ padding: 7 }}\r\n                  checked={due}\r\n                  onChange={() => setDue(!due)}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography\r\n                  style={{ color: colors.blue[700] }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {isRTL ? \"المواعيد المتأخرة\" : \"Due Appointments\"}\r\n                </Typography>\r\n              }\r\n              style={{ fontSize: 14 }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={45}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            columnExtensions={tableColumnVisibilityColumnExtensions}\r\n            defaultHiddenColumnNames={[\r\n              col.createdAt.name,\r\n              col.status.name,\r\n              col.docNo.name,\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"fromto\"]}\r\n            formatterComponent={fromToFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"startDate\", \"createdAt\"]}\r\n            formatterComponent={createdAtFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"status\"]}\r\n            formatterComponent={eventStatusFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"done\"]}\r\n            formatterComponent={(props: any) =>\r\n              doneFormatter({ ...props, editEvent })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdLinkFormat({\r\n                ...props,\r\n                tasks,\r\n                setItem,\r\n                setOpenItem: setOpenTaskItem,\r\n                setName,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"employeeNameAr\", \"employeeName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setEmployeeItem,\r\n                setOpenItem: setOpenEmployeeItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"departmentNameAr\", \"departmentName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setDepartmentItem,\r\n                setOpenItem: setOpenDepartmentItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"customerNameAr\", \"customerName\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({\r\n                ...props,\r\n                setItem: setCustomerItem,\r\n                setOpenItem: setOpenCustomerItem,\r\n              })\r\n            }\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing addAction={addEvent} editAction={editEvent}>\r\n            <PopupAppointment\r\n              employees={employees}\r\n              departments={departments}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              theme={theme}\r\n              tasks={tasks}\r\n              isEditor={isEditor}\r\n            ></PopupAppointment>\r\n          </PopupEditing>\r\n          <Getter\r\n            name=\"tableColumns\"\r\n            computed={({ tableColumns }) => {\r\n              const result = [\r\n                {\r\n                  key: \"editCommand\",\r\n                  type: TableEditColumn.COLUMN_TYPE,\r\n                  width: 110,\r\n                },\r\n                ...tableColumns.filter(\r\n                  (c: any) => c.type !== TableEditColumn.COLUMN_TYPE\r\n                ),\r\n              ];\r\n              return result;\r\n            }}\r\n          />\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n        <PopupDepartmentView\r\n          open={openDepartmentItem}\r\n          onClose={onCloseDepartmentItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n        <PopupEmployeeView\r\n          open={openEmployeeItem}\r\n          onClose={onCloseEmployeeItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n        <PopupTaskView\r\n          open={openTaskItem}\r\n          onClose={onCloseTaskItem}\r\n          item={item}\r\n          tasks={tasks}\r\n          isNew={false}\r\n          theme={theme}\r\n          employees={employees}\r\n          departments={departments}\r\n          customers={customers}\r\n          addCustomer={addCustomer}\r\n          editCustomer={editCustomer}\r\n          company={company}\r\n          servicesproducts={servicesproducts}\r\n          isEditor={isEditor}\r\n        ></PopupTaskView>\r\n        <PopupCustomerView\r\n          open={openCustomerItem}\r\n          onClose={onCloseCustomerItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addCustomer}\r\n          editAction={editCustomer}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={rows}\r\n          tasks={tasks}\r\n        ></PopupCustomerView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from \"react\";\r\nimport { Box, Checkbox, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function FilterSelect({\r\n  options,\r\n  value,\r\n  setValue,\r\n  words,\r\n  isRTL,\r\n  name,\r\n  width,\r\n  nomulti = false,\r\n}: any) {\r\n  return (\r\n    <Autocomplete\r\n      size=\"small\"\r\n      multiple={!nomulti}\r\n      options={options}\r\n      disableCloseOnSelect\r\n      disableListWrap\r\n      fullWidth\r\n      getOptionLabel={(option: any) => (isRTL ? option.nameAr : option.name)}\r\n      style={{}}\r\n      renderOption={(option, { selected }) => (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {!nomulti && (\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n            />\r\n          )}\r\n          {isRTL ? option.nameAr : option.name}\r\n        </Box>\r\n      )}\r\n      value={value}\r\n      onChange={(_, newValue: any) => {\r\n        setValue(newValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          rows={1}\r\n          rowsMax={1}\r\n          id={name}\r\n          name={name}\r\n          label={words[name]}\r\n          variant=\"outlined\"\r\n          style={{\r\n            width: width ? width : 200,\r\n            marginRight: 5,\r\n            marginLeft: 5,\r\n            backgroundColor: value?.length > 0 ? \"#FFF5D6\" : undefined,\r\n            fontSize: 10,\r\n            margin: 0,\r\n            padding: 0,\r\n          }}\r\n        ></TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function FinanceReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.acc,\r\n    col.taskId,\r\n    col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.opType,\r\n    col.employee,\r\n    col.opDocNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    console.log(variables);\r\n\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n            }}\r\n          >\r\n            <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n              <FilterSelectCkeckBox\r\n                options={tasks}\r\n                value={taskvalue?.[0]}\r\n                setValue={setTaskvalueDispatch}\r\n                words={words}\r\n                isRTL={isRTL}\r\n                name=\"task\"\r\n                nomulti\r\n                width={250}\r\n              ></FilterSelectCkeckBox>\r\n            </Box>\r\n            <FilterSelectCkeckBox\r\n              options={mainaccounts}\r\n              value={accvalue?.[0]}\r\n              setValue={setAccvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"account\"\r\n              nomulti\r\n              width={250}\r\n            ></FilterSelectCkeckBox>\r\n            {/* <Box\r\n              style={{\r\n                minWidth: 120,\r\n                marginRight: isRTL ? 40 : undefined,\r\n                marginLeft: isRTL ? undefined : 40,\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n                {currencyFormatter({ value: total })}\r\n              </Typography>\r\n            </Box> */}\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={30}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initEventsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const eventsReportReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const EventsReportContext = createContext<SalesReportContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default EventsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  dateTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getReportEvents } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function SalesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.startDate,\r\n    col.time,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.customer,\r\n    col.status,\r\n    col.docNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportEvents, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(EventsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportEvents\"]?.data || [];\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 9\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={dateTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  currencyFormatterEmpty,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { CustomerReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { useCustomers } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function CustomerReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.refNo,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.customer,\r\n    // col.acc,\r\n    // col.kaidType,\r\n    col.opType,\r\n    col.taskId,\r\n    col.opDocNo,\r\n    col.opAcc,\r\n    // col.accType,\r\n    col.amountdebit,\r\n    col.amountcredit,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(CustomerReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 2,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: \"credit\", type: \"sum\" },\r\n    { columnName: \"debit\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              height: 38,\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={customers}\r\n              value={custvalue?.[0]}\r\n              setValue={setCustvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"customer\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n              minWidth: 120,\r\n              marginRight: 90,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"credit\", \"debit\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: \"\",\r\n              }}\r\n              // messages={{\r\n              //   sum: isRTL ? \"المجموع\" : \"Total\",\r\n              //   count: isRTL ? \"العدد\" : \"Count\",\r\n              // }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initCalendarReportContext = {\r\n  mainResourceName: \"employeeId\",\r\n  currentViewName: \"Day\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const calendarReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any,\r\n) => {\r\n  switch (action.type) {\r\n    case \"setMainResourceName\":\r\n      return { ...state, mainResourceName: action.payload };\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const CalendarReportContext = createContext<EventsContextTypes | any>(\r\n  {},\r\n);\r\n\r\nexport default CalendarReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createExpenses,\r\n  deleteExpenses,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getExpenses,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateExpenses,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  samllFormatter,\r\n  taskIdFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ExpensesContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupExpenses from \"../../pubups/PopupExpenses\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Expenses({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب المصروف\" : \"Expenses Acc\" },\r\n    { name: \"creditAcc\", title: isRTL ? \"حساب الدفع\" : \"Payment Acc\" },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    {\r\n      name: isRTL ? \"employeeNameAr\" : \"employeeName\",\r\n      title: `${words.employee} / ${words.resourses}`,\r\n    },\r\n    {\r\n      name: \"taskId\",\r\n      title: isRTL ? \"المهمة\" : \"Task\",\r\n    },\r\n    { name: \"desc\", title: words.description },\r\n\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ExpensesContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadExpenses, expensesData]: any = useLazyQuery(getExpenses, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getExpenses,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadExpenses({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addExpenses] = useMutation(createExpenses, refresQuery);\r\n  const [editExpenses] = useMutation(updateExpenses, refresQuery);\r\n  const [removeExpenses] = useMutation(deleteExpenses, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeExpenses({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (expensesData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (expensesData?.data?.getExpenses?.data) {\r\n      const { data } = expensesData.data.getExpenses;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [expensesData]);\r\n\r\n  const refresh = () => {\r\n    expensesData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"taskId\"]}\r\n            formatterComponent={(props: any) =>\r\n              taskIdFormatter({ ...props, tasks })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addExpenses}\r\n            editAction={editExpenses}\r\n          >\r\n            <PopupExpenses tasks={tasks}></PopupExpenses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { PurchaseReportContext } from \"../../contexts\";\r\nimport { groupList } from \"../../constants/reports\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useDepartments, useEmployees } from \"../../hooks\";\r\n\r\nconst styles = (theme: any) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function PurchaseReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  suppliers,\r\n  categories,\r\n  brands,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.employee,\r\n    col.service,\r\n    col.department,\r\n    col.category,\r\n    col.supplier,\r\n    col.opDocNo,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      suppvalue,\r\n      brandvalue,\r\n      catvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(PurchaseReportContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setSuppvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setSuppvalue\", payload: value });\r\n  };\r\n  const setCatvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCatvalue\", payload: value });\r\n  };\r\n  const setBrandvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setBrandvalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n    setRows(updatedRows);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: updatedRows,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 14,\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      supplierIds: getIds(suppvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `sales-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          opTime: inActiveColumns(\"opTime\")\r\n            ? row.opDocNo\r\n              ? covertToDate(row.opTime)\r\n              : \" - \"\r\n            : undefined,\r\n          opDocNo: inActiveColumns(\"opDocNo\")\r\n            ? row.opDocNo\r\n              ? row.opDocNo\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          category: inActiveColumns(\"category\")\r\n            ? row[col.category.name]\r\n              ? row[col.category.name]\r\n              : \" - \"\r\n            : undefined,\r\n          supplier: inActiveColumns(\"supplier\")\r\n            ? row[col.supplier.name]\r\n              ? row[col.supplier.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.opDocNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.opDocNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter((item: any) => item.id !== 7);\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 2,\r\n          }}\r\n        >\r\n          <ReportsFilter\r\n            servicevalue={servicevalue}\r\n            setServicevalue={setServicevalueDispatch}\r\n            departvalue={departvalue}\r\n            setDepartvalue={setDepartvalueDispatch}\r\n            emplvalue={emplvalue}\r\n            setEmplvalue={setEmplvalueDispatch}\r\n            departments={departments}\r\n            employees={employees}\r\n            services={services}\r\n            customers={suppliers}\r\n            custvalue={suppvalue}\r\n            setCustvalue={setSuppvalueDispatch}\r\n            catvalue={catvalue}\r\n            setCatvalue={setCatvalueDispatch}\r\n            categories={categories}\r\n            words={words}\r\n            isRTL={isRTL}\r\n          ></ReportsFilter>\r\n          <ReportGroupBySwitcher\r\n            options={groupOptions}\r\n            value={groupby}\r\n            onChange={onSwitcherChange}\r\n            isRTL={isRTL}\r\n          ></ReportGroupBySwitcher>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  calculateAmount,\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, Typography, withStyles } from \"@material-ui/core\";\r\nimport { getMonthlyReport } from \"../../graphql\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { ExpensesReportContext } from \"../../contexts\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function ExpensesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  mainaccounts,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const expensesAccounts = mainaccounts?.filter(\r\n    (acc: any) => acc.parentcode === 15\r\n  );\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.opDocNo,\r\n    col.acc,\r\n    // col.refNo,\r\n    // col.kaidType,\r\n    col.opAcc,\r\n    // col.accType,\r\n    // col.customer,\r\n    col.taskId,\r\n    col.desc,\r\n    col.opType,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getMonthlyReport, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      catvalue,\r\n      accvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      sort,\r\n    },\r\n    dispatch,\r\n  } = useContext(ExpensesReportContext);\r\n  const { tasks } = useTasks();\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setAccvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setAccvalue\", payload: value ? [value] : [] });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value ? [value] : [] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getMonthlyReport\"]?.data || [];\r\n    const balance = summaryData?.data?.[\"getMonthlyReport\"]?.message || null;\r\n\r\n    const amount = balance ? Number(balance) : null;\r\n\r\n    const updatedRows =\r\n      slsData?.length > 0\r\n        ? slsData.map((item: any) => {\r\n            return {\r\n              ...item,\r\n              amount: calculateAmount(item),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (amount) {\r\n      updatedRows.unshift({\r\n        _id: Date.now(),\r\n        accNameAr: \"رصيد افتتاحي\",\r\n        accName: \"Opening Balancee\",\r\n        amount,\r\n      });\r\n    }\r\n\r\n    setRows(updatedRows);\r\n    let sum = 0;\r\n    updatedRows.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n\r\n  const fetchData = () => {\r\n    const variables = {\r\n      accPCode: 15,\r\n      accountIds: getIds(accvalue),\r\n      serviceIds: getIds(servicevalue),\r\n      categoryIds: getIds(catvalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `finance-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortRows = _.orderBy(rows, [sort[0].columnName], [sort[0].direction]);\r\n\r\n    const printrows = sortRows.map((row: any) => {\r\n      return {\r\n        opTime: inActiveColumns(\"opTime\")\r\n          ? covertToDate(row.opTime)\r\n          : undefined,\r\n        opDocNo: inActiveColumns(\"opDocNo\") ? row.opDocNo : undefined,\r\n        employee: inActiveColumns(\"employee\")\r\n          ? row[col.employee.name]\r\n          : undefined,\r\n        service: inActiveColumns(\"service\") ? row[col.service.name] : undefined,\r\n        department: inActiveColumns(\"department\")\r\n          ? row[col.department.name]\r\n          : undefined,\r\n        category: inActiveColumns(\"category\")\r\n          ? row[col.category.name]\r\n          : undefined,\r\n        customer: inActiveColumns(\"customer\")\r\n          ? row[col.customer.name]\r\n          : undefined,\r\n        amount: inActiveColumns(\"amount\") ? moneyFormat(row.amount) : undefined,\r\n      };\r\n    });\r\n\r\n    setPrintRows(printrows);\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n    if (servicevalue) {\r\n      filters.push({ name: isRTL ? servicevalue?.nameAr : servicevalue?.name });\r\n    }\r\n    if (catvalue) {\r\n      filters.push({ name: isRTL ? catvalue?.nameAr : catvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? total : \"\",\r\n      reportname: isRTL ? \"تقرير المالية\" : \"Finance Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: sumcolumn, type: \"count\" },\r\n    { columnName: col.category.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n  // const [totalSummaryItems] = useState([\r\n  //   { columnName: columnName, type: \"count\" },\r\n  //   { columnName: \"qty\", type: \"count\" },\r\n  //   { columnName: \"amount\", type: \"sum\" },\r\n  // ]);\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  // const [grouping] = useState([{ columnName: sumcolumn }]);\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n      // showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      // showInGroupFooter: true,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: col.category.name,\r\n      type: \"count\",\r\n      // alignByColumn: true,\r\n      showInGroupFooter: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      showInGroupFooter: true,\r\n      // alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        {/* <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 65,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton onClick={arrangeParing} title=\"Print Report\" size=\"small\">\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 200 : undefined,\r\n            right: isRTL ? undefined : 200,\r\n            top: 65,\r\n            height: 38,\r\n            zIndex: 111,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            marginTop: 8,\r\n          }}\r\n        >\r\n          <Box style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <FilterSelectCkeckBox\r\n              options={tasks}\r\n              value={taskvalue?.[0]}\r\n              setValue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"task\"\r\n              nomulti\r\n              width={300}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n          <FilterSelectCkeckBox\r\n            options={expensesAccounts}\r\n            value={accvalue?.[0]}\r\n            setValue={setAccvalueDispatch}\r\n            words={words}\r\n            isRTL={isRTL}\r\n            name=\"account\"\r\n            nomulti\r\n            width={300}\r\n          ></FilterSelectCkeckBox>\r\n          <Box\r\n            style={{\r\n              minWidth: 120,\r\n              marginRight: isRTL ? 20 : undefined,\r\n              marginLeft: isRTL ? undefined : 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: \"bold\" }}>\r\n              {currencyFormatter({ value: total })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 133, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 181}\r\n              tableComponent={TableComponent}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && <TableGroupRow showColumnsWhenGrouped />}\r\n            {group && (\r\n              <TableSummaryRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n              ></TableSummaryRow>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  createEmployee,\r\n  deleteEmployee,\r\n  getEmployees,\r\n  updateEmployee,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getemparts, empData]: any = useLazyQuery(getEmployees, {\r\n    variables: { isRTL, resTypes: [3] },\r\n  });\r\n\r\n  const [addEmployee] = useMutation(createEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [editEmployee] = useMutation(updateEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n  const [removeEmployee] = useMutation(deleteEmployee, {\r\n    refetchQueries: [\r\n      { query: getEmployees, variables: { isRTL, resTypes: [3] } },\r\n      { query: getEmployees, variables: { isRTL } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getemparts();\r\n  }, [getemparts]);\r\n\r\n  const employees = empData?.data?.[\"getEmployees\"]?.data || [];\r\n  const refreshemployee = () => empData?.refetch();\r\n\r\n  return {\r\n    employees,\r\n    refreshemployee,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDepartments } from \"../hooks\";\r\nimport {\r\n  successAlert,\r\n  dublicateAlert,\r\n  errorAlert,\r\n  getReturnItem,\r\n  yup,\r\n  ColorPicker,\r\n} from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextFieldLocal } from \"../components\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\n\r\nconst PopupResourses = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  setNewValue,\r\n  addAction,\r\n  editAction,\r\n  newtext,\r\n  theme,\r\n}: any) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [depError, setDepError] = useState<any>(false);\r\n  const [color, setColor] = useState<any>(\"#000000\");\r\n\r\n  const emplRef: any = React.useRef();\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm(yup.emppResolver);\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const { departments } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      const _id = row.departmentId;\r\n      const depart = departments.filter((dep: any) => dep._id === _id)[0];\r\n      setDepartvalue(depart);\r\n      setColor(row.color);\r\n    }\r\n  }, [row]);\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setSaving(true);\r\n    const name = data.name.trim();\r\n    const nameAr = data.nameAr.trim();\r\n    const info = data.info;\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      name,\r\n      nameAr,\r\n      color,\r\n      info,\r\n      resType: 3,\r\n      department,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n\r\n    const mutate = isNew ? addAction : editAction;\r\n    const mutateName = isNew ? \"createEmployee\" : \"updateEmployee\";\r\n    apply(mutate, mutateName, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, mutateName: string, variables: any) => {\r\n    try {\r\n      const res = await mutate({ variables });\r\n      const nitem = getReturnItem(res, mutateName);\r\n      if (setNewValue && nitem) setNewValue(nitem, \"employee\");\r\n      setSaving(false);\r\n      await successAlert(setAlrt, isRTL);\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      resetAll();\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setDepartvalue(null);\r\n    setColor(\"#000000\");\r\n  };\r\n  const closeModal = () => {\r\n    onClose();\r\n    resetAll();\r\n  };\r\n\r\n  const onHandleSubmit = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  const title = isRTL\r\n    ? isNew\r\n      ? \"اضافة مورد\"\r\n      : \"تعديل بيانات مورد\"\r\n    : isNew\r\n    ? \"New Resourse\"\r\n    : \"Edit Resourse\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={title}\r\n      onSubmit={onHandleSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mb={50}\r\n      saving={saving}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                autoFocus\r\n                name=\"nameAr\"\r\n                label={words.name}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextFieldLocal\r\n                required\r\n                name=\"name\"\r\n                label={words.nameEn}\r\n                register={register}\r\n                errors={errors}\r\n                row={row}\r\n                fullWidth\r\n                newtext={newtext}\r\n                margin={20}\r\n                mb={10}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <React.Fragment>\r\n            <AutoFieldLocal\r\n              name=\"department\"\r\n              title={words.department}\r\n              words={words}\r\n              options={departments.filter((dep: any) => dep.depType === 2)}\r\n              value={departvalue}\r\n              setSelectValue={setDepartvalue}\r\n              setSelectError={setDepError}\r\n              selectError={depError}\r\n              refernce={emplRef}\r\n              register={register}\r\n              // openAdd={openDepartment}\r\n              isRTL={isRTL}\r\n              fullWidth\r\n              mb={20}\r\n            ></AutoFieldLocal>\r\n            <TextFieldLocal\r\n              name=\"info\"\r\n              label={words.info}\r\n              register={register}\r\n              errors={errors}\r\n              row={row}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={4}\r\n              rows={4}\r\n            />\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  disabled\r\n                  name=\"color\"\r\n                  value={row?.color ? row.color : color}\r\n                  variant=\"outlined\"\r\n                  style={{ width: 200, backgroundColor: color }}\r\n                  InputProps={{ style: { borderRadius: 5, color: \"#fff\" } }}\r\n                  margin=\"dense\"\r\n                />\r\n                <ColorPicker setColor={setColor} color={color}></ColorPicker>\r\n              </Grid>\r\n            </Grid>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupResourses;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  colorFormatter,\r\n  daysoffFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useOResourses from \"../../hooks/useOResourses\";\r\nimport PopupResourses from \"../../pubups/PopupResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\n\r\nexport default function Resourses({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useOResourses();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid rows={employees} columns={columns} getRowId={getRowId}>\r\n          <SortingState />\r\n          <SearchState />\r\n\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"color\"]}\r\n            formatterComponent={colorFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupResourses></PopupResourses>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createFinance,\r\n  deleteFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { ReceiptContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport getReceipts from \"../../graphql/query/getReceipts\";\r\nimport PopupReceipt from \"../../pubups/PopupReceipt\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function Receipt({ isRTL, words, menuitem, isEditor, theme }) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"creditAcc\", title: words.customer },\r\n    { name: \"debitAcc\", title: isRTL ? \"حساب القبض\" : \"Receipt Acc\" },\r\n\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const { tasks } = useTasks();\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(ReceiptContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getReceipts, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getReceipts,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getReceipts?.data) {\r\n      const { data } = financeData.data.getReceipts;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupReceipt tasks={tasks}></PopupReceipt>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableEditColumn,\r\n  TableHeaderRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Box, fade, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport { DataTypeProvider, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { accountFormatter, currencyFormatter } from \"./colorFormat\";\r\nimport { CommandSmall } from \"./CommandSmall\";\r\n\r\nexport const getRowId = (row: any) => row.index;\r\n\r\nconst NumberTypeProvider = (props) => (\r\n  <DataTypeProvider\r\n    formatterComponent={({ value }) => (\r\n      <Typography variant=\"subtitle2\">{Number(value) + 1}</Typography>\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <Table.Table {...restProps} className={classes.tableStriped} />\r\n);\r\n\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\n\r\nexport default function KaidsTable({\r\n  rows,\r\n  removeItem,\r\n  isRTL,\r\n  words,\r\n  accounts,\r\n}: any) {\r\n  const [columns] = useState([\r\n    { name: \"index\", title: words.no },\r\n    { name: \"debitAcc\", title: words.to },\r\n    { name: \"creditAcc\", title: words.from },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnExtensions]: any = useState([\r\n    { columnName: \"index\", width: \"10%\", align: \"left\" },\r\n    { columnName: \"debitAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"creditAcc\", width: \"20%\", align: \"left\" },\r\n    { columnName: \"desc\", width: \"auto\" },\r\n    { columnName: \"amount\", width: \"15%\", align: \"right\" },\r\n  ]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const index = deleted[0];\r\n      removeItem(index);\r\n    }\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return <Box display=\"flex\"></Box>;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        maxHeight: 265,\r\n        overflow: \"auto\",\r\n        margin: 10,\r\n        minHeight: 265,\r\n      }}\r\n    >\r\n      {rows && (\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <Table\r\n            noDataCellComponent={renderEmpty}\r\n            columnExtensions={tableColumnExtensions}\r\n            tableComponent={TableComponent}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <NumberTypeProvider for={[\"index\"]} />\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\", \"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <TableEditColumn\r\n            showDeleteCommand\r\n            // showEditCommand\r\n            commandComponent={CommandSmall}\r\n          ></TableEditColumn>\r\n          <TableHeaderRow />\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nexport default gql`\r\n  query getOperationKaids($opId: String) {\r\n    getOperationKaids(opId: $opId) {\r\n      ok\r\n      error\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        desc\r\n\r\n        refNo\r\n        refType\r\n\r\n        amount\r\n\r\n        shareId\r\n        accId\r\n        accCode\r\n        accType\r\n        accName\r\n        accNameAr\r\n        opaccId\r\n        opaccCode\r\n        opaccType\r\n        opaccName\r\n        opaccNameAr\r\n        kaidType\r\n        amount\r\n        debit\r\n        credit\r\n\r\n        userId\r\n        note\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { dublicateAlert, errorAlert, messageAlert } from \"../Shared\";\r\nimport { GContextTypes } from \"../types\";\r\nimport { GlobalContext } from \"../contexts\";\r\nimport { Fab, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport useAccounts from \"../hooks/useAccounts\";\r\nimport { operationTypes } from \"../constants\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalenderLocal, TextFieldLocal } from \"../components\";\r\nimport { getAppStartEndPeriod } from \"../common/time\";\r\nimport AutoFieldLocal from \"../components/fields/AutoFieldLocal\";\r\nimport KaidsTable from \"../Shared/KaidsTable\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport getOperationKaids from \"../graphql/query/getOperationKaids\";\r\nimport LoadingInline from \"../Shared/LoadingInline\";\r\nimport _ from \"lodash\";\r\nimport { useDepartments, useEmployees } from \"../hooks\";\r\n\r\nexport const indexTheList = (list: any) => {\r\n  return list.map((item: any, index: any) => {\r\n    return {\r\n      ...item,\r\n      index,\r\n    };\r\n  });\r\n};\r\n\r\nconst PopupFinanceAll = ({\r\n  open,\r\n  onClose,\r\n  row,\r\n  isNew,\r\n  addAction,\r\n  editAction,\r\n  theme,\r\n}: any) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [debaccounts, setDebaccounts] = React.useState([]);\r\n  const [cridaccounts, setCridaccounts] = React.useState([]);\r\n\r\n  const [amount, setAmount]: any = React.useState(0);\r\n  const [desc, setDesc]: any = React.useState(\"\");\r\n  const [debitAcc, setDebitAcc]: any = React.useState(null);\r\n  const [creditAcc, setCreditAcc]: any = React.useState(null);\r\n  const crdRef: any = React.useRef();\r\n\r\n  const [itemsList, setItemsList] = useState<any>([]);\r\n\r\n  const [departvalue, setDepartvalue] = useState<any>(null);\r\n  const [departError, setDepartError] = useState<any>(false);\r\n  const departRef: any = React.useRef();\r\n\r\n  const [emplvalue, setEmplvalue] = useState<any>(null);\r\n  const [emplError, setEmplError] = useState<any>(false);\r\n  const emplRef: any = React.useRef();\r\n\r\n  const [resType, setResType] = useState<any>(null);\r\n  const [emplslist, setEmplslist] = useState<any>([]);\r\n\r\n  const [maindesc, setMaindesc] = useState<any>(\"\");\r\n  const {\r\n    translate: { words, isRTL },\r\n    store: { user },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n\r\n  const [getItems, itemsData]: any = useLazyQuery(getOperationKaids, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const { accounts } = useAccounts();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const filtered = employees.filter((emp: any) => emp.resType === resType);\r\n      setEmplslist(filtered);\r\n    }\r\n  }, [resType, employees]);\r\n\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      if (emplvalue) {\r\n        if (emplvalue?.departmentId) {\r\n          const dept = departments.filter(\r\n            (dep: any) => dep._id === emplvalue?.departmentId\r\n          )?.[0];\r\n          setDepartvalue(dept);\r\n        }\r\n      }\r\n    }\r\n  }, [emplvalue]);\r\n\r\n  useEffect(() => {\r\n    const items = itemsData?.data?.[\"getOperationKaids\"]?.data || [];\r\n    if (items && items.length > 0) {\r\n      const data = _(items)\r\n        .groupBy(\"shareId\")\r\n        .map((array, key, index) => {\r\n          const debitAcc = array.filter((ari: any) => ari.debit)?.[0]?.accCode;\r\n          const creditAcc = array.filter((ari: any) => ari.credit)?.[0]\r\n            ?.accCode;\r\n          const amount = array[0]?.amount;\r\n          const desc = array[0]?.desc;\r\n          const time = array[0]?.opTime;\r\n          return {\r\n            time,\r\n            debitAcc,\r\n            creditAcc,\r\n            amount,\r\n            desc,\r\n            branch: user.branch,\r\n            userId: user._id,\r\n          };\r\n        })\r\n        .value();\r\n\r\n      const listwithindex = indexTheList(data);\r\n      setItemsList(listwithindex);\r\n      setLoading(false);\r\n    }\r\n  }, [itemsData]);\r\n\r\n  useEffect(() => {\r\n    setDebaccounts(accounts);\r\n    setCridaccounts(accounts);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (row && row._id) {\r\n      setLoading(true);\r\n      const variables = { opId: row._id };\r\n      getItems({\r\n        variables,\r\n      });\r\n\r\n      setMaindesc(row.desc);\r\n\r\n      handleDateChange(row.time);\r\n    }\r\n  }, [row]);\r\n\r\n  const addItemToList = async () => {\r\n    if (!debitAcc || !creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تحديد كلا الحسابين\" : \"You have to select both accounts\"\r\n      );\r\n      return;\r\n    }\r\n    if (debitAcc === creditAcc) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"الحسابات يجب ان تكون مختلفة\" : \"The accounts must be deferent\"\r\n      );\r\n      return;\r\n    }\r\n    const item = {\r\n      time: selectedDate,\r\n      debitAcc: debitAcc.code,\r\n      creditAcc: creditAcc.code,\r\n      amount,\r\n      desc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const newArray = [...itemsList, { ...item, userId: user._id }];\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n    resetForm();\r\n    crdRef.current.focus();\r\n  };\r\n  const editItemInList = (item: any) => {\r\n    const newArray = itemsList.map((it: any) => {\r\n      if (it._id === item._id) {\r\n        return item;\r\n      } else {\r\n        return it;\r\n      }\r\n    });\r\n    const listwithindex = indexTheList(newArray);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const removeItemFromList = (index: any) => {\r\n    const newList = [...itemsList];\r\n    newList.splice(index, 1);\r\n    const listwithindex = indexTheList(newList);\r\n    setItemsList(listwithindex);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const { startPeriod, endPeriod } = getAppStartEndPeriod();\r\n    if (selectedDate < startPeriod || selectedDate > endPeriod) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"يجب تعديل التاريخ\" : \"Date should be change\"\r\n      );\r\n      return;\r\n    }\r\n    if (!itemsList || itemsList.length === 0) {\r\n      await messageAlert(\r\n        setAlrt,\r\n        isRTL ? \"لا يوجد قيود لحفظها\" : \"No Items to be saved\"\r\n      );\r\n      return;\r\n    }\r\n    const department = departvalue\r\n      ? {\r\n          departmentId: departvalue._id,\r\n          departmentName: departvalue.name,\r\n          departmentNameAr: departvalue.nameAr,\r\n          departmentColor: departvalue.color,\r\n        }\r\n      : {\r\n          departmentId: undefined,\r\n          departmentName: undefined,\r\n          departmentNameAr: undefined,\r\n          departmentColor: undefined,\r\n        };\r\n    const employee = emplvalue\r\n      ? {\r\n          employeeId: emplvalue._id,\r\n          employeeName: emplvalue.name,\r\n          employeeNameAr: emplvalue.nameAr,\r\n          employeeColor: emplvalue.color,\r\n        }\r\n      : {\r\n          employeeId: undefined,\r\n          employeeName: undefined,\r\n          employeeNameAr: undefined,\r\n          employeeColor: undefined,\r\n        };\r\n\r\n    const variables: any = {\r\n      _id: row && row._id ? row._id : undefined, // is it new or edit\r\n      opType: operationTypes.kaid,\r\n      time: selectedDate,\r\n      items: JSON.stringify(itemsList),\r\n      department,\r\n      employee,\r\n      desc: maindesc,\r\n      branch: user.branch,\r\n      userId: user._id,\r\n    };\r\n    const mutate = isNew ? addAction : editAction;\r\n    apply(mutate, variables);\r\n  };\r\n\r\n  const apply = async (mutate: any, variables: any) => {\r\n    try {\r\n      mutate({ variables });\r\n      closeModal();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const onError = async (error: any) => {\r\n    if (error.message.includes(\"duplicate\")) {\r\n      await dublicateAlert(setAlrt, isRTL);\r\n    } else {\r\n      await errorAlert(setAlrt, isRTL);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setAmount(0);\r\n    setDesc(\"\");\r\n    setCreditAcc(null);\r\n    setDebitAcc(null);\r\n  };\r\n  const resetAll = () => {\r\n    resetForm();\r\n    setDebaccounts([]);\r\n    setCridaccounts([]);\r\n    setItemsList([]);\r\n    setDepartvalue(null);\r\n    setDepartError(false);\r\n    setEmplvalue(null);\r\n    setEmplError(false);\r\n    setResType(null);\r\n    setEmplslist([]);\r\n    setMaindesc(\"\");\r\n  };\r\n  const closeModal = () => {\r\n    resetAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={closeModal}\r\n      title={words.generalkaid}\r\n      onSubmit={onSubmit}\r\n      theme={theme}\r\n      alrt={alrt}\r\n      mt={10}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={1}></Grid>\r\n        <Grid item xs={10}>\r\n          <CalenderLocal\r\n            isRTL={isRTL}\r\n            label={words.time}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          ></CalenderLocal>\r\n          <TextFieldLocal\r\n            name=\"maindesc\"\r\n            label={words.description}\r\n            value={maindesc}\r\n            onChange={(e: any) => setMaindesc(e.target.value)}\r\n            row={row}\r\n            fullWidth\r\n            multiline\r\n            rowsMax={2}\r\n            rows={2}\r\n          />\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#f4f4f4\",\r\n              padding: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            container\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"debitAcc\"\r\n                    title={words.to}\r\n                    words={words}\r\n                    options={debaccounts}\r\n                    value={debitAcc}\r\n                    setSelectValue={setDebitAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"creditAcc\"\r\n                    title={words.from}\r\n                    words={words}\r\n                    options={cridaccounts}\r\n                    value={creditAcc}\r\n                    setSelectValue={setCreditAcc}\r\n                    isRTL={isRTL}\r\n                    fullwidth\r\n                    refernce={crdRef}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextFieldLocal\r\n                    required\r\n                    name=\"amount\"\r\n                    label={words.amount}\r\n                    value={amount}\r\n                    onChange={(e: any) => setAmount(Number(e.target.value))}\r\n                    row={row}\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                  <RadioGroup\r\n                    aria-label=\"Views\"\r\n                    name=\"views\"\r\n                    row\r\n                    style={{ marginBottom: -15 }}\r\n                    value={resType}\r\n                    onChange={(e: any) => {\r\n                      setResType(Number(e.target.value));\r\n                      setEmplvalue(null);\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value={1}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اداري\" : \"Managment\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={2}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"اختصاصي\" : \"Technical\"}\r\n                    />\r\n                    <FormControlLabel\r\n                      value={3}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={isRTL ? \"الموارد\" : \"Resourses\"}\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={8}>\r\n                  <AutoFieldLocal\r\n                    name=\"employee\"\r\n                    title={resType === 1 ? words.employee : words.resourses}\r\n                    disabled={!resType}\r\n                    words={words}\r\n                    options={emplslist}\r\n                    value={emplvalue}\r\n                    setSelectValue={setEmplvalue}\r\n                    setSelectError={setEmplError}\r\n                    selectError={emplError}\r\n                    refernce={emplRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <AutoFieldLocal\r\n                    name=\"department\"\r\n                    title={words.department}\r\n                    words={words}\r\n                    options={departments}\r\n                    value={departvalue}\r\n                    setSelectValue={setDepartvalue}\r\n                    setSelectError={setDepartError}\r\n                    selectError={departError}\r\n                    refernce={departRef}\r\n                    isRTL={isRTL}\r\n                    mb={0}\r\n                  ></AutoFieldLocal>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextFieldLocal\r\n                    name=\"desc\"\r\n                    label={words.description}\r\n                    value={desc}\r\n                    onChange={(e: any) => setDesc(e.target.value)}\r\n                    row={row}\r\n                    fullWidth\r\n                    mb={0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Fab\r\n                    style={{ marginLeft: 10, marginTop: 7 }}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={addItemToList}\r\n                    title=\"Create new row\"\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <KaidsTable\r\n              rows={itemsList}\r\n              editItem={editItemInList}\r\n              removeItem={removeItemFromList}\r\n              isRTL={isRTL}\r\n              words={words}\r\n              user={user}\r\n              accounts={accounts}\r\n            ></KaidsTable>\r\n            {loading && <LoadingInline></LoadingInline>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupFinanceAll;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  SearchPanel,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createGeneralFinance,\r\n  deleteGeneralFinance,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getGeneralFinances,\r\n  getLandingChartData,\r\n  getLastNos,\r\n  updateGeneralFinance,\r\n} from \"../../graphql\";\r\nimport {\r\n  accountFormatter,\r\n  currencyFormatter,\r\n  customerAccountFormatter,\r\n  opTypeFormatter,\r\n  samllFormatter,\r\n  timeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { SearchTable } from \"../../components\";\r\nimport { FinanceContext } from \"../../contexts\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupFinanceAll from \"../../pubups/PopupFinanceAll\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\n\r\nexport default function FinanceAll({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n}) {\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    { name: \"docNo\", title: words.no },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"opType\", title: words.type },\r\n    { name: \"amount\", title: words.amount },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, endDate, sort },\r\n    dispatch,\r\n  } = useContext(FinanceContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadFinances, financeData]: any = useLazyQuery(getGeneralFinances, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { accounts } = useAccounts();\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getGeneralFinances,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getLastNos,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadFinances({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [addFinance] = useMutation(createGeneralFinance, refresQuery);\r\n  const [editFinance] = useMutation(updateGeneralFinance, refresQuery);\r\n  const [removeFinance] = useMutation(deleteGeneralFinance, refresQuery);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      removeFinance({ variables: { _id } });\r\n      setRows(rows.filter((row: any) => row._id !== _id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (financeData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (financeData?.data?.getGeneralFinances?.data) {\r\n      const { data } = financeData.data.getGeneralFinances;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [financeData]);\r\n\r\n  const refresh = () => {\r\n    financeData?.refetch();\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <DateNavigatorReports\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          currentDate={currentDate}\r\n          currentDateChange={currentDateChange}\r\n          currentViewName={currentViewName}\r\n          currentViewNameChange={currentViewNameChange}\r\n          endDate={endDate}\r\n          endDateChange={endDateChange}\r\n          views={[1, 7, 30, 365, 1000]}\r\n          isRTL={isRTL}\r\n          words={words}\r\n          theme={theme}\r\n        ></DateNavigatorReports>\r\n        <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n          <SortingState\r\n            defaultSorting={sort}\r\n            onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n          />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n          <SearchState />\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n          <VirtualTable\r\n            height={window.innerHeight - 181}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <DataTypeProvider\r\n            for={[\"time\"]}\r\n            formatterComponent={timeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\"]}\r\n            formatterComponent={currencyFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"opType\"]}\r\n            formatterComponent={opTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"docNo\", \"refNo\"]}\r\n            formatterComponent={samllFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"creditAcc\"]}\r\n            formatterComponent={(props) =>\r\n              customerAccountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"debitAcc\"]}\r\n            formatterComponent={(props) =>\r\n              accountFormatter(props, accounts, isRTL)\r\n            }\r\n          ></DataTypeProvider>\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addFinance}\r\n            editAction={editFinance}\r\n          >\r\n            <PopupFinanceAll></PopupFinanceAll>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {loading && <Loading isRTL={isRTL} />}\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const TasksContext = createContext<EventsContextTypes | any>({});\r\n\r\nexport default TasksContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import React from \"react\";\r\nimport { Task, ViewMode, Gantt } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\nimport \"./index.css\";\r\nexport function initTasks() {\r\n  const currentDate = new Date();\r\n  const tasks: Task[] = [\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Some Project\",\r\n      id: \"ProjectSample\",\r\n      progress: 25,\r\n      type: \"project\",\r\n\r\n      hideChildren: false,\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\r\n      end: new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        2,\r\n        12,\r\n        28\r\n      ),\r\n      name: \"Idea\",\r\n      id: \"Task 0\",\r\n      progress: 45,\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\r\n      name: \"Research\",\r\n      id: \"Task 1\",\r\n      progress: 25,\r\n      dependencies: [\"Task 0\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\r\n      name: \"Discussion with team\",\r\n      id: \"Task 2\",\r\n      progress: 10,\r\n      dependencies: [\"Task 1\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\r\n      name: \"Developing\",\r\n      id: \"Task 3\",\r\n      progress: 2,\r\n      dependencies: [\"Task 2\"],\r\n      type: \"task\",\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\r\n      name: \"Review\",\r\n      id: \"Task 4\",\r\n      type: \"task\",\r\n      progress: 70,\r\n      dependencies: [\"Task 2\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\r\n      name: \"Release\",\r\n      id: \"Task 6\",\r\n      progress: currentDate.getMonth(),\r\n      type: \"milestone\",\r\n      dependencies: [\"Task 4\"],\r\n      project: \"ProjectSample\",\r\n    },\r\n    {\r\n      start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 18),\r\n      end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 19),\r\n      name: \"Party Time\",\r\n      id: \"Task 9\",\r\n      progress: 0,\r\n      isDisabled: true,\r\n      type: \"task\",\r\n    },\r\n  ];\r\n  return tasks;\r\n}\r\n\r\nexport function getStartEndDateForProject(tasks: Task[], projectId: string) {\r\n  const projectTasks = tasks.filter((t) => t.project === projectId);\r\n  let start = projectTasks[0].start;\r\n  let end = projectTasks[0].end;\r\n\r\n  for (let i = 0; i < projectTasks.length; i++) {\r\n    const task = projectTasks[i];\r\n    if (start.getTime() > task.start.getTime()) {\r\n      start = task.start;\r\n    }\r\n    if (end.getTime() < task.end.getTime()) {\r\n      end = task.end;\r\n    }\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ntype ViewSwitcherProps = {\r\n  isChecked: boolean;\r\n  onViewListChange: (isChecked: boolean) => void;\r\n  onViewModeChange: (viewMode: ViewMode) => void;\r\n  isRTL: boolean;\r\n  view: any;\r\n};\r\nexport const ViewSwitcher: React.SFC<ViewSwitcherProps> = ({\r\n  onViewModeChange,\r\n  onViewListChange,\r\n  isChecked,\r\n  isRTL,\r\n  view,\r\n}) => {\r\n  return (\r\n    <div className=\"ViewContainer\">\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Day ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Day ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Day)}\r\n      >\r\n        {isRTL ? \"يوم\" : \"Day\"}\r\n      </button>\r\n      <button\r\n        className=\"Button\"\r\n        style={{\r\n          backgroundColor: view === ViewMode.Week ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Week ? \"#fff\" : undefined,\r\n        }}\r\n        onClick={() => onViewModeChange(ViewMode.Week)}\r\n      >\r\n        {isRTL ? \"اسبوع\" : \"Week\"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          backgroundColor: view === ViewMode.Month ? \"#2196f3\" : undefined,\r\n          fontWeight: \"bold\",\r\n          color: view === ViewMode.Month ? \"#fff\" : undefined,\r\n        }}\r\n        className=\"Button\"\r\n        onClick={() => onViewModeChange(ViewMode.Month)}\r\n      >\r\n        {isRTL ? \"شهر\" : \"Month\"}\r\n      </button>\r\n\r\n      <div style={{ fontWeight: \"bold\" }} className=\"Switch\">\r\n        <label className=\"Switch_Toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={isChecked}\r\n            onClick={() => onViewListChange(!isChecked)}\r\n          />\r\n          <span className=\"Slider\" />\r\n        </label>\r\n        {isRTL ? \"اظهار العناوين\" : \"Show Task List\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TasksGantt({ isRTL }) {\r\n  const [view, setView] = React.useState<ViewMode>(ViewMode.Day);\r\n  const [tasks, setTasks] = React.useState<Task[]>(initTasks());\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  const handleTaskChange = (task: Task) => {\r\n    console.log(\"On date change Id:\" + task.id);\r\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\r\n    if (task.project) {\r\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\r\n      const project =\r\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\r\n      if (\r\n        project.start.getTime() !== start.getTime() ||\r\n        project.end.getTime() !== end.getTime()\r\n      ) {\r\n        const changedProject = { ...project, start, end };\r\n        newTasks = newTasks.map((t) =>\r\n          t.id === task.project ? changedProject : t\r\n        );\r\n      }\r\n    }\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleTaskDelete = (task: Task) => {\r\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\r\n    if (conf) {\r\n      setTasks(tasks.filter((t) => t.id !== task.id));\r\n    }\r\n    return conf;\r\n  };\r\n\r\n  const handleProgressChange = async (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On progress change Id:\" + task.id);\r\n  };\r\n\r\n  const handleDblClick = (task: Task) => {\r\n    alert(\"On Double Click event Id:\" + task.id);\r\n  };\r\n\r\n  const handleSelect = (task: Task, isSelected: boolean) => {\r\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\r\n  };\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        direction: isRTL ? \"rtl\" : \"ltr\",\r\n        width: 1600,\r\n        marginInlineStart: 40,\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <ViewSwitcher\r\n        onViewModeChange={(viewMode) => setView(viewMode)}\r\n        onViewListChange={setIsChecked}\r\n        isChecked={isChecked}\r\n        isRTL={isRTL}\r\n        view={view}\r\n      />\r\n\r\n      <h3>Gantt With Limited Height</h3>\r\n      <Gantt\r\n        tasks={tasks}\r\n        viewMode={view}\r\n        onDateChange={handleTaskChange}\r\n        onDelete={handleTaskDelete}\r\n        onProgressChange={handleProgressChange}\r\n        onDoubleClick={handleDblClick}\r\n        onSelect={handleSelect}\r\n        onExpanderClick={handleExpanderClick}\r\n        listCellWidth={isChecked ? \"155px\" : \"\"}\r\n        ganttHeight={750}\r\n        columnWidth={columnWidth}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport PopupLayout from \"../pages/main/PopupLayout\";\r\nimport {\r\n  Gantt,\r\n  // Task,\r\n  // EventOption,\r\n  // StylingOption,\r\n  ViewMode,\r\n  // DisplayOption,\r\n} from \"gantt-task-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ViewSwitcher } from \"../pages/calendar/TasksGantt\";\r\n\r\nconst PopupGantt = ({ open, onClose, theme, tasks, isRTL }: any) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  let columnWidth = 60;\r\n  if (view === ViewMode.Month) {\r\n    columnWidth = 300;\r\n  } else if (view === ViewMode.Week) {\r\n    columnWidth = 250;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      const newrows = tasks.map((tsk: any) => {\r\n        return {\r\n          ...tsk,\r\n          start: new Date(tsk.start),\r\n          end: new Date(tsk.end),\r\n          name: tsk.title,\r\n        };\r\n      });\r\n      setRows(newrows);\r\n    }\r\n  }, [open]);\r\n\r\n  const onCloseForem = () => {\r\n    onClose();\r\n  };\r\n\r\n  const title = isRTL ? \"جدول المهمات\" : \"Tasks View\";\r\n\r\n  return (\r\n    <PopupLayout\r\n      isRTL={isRTL}\r\n      open={open}\r\n      onClose={onCloseForem}\r\n      title={title}\r\n      onSubmit={() => null}\r\n      theme={theme}\r\n      onlyclose\r\n      alrt={{}}\r\n      maxWidth=\"xx\"\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              direction: \"ltr\",\r\n            }}\r\n          >\r\n            <ViewSwitcher\r\n              onViewModeChange={(viewMode) => setView(viewMode)}\r\n              onViewListChange={setIsChecked}\r\n              isChecked={isChecked}\r\n              isRTL={isRTL}\r\n              view={view}\r\n            />\r\n\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              {isRTL ? \"جدول المهمات\" : \"Task View\"}\r\n            </h2>\r\n            <Gantt\r\n              tasks={rows}\r\n              viewMode={view}\r\n              locale=\"ar\"\r\n              // onDateChange={handleTaskChange}\r\n              // onDelete={handleTaskDelete}\r\n              // onProgressChange={handleProgressChange}\r\n              // onDoubleClick={handleDblClick}\r\n              // onSelect={handleSelect}\r\n              // onExpanderClick={handleExpanderClick}\r\n              listCellWidth={isChecked ? \"155px\" : \"\"}\r\n              ganttHeight={500}\r\n              columnWidth={columnWidth}\r\n              barProgressColor=\"#58ac58\"\r\n              barBackgroundColor=\"#bbb\"\r\n              // barBackgroundSelectedColor=\"#bbb\"\r\n              barProgressSelectedColor=\"#58ac58\"\r\n              todayColor=\"#d9eed9\"\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </PopupLayout>\r\n  );\r\n};\r\n\r\nexport default PopupGantt;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport {\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  getLandingChartData,\r\n} from \"../../graphql\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  createdAtFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  invoiceReceiptFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  taskNameFormatter,\r\n  // taskStatusFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { Box, Button, colors } from \"@material-ui/core\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport getTasks from \"../../graphql/query/getTasks\";\r\nimport PopupTask from \"../../pubups/PopupTask\";\r\nimport createTask from \"../../graphql/mutation/createTask\";\r\nimport updateTask from \"../../graphql/mutation/updateTask\";\r\nimport deleteTaskById from \"../../graphql/mutation/deleteTaskById\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport PopupGantt from \"../../pubups/PopupGantt\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport { TableComponent } from \"../../Shared/TableComponent\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport PopupTaskView from \"../../pubups/PopupTaskView\";\r\n\r\nexport const getRowId = (row: { _id: any }) => row._id;\r\n\r\nexport default function Tasks({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  isEditor,\r\n  theme,\r\n  company,\r\n  servicesproducts,\r\n}) {\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [columns] = useState([\r\n    col.title,\r\n    col.createdAt,\r\n    // col.docNo,\r\n    col.start,\r\n    col.end,\r\n    col.customer,\r\n    col.department,\r\n    col.employee,\r\n    col.evQty,\r\n    col.progress,\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openGantt, setOpenGantt] = useState(false);\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n  const [periodvalue, setPeriodvalue] = useState<any>(null);\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n  const {\r\n    state: { currentDate, currentViewName, endDate },\r\n    dispatch,\r\n  } = useContext(TasksContext);\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const [loadTasks, tasksData]: any = useLazyQuery(getTasks, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const refresQuery = {\r\n    refetchQueries: [\r\n      {\r\n        query: getTasks,\r\n        variables: {\r\n          start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n          end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n        },\r\n      },\r\n      {\r\n        query: getLandingChartData,\r\n      },\r\n      {\r\n        query: getTasks,\r\n      },\r\n      {\r\n        query: getCustomers,\r\n      },\r\n      {\r\n        query: getEmployees,\r\n      },\r\n      {\r\n        query: getDepartments,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks({});\r\n  }, []);\r\n  useEffect(() => {\r\n    const variables = {\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end ? end.setHours(23, 59, 59, 999) : undefined,\r\n    };\r\n    loadTasks({\r\n      variables,\r\n    });\r\n  }, [start, end]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.title.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [addTask] = useMutation(createTask, refresQuery);\r\n  const [editTask] = useMutation(updateTask, refresQuery);\r\n  const [removeTaskById] = useMutation(deleteTaskById, refresQuery);\r\n  const { customers, addCustomer, editCustomer } = useCustomers();\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeTaskById({ variables: { _id } });\r\n      if (res?.data?.deleteTaskById?.ok === false) {\r\n        if (res?.data?.deleteTaskById?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasksData?.loading) {\r\n      setLoading(true);\r\n    }\r\n    if (tasksData?.data?.getTasks?.data) {\r\n      const { data } = tasksData.data.getTasks;\r\n      setRows(data);\r\n      setLoading(false);\r\n    }\r\n  }, [tasksData]);\r\n\r\n  const refresh = () => {\r\n    tasksData?.refetch();\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n      periodvalue={periodvalue}\r\n      setPeriodvalue={setPeriodvalue}\r\n      bgcolor={colors.deepPurple[400]}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            color={colors.deepPurple[700]}\r\n            bgcolor={colors.deepPurple[50]}\r\n          ></DateNavigatorReports>\r\n          <Box style={{}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setOpenGantt(true)}\r\n            >\r\n              {isRTL ? \"عرض المهمات\" : \"Task View\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Paper>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState />\r\n            <EditingState onCommitChanges={commitChanges} />\r\n            <SearchState />\r\n\r\n            <IntegratedSorting />\r\n            <IntegratedFiltering />\r\n\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n              tableComponent={TableComponent}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              defaultHiddenColumnNames={[\r\n                col.createdAt.name,\r\n                col.department.name,\r\n                col.evQty.name,\r\n                col.toatlExpenses.name,\r\n                col.start.name,\r\n                col.end.name,\r\n              ]}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"title\"]}\r\n              formatterComponent={(props: any) =>\r\n                nameLinkFormat({ ...props, setItem, setOpenItem })\r\n              }\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"start\", \"end\", \"createdAt\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"due\"]}\r\n              formatterComponent={dueAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\", \"toatlExpenses\", \"totalpaid\"]}\r\n              formatterComponent={currencyFormatterEmpty}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"totalinvoiced\"]}\r\n              formatterComponent={invoiceReceiptFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"income\"]}\r\n              formatterComponent={incomeAmountFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"tasktype\"]}\r\n              formatterComponent={taskNameFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"progress\"]}\r\n              formatterComponent={progressFormatter}\r\n            ></DataTypeProvider>\r\n\r\n            {isEditor && (\r\n              <TableEditColumn\r\n                showEditCommand\r\n                showDeleteCommand\r\n                showAddCommand\r\n                commandComponent={Command}\r\n              ></TableEditColumn>\r\n            )}\r\n\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <SearchPanel\r\n              inputComponent={(props: any) => {\r\n                return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n              }}\r\n            />\r\n\r\n            <PopupEditing addAction={addTask} editAction={editTask}>\r\n              <PopupTask\r\n                employees={employees}\r\n                departments={departments}\r\n                customers={customers}\r\n                addCustomer={addCustomer}\r\n                editCustomer={editCustomer}\r\n                company={company}\r\n                servicesproducts={servicesproducts}\r\n                theme={theme}\r\n                isEditor={isEditor}\r\n                refresh={refresh}\r\n                startrange={start}\r\n                endrange={end}\r\n              ></PopupTask>\r\n            </PopupEditing>\r\n          </Grid>\r\n          {loading && <Loading isRTL={isRTL} />}\r\n          <PopupGantt\r\n            open={openGantt}\r\n            onClose={() => setOpenGantt(false)}\r\n            tasks={rows}\r\n            theme={theme}\r\n            isRTL={isRTL}\r\n          ></PopupGantt>\r\n          {alrt.show && (\r\n            <AlertLocal\r\n              isRTL={isRTL}\r\n              type={alrt?.type}\r\n              msg={alrt?.msg}\r\n              top\r\n            ></AlertLocal>\r\n          )}\r\n          {item && (\r\n            <PopupTaskView\r\n              open={openItem}\r\n              onClose={onCloseItem}\r\n              item={item}\r\n              tasks={rows}\r\n              isNew={false}\r\n              theme={theme}\r\n              employees={employees}\r\n              departments={departments}\r\n              customers={customers}\r\n              addCustomer={addCustomer}\r\n              editCustomer={editCustomer}\r\n              company={company}\r\n              servicesproducts={servicesproducts}\r\n              isEditor={isEditor}\r\n              refresh={refresh}\r\n              startrange={start}\r\n              endrange={end}\r\n              addAction={addTask}\r\n              editAction={editTask}\r\n            ></PopupTaskView>\r\n          )}\r\n        </Paper>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initTasksContext = {\r\n  currentViewName: \"Week\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const tasksReducer = (state: EventsContextTypes, action: any) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportDocuments(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $status: Int\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportDocuments(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      status: $status\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        opType\r\n        taskId\r\n        branch\r\n        time\r\n        title\r\n        startDate\r\n        endDate\r\n        allDay\r\n        rRule\r\n        reminder\r\n        exDate\r\n        allowDrag\r\n\r\n        autoNo\r\n        docNo\r\n        priority\r\n        amount\r\n        status\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n        customerPhone\r\n\r\n        itemId\r\n        itemName\r\n        itemNameAr\r\n\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        refNo\r\n        refType\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const DocumentsReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default DocumentsReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  documentTimeFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportDocuments from \"../../graphql/query/getReportDocuments\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function DocumentsReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    { name: \"time\", title: words.time },\r\n    col.opType,\r\n    col.docNo,\r\n    col.refNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    col.amount,\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportDocuments, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(DocumentsReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportDocuments\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          types: inActiveColumns(\"types\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"amount\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"amount\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 4 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={[]}\r\n              setServicevalue={() => null}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n          <Box\r\n            style={{\r\n              marginTop: -2,\r\n              zIndex: 115,\r\n            }}\r\n          >\r\n            <FilterSelectCkeckBox\r\n              options={eventStatus}\r\n              value={status}\r\n              setValue={setStatusDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              name=\"status\"\r\n              nomulti\r\n              width={180}\r\n            ></FilterSelectCkeckBox>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"startDate\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"time\"]}\r\n              formatterComponent={documentTimeFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initDocumentsReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const documentsReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { SalesReportContextTypes } from \"../../types\";\r\n\r\nexport const ServicesReportContext = createContext<\r\n  SalesReportContextTypes | any\r\n>({});\r\n\r\nexport default ServicesReportContext;\r\n\r\n// dispatch({ type: \"setCalendar\", payload: data });\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport default gql`\r\n  query getReportServices(\r\n    $types: [Int]\r\n    $serviceIds: [String]\r\n    $categoryIds: [String]\r\n    $departmentIds: [String]\r\n    $employeeIds: [String]\r\n    $customerIds: [String]\r\n    $supplierIds: [String]\r\n    $taskIds: [Int]\r\n    $start: Date\r\n    $end: Date\r\n  ) {\r\n    getReportServices(\r\n      types: $types\r\n      serviceIds: $serviceIds\r\n      categoryIds: $categoryIds\r\n      departmentIds: $departmentIds\r\n      employeeIds: $employeeIds\r\n      customerIds: $customerIds\r\n      supplierIds: $supplierIds\r\n      taskIds: $taskIds\r\n      start: $start\r\n      end: $end\r\n    ) {\r\n      ok\r\n      error\r\n      message\r\n      count\r\n      data {\r\n        _id\r\n        branch\r\n        autoNo\r\n        docNo\r\n        indx\r\n        itemId\r\n        itemType\r\n        itemBarcode\r\n        itemName\r\n        itemNameAr\r\n        itemDesc\r\n        itemDescPurchase\r\n        itemSize\r\n        itemWeight\r\n        itemColor\r\n        itemCost\r\n        itemUnit\r\n        itemPrice\r\n        itemPhoto\r\n        opId\r\n        opType\r\n        opTime\r\n        opDocNo\r\n        eventId\r\n        taskId\r\n        qty\r\n        doneQty\r\n        totalCost\r\n        total\r\n        amount\r\n        categoryId\r\n        categoryName\r\n        categoryNameAr\r\n        brandId\r\n        brandName\r\n        brandNameAr\r\n        departmentId\r\n        departmentName\r\n        departmentNameAr\r\n        departmentColor\r\n        employeeId\r\n        employeeName\r\n        employeeNameAr\r\n        employeeColor\r\n        employeePhone\r\n\r\n        customerId\r\n        customerName\r\n        customerNameAr\r\n\r\n        supplierId\r\n        supplierName\r\n        supplierNameAr\r\n\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  SummaryState,\r\n  IntegratedGrouping,\r\n  IntegratedSummary,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Toolbar,\r\n  VirtualTable,\r\n  ExportPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport { getRowId } from \"../../common\";\r\nimport {\r\n  covertToDate,\r\n  covertToTimeDateDigit,\r\n  covertToTimeOnly,\r\n  createdAtFormatter,\r\n  currencyFormatter,\r\n  eventStatusFormatter,\r\n  eventStatusPrintDataFormatter,\r\n  moneyFormat,\r\n  opTypeFormatter,\r\n  taskIdFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { Box, fade, IconButton, withStyles } from \"@material-ui/core\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport ReportsFilter from \"../../Shared/ReportsFilter\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport saveAs from \"file-saver\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport { reportprint } from \"../../common/ipc\";\r\nimport _ from \"lodash\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { ReportGroupBySwitcher } from \"../calendar/common/ReportGroupBySwitcher\";\r\nimport DateNavigatorReports from \"../../components/filters/DateNavigatorReports\";\r\nimport { documentTypes, groupList } from \"../../constants/reports\";\r\nimport FilterSelectCkeckBox from \"../../Shared/FilterSelectCkeckBox\";\r\nimport { eventStatus } from \"../../constants\";\r\nimport { groupSumCount } from \"../../common/reports\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport getReportServices from \"../../graphql/query/getReportServices\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\n\r\nconst styles = (theme) => ({\r\n  tableStriped: {\r\n    \"& tbody tr:nth-of-type(odd)\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.05),\r\n    },\r\n  },\r\n});\r\n\r\nconst TableComponentBase = ({ classes, ...restProps }) => (\r\n  <VirtualTable.Table {...restProps} className={classes.tableStriped} />\r\n);\r\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\r\n  TableComponentBase\r\n);\r\nexport const TableComponent2 = withStyles(\r\n  {},\r\n  { name: \"TableComponent\" }\r\n)(TableComponentBase);\r\n\r\nexport default function ServicesReport({\r\n  isRTL,\r\n  words,\r\n  menuitem,\r\n  services,\r\n  company,\r\n  theme,\r\n  isEditor,\r\n}: any) {\r\n  const [start, setStart] = useState<any>(null);\r\n  const [end, setEnd] = useState<any>(null);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [printRows, setPrintRows]: any = useState([]);\r\n  const [total, setTotal]: any = useState(null);\r\n  const [totalRows, setTotalRows]: any = useState(null);\r\n\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const [activecolumns, setActivecolumns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [columns] = useState([\r\n    col.opTime,\r\n    col.item,\r\n    col.opType,\r\n    col.opDocNo,\r\n    col.customer,\r\n    col.taskId,\r\n    col.employee,\r\n    col.department,\r\n    { name: \"qty\", title: words.qty },\r\n    { name: \"total\", title: words.amount },\r\n  ]);\r\n\r\n  const [tableColumnVisibilityColumnExtensions] = useState([\r\n    { columnName: col.opTime.name, togglingEnabled: false },\r\n    // { columnName: col.amount.name, togglingEnabled: false },\r\n  ]);\r\n\r\n  const [getSummary, summaryData]: any = useLazyQuery(getReportServices, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  const { customers } = useCustomers();\r\n  const { departments } = useDepartments();\r\n  const { employees } = useEmployees();\r\n  const {\r\n    state: {\r\n      currentDate,\r\n      currentViewName,\r\n      endDate,\r\n      servicevalue,\r\n      departvalue,\r\n      emplvalue,\r\n      custvalue,\r\n      taskvalue,\r\n      group,\r\n      groupby,\r\n      sumcolumn,\r\n      status,\r\n      sort,\r\n      types,\r\n    },\r\n    dispatch,\r\n  } = useContext(ServicesReportContext);\r\n  const { tasks } = useTasks();\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  const endDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setEndDate\", payload: curDate });\r\n  };\r\n\r\n  const setDepartvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setDepartvalue\", payload: value });\r\n  };\r\n  const setEmplvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setEmplvalue\", payload: value });\r\n  };\r\n  const setCustvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setCustvalue\", payload: value });\r\n  };\r\n  const setTaskvalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setTaskvalue\", payload: value });\r\n  };\r\n  const setTypesDispatch = (value: any) => {\r\n    dispatch({ type: \"setTypes\", payload: value });\r\n  };\r\n  const setServicevalueDispatch = (value: any) => {\r\n    dispatch({ type: \"setServicevalue\", payload: value });\r\n  };\r\n\r\n  const setGroupbyDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroupby\", payload: value });\r\n  };\r\n  const setGroupDispatch = (value: any) => {\r\n    dispatch({ type: \"setGroup\", payload: value });\r\n  };\r\n  const setSumcolumnDispatch = (value: any) => {\r\n    dispatch({ type: \"setSumcolumn\", payload: value });\r\n  };\r\n  const setStatusDispatch = (value: any) => {\r\n    dispatch({ type: \"setStatus\", payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slsData = summaryData?.data?.[\"getReportServices\"]?.data || [];\r\n\r\n    setRows(slsData);\r\n    if (group) {\r\n      const res = groupSumCount({\r\n        list: slsData,\r\n        name: sumcolumn,\r\n      });\r\n      setTotalRows(res);\r\n    }\r\n    let sum = 0;\r\n    slsData.forEach((a: any) => (sum += a.amount));\r\n    setTotal(sum);\r\n  }, [summaryData]);\r\n\r\n  const getIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv._id) : undefined;\r\n  const getTaskIds = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.id) : undefined;\r\n  const getTypesValue = (list: any) =>\r\n    list && list?.length > 0 ? list.map((sv: any) => sv.value) : undefined;\r\n  const fetchData = () => {\r\n    const variables = {\r\n      serviceIds: getIds(servicevalue),\r\n      departmentIds: getIds(departvalue),\r\n      employeeIds: getIds(emplvalue),\r\n      customerIds: getIds(custvalue),\r\n      taskIds: getTaskIds(taskvalue),\r\n      types: getTypesValue(types),\r\n      start: start ? start.setHours(0, 0, 0, 0) : undefined,\r\n      end: end\r\n        ? end.setHours(23, 59, 59, 999)\r\n        : new Date().setHours(23, 59, 59, 999),\r\n      status: status ? status.id : undefined,\r\n    };\r\n    getSummary({\r\n      variables,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [start, end, group, groupby, sumcolumn]);\r\n\r\n  const exporterRef: any = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n\r\n  const onSave = (workbook: any) => {\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      const now = new Date();\r\n      const name = `events-report-${covertToTimeDateDigit(now)}`;\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        `${name}.xlsx`\r\n      );\r\n    });\r\n  };\r\n\r\n  const inActiveColumns = (name: any) => {\r\n    const fc = activecolumns.filter((ac: any) => ac.ref === name);\r\n    if (fc && fc.length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n    } else {\r\n      const sortRows = _.orderBy(\r\n        rows,\r\n        [sort[0].columnName],\r\n        [sort[0].direction]\r\n      );\r\n      const printrows = sortRows.map((row: any) => {\r\n        return {\r\n          date: inActiveColumns(\"date\")\r\n            ? row.startDate\r\n              ? covertToDate(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          time: inActiveColumns(\"time\")\r\n            ? row.startDate\r\n              ? covertToTimeOnly(row.startDate)\r\n              : \" - \"\r\n            : undefined,\r\n          docNo: inActiveColumns(\"docNo\")\r\n            ? row.docNo\r\n              ? row.docNo\r\n              : \" - \"\r\n            : undefined,\r\n          status: inActiveColumns(\"status\")\r\n            ? row.status\r\n              ? eventStatusPrintDataFormatter(row.status)\r\n              : \" - \"\r\n            : undefined,\r\n          employee: inActiveColumns(\"employee\")\r\n            ? row[col.employee.name]\r\n              ? row[col.employee.name]\r\n              : \" - \"\r\n            : undefined,\r\n          service: inActiveColumns(\"service\")\r\n            ? row[col.service.name]\r\n              ? row[col.service.name]\r\n              : \" - \"\r\n            : undefined,\r\n          department: inActiveColumns(\"department\")\r\n            ? row[col.department.name]\r\n              ? row[col.department.name]\r\n              : \" - \"\r\n            : undefined,\r\n          customer: inActiveColumns(\"customer\")\r\n            ? row[col.customer.name]\r\n              ? row[col.customer.name]\r\n              : \" - \"\r\n            : undefined,\r\n          taskId: inActiveColumns(\"taskId\")\r\n            ? row[col.taskId.name]\r\n              ? row[col.taskId.name]\r\n              : \" - \"\r\n            : undefined,\r\n          opType: inActiveColumns(\"opType\")\r\n            ? row[col.opType.name]\r\n              ? row[col.opType.name]\r\n              : \" - \"\r\n            : undefined,\r\n          amount: inActiveColumns(\"amount\")\r\n            ? row.amount\r\n              ? moneyFormat(row.amount)\r\n              : \" - \"\r\n            : undefined,\r\n        };\r\n      });\r\n\r\n      setPrintRows(printrows);\r\n    }\r\n  }, [activecolumns, rows, sort]);\r\n\r\n  const arrangeParing = () => {\r\n    const cols = activecolumns.map((co: any) => {\r\n      return { name: co.title };\r\n    });\r\n\r\n    const filters: any = [];\r\n    if (emplvalue) {\r\n      filters.push({ name: isRTL ? emplvalue?.nameAr : emplvalue?.name });\r\n    }\r\n    if (status) {\r\n      filters.push({ name: isRTL ? status?.nameAr : status?.name });\r\n    }\r\n    if (departvalue) {\r\n      filters.push({ name: isRTL ? departvalue?.nameAr : departvalue?.name });\r\n    }\r\n\r\n    if (taskvalue) {\r\n      filters.push({ name: isRTL ? taskvalue?.nameAr : taskvalue?.name });\r\n    }\r\n\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(total) : \"\",\r\n      reportname: isRTL ? \"تقرير المواعيد\" : \"Appointment Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      filters,\r\n      color: \"#afbddf\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: printRows, cols, ...rest });\r\n  };\r\n\r\n  const arrangeGroupParing = () => {\r\n    const cols = [\r\n      { name: isRTL ? \"الاسم\" : \"Name\" },\r\n      { name: isRTL ? \"العدد\" : \"Count\" },\r\n      { name: isRTL ? \"المجموع\" : \"Total\" },\r\n    ];\r\n    const readyItems = totalRows.items.map((it: any) => {\r\n      return {\r\n        ...it,\r\n        total: moneyFormat(it.total),\r\n      };\r\n    });\r\n    const rest = {\r\n      isRTL,\r\n      totl: words.total,\r\n      totalamount: total ? moneyFormat(totalRows.total) : \"\",\r\n      count: totalRows?.count,\r\n      reportname: isRTL ? \"تقرير المبيعات\" : \"Sales Report\",\r\n      logo: company.logo,\r\n      phone: company.tel1,\r\n      mobile: company.mob,\r\n      address: company.address,\r\n      company: isRTL ? company.nameAr : company.name,\r\n      start: start ? covertToDate(start) : \"\",\r\n      end: end ? covertToDate(end) : \"\",\r\n      color: \"#b2e2be\",\r\n      now: covertToTimeDateDigit(new Date()),\r\n    };\r\n\r\n    reportprint({ rows: readyItems, cols, ...rest });\r\n  };\r\n\r\n  const refresh = () => {\r\n    summaryData?.refetch();\r\n  };\r\n\r\n  const onSwitcherChange = (e: any) => {\r\n    if (e.target.value === \"none\") {\r\n      setGroupDispatch(false);\r\n      setGroupbyDispatch(\"none\");\r\n    } else {\r\n      setGroupDispatch(true);\r\n      setGroupbyDispatch(e.target.value);\r\n      setSumcolumnDispatch(col[e.target.value].name);\r\n    }\r\n  };\r\n\r\n  const setSortDispatch = (value: any) => {\r\n    dispatch({ type: \"setSort\", payload: value });\r\n  };\r\n\r\n  const totalSummaryItems = [\r\n    { columnName: col.docNo.name, type: \"count\" },\r\n    { columnName: \"total\", type: \"sum\" },\r\n  ];\r\n\r\n  const grouping = [{ columnName: sumcolumn }];\r\n  const groupSummaryItems = [\r\n    {\r\n      columnName: col.docNo.name,\r\n      type: \"count\",\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"total\",\r\n      type: \"sum\",\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n  const groupOptions = groupList(isRTL).filter(\r\n    (item: any) => item.id !== 6 && item.id !== 7\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refresh}\r\n    >\r\n      <Paper>\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            left: isRTL ? 145 : undefined,\r\n            right: isRTL ? undefined : 145,\r\n            top: 68,\r\n            zIndex: 100,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={group ? arrangeGroupParing : arrangeParing}\r\n            title=\"Print Report\"\r\n            size=\"small\"\r\n          >\r\n            <PrintIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 111,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <DateNavigatorReports\r\n            setStart={setStart}\r\n            setEnd={setEnd}\r\n            currentDate={currentDate}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentViewNameChange={currentViewNameChange}\r\n            endDate={endDate}\r\n            endDateChange={endDateChange}\r\n            views={[1, 7, 30, 365, 1000]}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n          ></DateNavigatorReports>\r\n          <Box\r\n            display=\"flex\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingLeft: 20,\r\n              paddingRight: 20,\r\n              marginTop: -4,\r\n            }}\r\n          >\r\n            <ReportsFilter\r\n              servicevalue={servicevalue}\r\n              setServicevalue={setServicevalueDispatch}\r\n              departvalue={departvalue}\r\n              setDepartvalue={setDepartvalueDispatch}\r\n              emplvalue={emplvalue}\r\n              setEmplvalue={setEmplvalueDispatch}\r\n              departments={departments}\r\n              employees={employees}\r\n              services={services}\r\n              customers={customers}\r\n              custvalue={custvalue}\r\n              setCustvalue={setCustvalueDispatch}\r\n              tasks={tasks}\r\n              taskvalue={taskvalue}\r\n              setTaskvalue={setTaskvalueDispatch}\r\n              words={words}\r\n              isRTL={isRTL}\r\n              documentTypes={documentTypes}\r\n              types={types}\r\n              setTypes={setTypesDispatch}\r\n            ></ReportsFilter>\r\n            <ReportGroupBySwitcher\r\n              options={groupOptions}\r\n              value={groupby}\r\n              onChange={onSwitcherChange}\r\n              isRTL={isRTL}\r\n            ></ReportGroupBySwitcher>\r\n          </Box>\r\n        </Box>\r\n        <Paper style={{ height: window.innerHeight - 85, overflow: \"auto\" }}>\r\n          <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n            <SortingState\r\n              defaultSorting={sort}\r\n              onSortingChange={(srt: any) => setSortDispatch(srt)}\r\n            />\r\n            {group && <GroupingState grouping={grouping} />}\r\n            <SummaryState\r\n              totalItems={totalSummaryItems}\r\n              groupItems={groupSummaryItems}\r\n            />\r\n            {group && <IntegratedGrouping />}\r\n            <IntegratedSummary />\r\n            <IntegratedSorting />\r\n            <VirtualTable\r\n              height={window.innerHeight - 133}\r\n              tableComponent={!group ? TableComponent : TableComponent2}\r\n              messages={{\r\n                noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n              }}\r\n              estimatedRowHeight={40}\r\n            />\r\n            <TableHeaderRow showSortingControls />\r\n            <TableColumnVisibility\r\n              columnExtensions={tableColumnVisibilityColumnExtensions}\r\n              onHiddenColumnNamesChange={(hcs: string[]) => {\r\n                const all = [...columns];\r\n                const newcol = all.filter((a: any) => !hcs.includes(a.name));\r\n                newcol.sort((a: any, b: any) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                setActivecolumns(newcol);\r\n              }}\r\n            />\r\n            <DataTypeProvider\r\n              for={[\"opTime\"]}\r\n              formatterComponent={createdAtFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"status\"]}\r\n              formatterComponent={eventStatusFormatter}\r\n            ></DataTypeProvider>\r\n            <DataTypeProvider\r\n              for={[\"amount\"]}\r\n              formatterComponent={currencyFormatter}\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"taskId\"]}\r\n              formatterComponent={(props: any) =>\r\n                taskIdFormatter({ ...props, tasks })\r\n              }\r\n            ></DataTypeProvider>{\" \"}\r\n            <DataTypeProvider\r\n              for={[\"opType\"]}\r\n              formatterComponent={opTypeFormatter}\r\n            ></DataTypeProvider>\r\n            <Toolbar />\r\n            <ColumnChooser />\r\n            <ExportPanel startExport={startExport} />\r\n            {group && (\r\n              <TableGroupRow\r\n                messages={{\r\n                  sum: isRTL ? \"المجموع\" : \"Total\",\r\n                  count: isRTL ? \"العدد\" : \"Count\",\r\n                  sumOf: isRTL ? \"المجموع\" : \"Total\",\r\n                  countOf: isRTL ? \"العدد\" : \"Count\",\r\n                }}\r\n                showColumnsWhenGrouped\r\n              />\r\n            )}\r\n            <TableSummaryRow\r\n              messages={{\r\n                sum: isRTL ? \"المجموع\" : \"Total\",\r\n                count: isRTL ? \"العدد\" : \"Count\",\r\n              }}\r\n            ></TableSummaryRow>\r\n          </Grid>\r\n        </Paper>\r\n        <GridExporter\r\n          ref={exporterRef}\r\n          rows={rows}\r\n          columns={columns}\r\n          onSave={onSave}\r\n        />\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { EventsContextTypes } from \"../../types\";\r\n\r\nexport const initServicesReportContext = {\r\n  currentViewName: \"Month\",\r\n  currentDate: new Date(),\r\n  endDate: new Date(),\r\n  servicevalue: [],\r\n  departvalue: [],\r\n  emplvalue: [],\r\n  custvalue: [],\r\n  catvalue: [],\r\n  taskvalue: [],\r\n  types: [],\r\n  groupby: \"none\",\r\n  group: false,\r\n  sumcolumn: \"none\",\r\n  status: null,\r\n  sort: [{ columnName: \"startDate\", direction: \"desc\" }],\r\n};\r\n\r\nexport const servicesReportReducer = (\r\n  state: EventsContextTypes,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"setCurrentViewName\":\r\n      return { ...state, currentViewName: action.payload };\r\n    case \"setCurrentDate\":\r\n      return { ...state, currentDate: action.payload };\r\n    case \"setEndDate\":\r\n      return { ...state, endDate: action.payload };\r\n    case \"setServicevalue\":\r\n      return { ...state, servicevalue: action.payload };\r\n    case \"setDepartvalue\":\r\n      return { ...state, departvalue: action.payload };\r\n    case \"setEmplvalue\":\r\n      return { ...state, emplvalue: action.payload };\r\n    case \"setCustvalue\":\r\n      return { ...state, custvalue: action.payload };\r\n    case \"setCatvalue\":\r\n      return { ...state, catvalue: action.payload };\r\n    case \"setTaskvalue\":\r\n      return { ...state, taskvalue: action.payload };\r\n    case \"setTypes\":\r\n      return { ...state, types: action.payload };\r\n    case \"setGroupby\":\r\n      return { ...state, groupby: action.payload };\r\n    case \"setGroup\":\r\n      return { ...state, group: action.payload };\r\n    case \"setSumcolumn\":\r\n      return { ...state, sumcolumn: action.payload };\r\n    case \"setStatus\":\r\n      return { ...state, status: action.payload };\r\n    case \"setSort\":\r\n      return { ...state, sort: action.payload };\r\n    default:\r\n      throw new Error(\"Unexpected action\");\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, Loading, PopupEditing } from \"../../Shared\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupEmployee } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  daysoffFormatter,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorAlert, errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport useHResourses from \"../../hooks/useHResourses\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport PopupEmployeeView from \"../../pubups/PopupEmployeeView\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { useCustomers, useDepartments } from \"../../hooks\";\r\n\r\nexport default function ManageEmployees({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  servicesproducts,\r\n  company,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"phone\", title: words.phoneNumber },\r\n    { name: \"email\", title: words.email },\r\n    {\r\n      name: isRTL ? \"departmentNameAr\" : \"departmentName\",\r\n      title: words.department,\r\n    },\r\n    { name: \"info\", title: words.info },\r\n    { name: \"daysoff\", title: isRTL ? \"يوم العطلة\" : \"Day Off\" },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    employees,\r\n    addEmployee,\r\n    editEmployee,\r\n    removeEmployee,\r\n    refreshemployee,\r\n  } = useHResourses();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (employees && employees.length > 0) {\r\n        const opened = employees.filter((ts: any) => ts._id === item._id)?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [employees]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n\r\n      const res = await removeEmployee({ variables: { _id } });\r\n      if (res?.data?.deleteEmployee?.ok === false) {\r\n        if (res?.data?.deleteEmployee?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshemployee}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n        <Grid\r\n          rows={employees.filter((em: any) => em.resType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\r\n              \"email\",\r\n              \"info\",\r\n              \"phone\",\r\n              \"daysoff\",\r\n              \"avatar\",\r\n            ]}\r\n          />\r\n\r\n          <DataTypeProvider\r\n            for={[\"daysoff\"]}\r\n            formatterComponent={(props: any) =>\r\n              daysoffFormatter({ ...props, isRTL })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addEmployee}\r\n            editAction={editEmployee}\r\n          >\r\n            <PopupEmployee></PopupEmployee>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupEmployeeView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addEmployee}\r\n          editAction={editEmployee}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupEmployeeView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  EditingState,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableColumnVisibility,\r\n  ColumnChooser,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Command, errorAlert, Loading, PopupEditing } from \"../../Shared\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport { getRowId } from \"../../common\";\r\nimport { PopupDeprtment } from \"../../pubups\";\r\nimport {\r\n  avatarPatternFormatter,\r\n  currencyFormatterEmpty,\r\n  dueAmountFormatter,\r\n  incomeAmountFormatter,\r\n  nameLinkFormat,\r\n  progressFormatter,\r\n  sectionsTypeFormatter,\r\n} from \"../../Shared/colorFormat\";\r\nimport { AlertLocal, SearchTable } from \"../../components\";\r\nimport { errorDeleteAlert } from \"../../Shared/helpers\";\r\nimport PageLayout from \"../main/PageLayout\";\r\nimport { getColumns } from \"../../common/columns\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopupDepartmentView from \"../../pubups/PopupDepartmentView\";\r\n\r\nexport default function ManageDepartments({\r\n  isRTL,\r\n  words,\r\n  isEditor,\r\n  theme,\r\n  menuitem,\r\n  company,\r\n  servicesproducts,\r\n}: any) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [alrt, setAlrt] = useState({ show: false, msg: \"\", type: undefined });\r\n  const [item, setItem] = useState(null);\r\n  const [openItem, setOpenItem] = useState(false);\r\n  const col = getColumns({ isRTL, words });\r\n\r\n  const { tasks } = useTasks();\r\n  const { employees } = useEmployees();\r\n  const { customers } = useCustomers();\r\n\r\n  const onCloseItem = () => {\r\n    setOpenItem(false);\r\n    setItem(null);\r\n  };\r\n\r\n  const [columns] = useState([\r\n    { name: isRTL ? \"nameAr\" : \"name\", title: words.name },\r\n    { name: \"avatar\", title: words.color },\r\n    { name: \"depType\", title: words.type },\r\n    { name: \"desc\", title: words.description },\r\n    { name: \"amount\", title: isRTL ? \"الاجمالي\" : \"Total\" },\r\n    col.progress,\r\n    col.totalinvoiced,\r\n    col.totalpaid,\r\n    {\r\n      id: 40,\r\n      ref: \"due\",\r\n      name: \"due\",\r\n      title: isRTL ? \"المتبقي\" : \"Due Payment\",\r\n    },\r\n    col.toatlExpenses,\r\n    {\r\n      id: 38,\r\n      ref: \"income\",\r\n      name: \"income\",\r\n      title: isRTL ? \"صافي الايراد\" : \"Total Income\",\r\n    },\r\n  ]);\r\n\r\n  const {\r\n    departments,\r\n    addDepartment,\r\n    editDepartment,\r\n    removeDepartment,\r\n    refreshdepartment,\r\n  } = useDepartments();\r\n\r\n  useEffect(() => {\r\n    if (openItem) {\r\n      if (departments && departments.length > 0) {\r\n        const opened = departments.filter(\r\n          (ts: any) => ts._id === item._id\r\n        )?.[0];\r\n        setItem(opened);\r\n      }\r\n    }\r\n  }, [departments]);\r\n\r\n  const commitChanges = async ({ deleted }) => {\r\n    if (deleted) {\r\n      const _id = deleted[0];\r\n      setLoading(true);\r\n      const res = await removeDepartment({ variables: { _id } });\r\n      if (res?.data?.deleteDepartment?.ok === false) {\r\n        if (res?.data?.deleteDepartment?.error.includes(\"related\")) {\r\n          await errorDeleteAlert(setAlrt, isRTL);\r\n        } else {\r\n          await errorAlert(setAlrt, isRTL);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      menuitem={menuitem}\r\n      isRTL={isRTL}\r\n      words={words}\r\n      isEditor={isEditor}\r\n      theme={theme}\r\n      refresh={refreshdepartment}\r\n    >\r\n      <Paper>\r\n        {loading && <Loading isRTL={isRTL}></Loading>}\r\n\r\n        <Grid\r\n          rows={departments.filter((em: any) => em.depType === 1)}\r\n          columns={columns}\r\n          getRowId={getRowId}\r\n        >\r\n          <SortingState />\r\n          <SearchState />\r\n          <EditingState onCommitChanges={commitChanges} />\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedFiltering />\r\n\r\n          <VirtualTable\r\n            height={window.innerHeight - 133}\r\n            messages={{\r\n              noData: isRTL ? \"لا يوجد بيانات\" : \"no data\",\r\n            }}\r\n            estimatedRowHeight={40}\r\n          />\r\n\r\n          <TableHeaderRow showSortingControls />\r\n          <TableColumnVisibility\r\n            defaultHiddenColumnNames={[\"avatar\", \"depType\", \"desc\"]}\r\n          />\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"depType\"]}\r\n            formatterComponent={sectionsTypeFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"nameAr\", \"name\"]}\r\n            formatterComponent={(props: any) =>\r\n              nameLinkFormat({ ...props, setItem, setOpenItem })\r\n            }\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"amount\", \"toatlExpenses\", \"totalpaid\", \"totalinvoiced\"]}\r\n            formatterComponent={currencyFormatterEmpty}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"due\"]}\r\n            formatterComponent={dueAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"avatar\"]}\r\n            formatterComponent={avatarPatternFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"income\"]}\r\n            formatterComponent={incomeAmountFormatter}\r\n          ></DataTypeProvider>\r\n          <DataTypeProvider\r\n            for={[\"progress\"]}\r\n            formatterComponent={progressFormatter}\r\n          ></DataTypeProvider>\r\n\r\n          {isEditor && (\r\n            <TableEditColumn\r\n              showEditCommand\r\n              showDeleteCommand\r\n              showAddCommand\r\n              commandComponent={Command}\r\n            ></TableEditColumn>\r\n          )}\r\n\r\n          <Toolbar />\r\n          <ColumnChooser />\r\n\r\n          <SearchPanel\r\n            inputComponent={(props: any) => {\r\n              return <SearchTable isRTL={isRTL} {...props}></SearchTable>;\r\n            }}\r\n          />\r\n\r\n          <PopupEditing\r\n            theme={theme}\r\n            addAction={addDepartment}\r\n            editAction={editDepartment}\r\n          >\r\n            <PopupDeprtment></PopupDeprtment>\r\n          </PopupEditing>\r\n        </Grid>\r\n        {alrt.show && (\r\n          <AlertLocal\r\n            isRTL={isRTL}\r\n            type={alrt?.type}\r\n            msg={alrt?.msg}\r\n            top\r\n          ></AlertLocal>\r\n        )}\r\n        <PopupDepartmentView\r\n          open={openItem}\r\n          onClose={onCloseItem}\r\n          row={item}\r\n          isNew={false}\r\n          addAction={addDepartment}\r\n          editAction={editDepartment}\r\n          theme={theme}\r\n          isEditor={isEditor}\r\n          departments={departments}\r\n          company={company}\r\n          employees={employees}\r\n          servicesproducts={servicesproducts}\r\n          customers={customers}\r\n          tasks={tasks}\r\n        ></PopupDepartmentView>\r\n      </Paper>\r\n    </PageLayout>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport * as React from \"react\";\r\nimport {\r\n  ViewState,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  DayView,\r\n  CurrentTimeIndicator,\r\n  Resources,\r\n  GroupingPanel,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { RenderToolTip } from \"./common/AppointTooltip\";\r\nimport { AppointmentContent } from \"./common\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { getEvents } from \"../../graphql\";\r\nimport {\r\n  Box,\r\n  fade,\r\n  FormControlLabel,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Radio,\r\n  RadioGroup,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { getStartEndEventView } from \"../../common/time\";\r\nimport { DateNavigator } from \"../../components\";\r\nimport LoadingInline from \"../../Shared/LoadingInline\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport RefreshOutlinedIcon from \"@material-ui/icons/RefreshOutlined\";\r\nimport { getResourses } from \"../../common\";\r\nimport { eventStatus } from \"../../constants\";\r\n\r\nconst EmployeesAppoints = (props: any) => {\r\n  const [resourseData, setResourseData] = useState<any>([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const {\r\n    state: { currentDate, currentViewName, mainResourceName },\r\n    dispatch,\r\n  } = useContext(CalendarReportContext);\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const [getCalEvents, evnData] = useLazyQuery(getEvents);\r\n  const {\r\n    theme,\r\n    isRTL,\r\n    words,\r\n    services,\r\n    company,\r\n    calendar,\r\n    employees,\r\n    departments,\r\n    customers,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const resourses = getResourses(\r\n      mainResourceName === \"employeeId\" ? employees : eventStatus,\r\n      mainResourceName,\r\n      \"Data\",\r\n      isRTL\r\n    );\r\n    setResourseData(resourses);\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    const eventsData = evnData?.data?.[\"getEvents\"]?.data || [];\r\n    const events =\r\n      eventsData.length > 0\r\n        ? eventsData.map((ap: any) => {\r\n            return {\r\n              ...ap,\r\n              startDate: new Date(ap.startDate),\r\n              endDate: new Date(ap.endDate),\r\n              start: ap.startDate,\r\n              end: ap.endDate,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    setRows(events);\r\n  }, [evnData]);\r\n\r\n  const refresh = () => {\r\n    if (evnData?.refetch) {\r\n      evnData.refetch();\r\n    }\r\n  };\r\n\r\n  const grouping = [\r\n    {\r\n      resourceName: mainResourceName,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const id = setInterval(() => {\r\n  //     refresh();\r\n  //   }, 10000);\r\n  //   return () => clearInterval(id);\r\n  // });\r\n\r\n  useEffect(() => {\r\n    const startend: any = getStartEndEventView({\r\n      time: currentDate,\r\n      view: currentViewName,\r\n    });\r\n    const variables = {\r\n      start: startend.start,\r\n      end: startend.end,\r\n    };\r\n    getCalEvents({\r\n      variables,\r\n    });\r\n  }, [currentDate, currentViewName]);\r\n\r\n  const setMainResourceNameDispatch = (value: any) => {\r\n    dispatch({ type: \"setMainResourceName\", payload: value });\r\n\r\n    const resourses = getResourses(\r\n      value === \"employeeId\" ? employees : eventStatus,\r\n      value,\r\n      \"Data\"\r\n    );\r\n    setResourseData(resourses);\r\n  };\r\n\r\n  const currentViewNameChange = (e: any) => {\r\n    dispatch({ type: \"setCurrentViewName\", payload: e.target.value });\r\n  };\r\n  const currentDateChange = (curDate: any) => {\r\n    dispatch({ type: \"setCurrentDate\", payload: curDate });\r\n  };\r\n  console.log();\r\n\r\n  if (\r\n    !employees ||\r\n    employees.length === 0 ||\r\n    !resourseData ||\r\n    !resourseData?.[0]?.instances ||\r\n    resourseData?.[0]?.instances?.length === 0\r\n  ) {\r\n    return <LoadingInline></LoadingInline>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{ backgroundColor: \"#fff\", marginTop: isMobile ? 47 : undefined }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} md={4}>\r\n          <DateNavigator\r\n            setStart={() => null}\r\n            setEnd={() => null}\r\n            isRTL={isRTL}\r\n            words={words}\r\n            theme={theme}\r\n            currentViewNameChange={currentViewNameChange}\r\n            currentDateChange={currentDateChange}\r\n            currentViewName={currentViewName}\r\n            currentDate={currentDate}\r\n            views={[1, 3]}\r\n          ></DateNavigator>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <RadioGroup\r\n              aria-label=\"Views\"\r\n              name=\"views\"\r\n              row\r\n              value={mainResourceName}\r\n              onChange={(e: any) => setMainResourceNameDispatch(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value={\"employeeId\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الموظف\" : \"Employee\"}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"status\"\r\n                control={<Radio color=\"primary\" />}\r\n                label={isRTL ? \"الحالة\" : \"Status\"}\r\n              />\r\n            </RadioGroup>\r\n            {refresh && (\r\n              <IconButton\r\n                style={{\r\n                  backgroundColor: fade(theme.palette.secondary.main, 0.5),\r\n                  padding: 7,\r\n                }}\r\n                onClick={refresh}\r\n              >\r\n                <RefreshOutlinedIcon\r\n                  style={{ fontSize: 24 }}\r\n                  color=\"primary\"\r\n                ></RefreshOutlinedIcon>\r\n              </IconButton>\r\n            )}\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Scheduler\r\n        data={rows}\r\n        height={isMobile ? window.innerHeight : window.innerHeight - 60}\r\n        firstDayOfWeek={6}\r\n        locale={isRTL ? \"ar\" : \"en\"}\r\n      >\r\n        <GroupingState grouping={grouping} />\r\n        <ViewState\r\n          currentViewName={currentViewName}\r\n          onCurrentViewNameChange={currentViewNameChange}\r\n          currentDate={currentDate}\r\n          onCurrentDateChange={currentDateChange}\r\n        />\r\n        <DayView\r\n          name=\"Day\"\r\n          displayName=\"Day\"\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        <DayView\r\n          name=\"3Days\"\r\n          displayName=\"3 Days\"\r\n          intervalCount={3}\r\n          cellDuration={calendar ? calendar?.duration : 30}\r\n          startDayHour={calendar ? calendar?.start : 8.5}\r\n          endDayHour={calendar ? calendar?.end : 21.5}\r\n        />\r\n        {/* <Toolbar /> */}\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <Resources data={resourseData} mainResourceName={mainResourceName} />\r\n        <IntegratedGrouping />\r\n        <AppointmentTooltip\r\n          showCloseButton\r\n          visible={visible}\r\n          onVisibilityChange={() => setVisible(!visible)}\r\n          contentComponent={({ appointmentData }) => (\r\n            <RenderToolTip\r\n              appointmentData={appointmentData}\r\n              setVisible={setVisible}\r\n              departments={departments}\r\n              employees={employees}\r\n              customers={customers}\r\n              services={services}\r\n              editEvent={() => null}\r\n              company={company}\r\n              viewonly\r\n            ></RenderToolTip>\r\n          )}\r\n        />\r\n        <GroupingPanel />\r\n        <CurrentTimeIndicator shadePreviousCells></CurrentTimeIndicator>\r\n      </Scheduler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeesAppoints;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCustomers, useDepartments, useEmployees } from \"../../hooks\";\r\nimport EmployeesAppoints from \"./Employees\";\r\n\r\nconst EmployeesCalendar = (props: any) => {\r\n  const [state, setstate] = useState([]);\r\n  const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { customers } = useCustomers();\r\n\r\n  useEffect(() => {\r\n    if (employees && employees.length > 0) {\r\n      const emps = employees.filter((em: any) => em.resType === 1);\r\n      setstate(emps);\r\n    }\r\n  }, [employees]);\r\n\r\n  return (\r\n    <EmployeesAppoints\r\n      {...props}\r\n      employees={state}\r\n      departments={departments}\r\n      customers={customers}\r\n    ></EmployeesAppoints>\r\n  );\r\n};\r\n\r\nexport default EmployeesCalendar;\r\n","/* eslint-disable no-var */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { fade, useTheme } from \"@material-ui/core/styles\";\r\nimport { Box, CssBaseline } from \"@material-ui/core\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AppDrawer } from \"../../components\";\r\nimport { mainmenu } from \"../../constants\";\r\nimport Landing from \"./Landing\";\r\nimport {\r\n  EventsContext,\r\n  eventsReducer,\r\n  ExpensesContext,\r\n  initExpensesContext,\r\n  expensesReducer,\r\n  ExpensesReportContext,\r\n  initExpensesReportContext,\r\n  expensesReportReducer,\r\n  CustomerReportContext,\r\n  initCustomerReportContext,\r\n  customerReportReducer,\r\n  FinanceContext,\r\n  financeReducer,\r\n  GlobalContext,\r\n  initEventsContext,\r\n  initFinanceContext,\r\n  initPurchaseReportContext,\r\n  initSalesContext,\r\n  initSalesReportContext,\r\n  PurchaseReportContext,\r\n  purchaseReportReducer,\r\n  SalesContext,\r\n  salesReducer,\r\n  SalesReportContext,\r\n  salesReportReducer,\r\n  receiptReducer,\r\n  initReceiptContext,\r\n  ReceiptContext,\r\n} from \"../../contexts\";\r\nimport { layoutClasses } from \"../../themes\";\r\nimport MainCalendar from \"../calendar/MainCalendar\";\r\nimport Options from \"../options\";\r\nimport {\r\n  Users,\r\n  Departments,\r\n  Employees,\r\n  Customers,\r\n  Services,\r\n  Invoices,\r\n  Accounts,\r\n} from \"../adds\";\r\nimport { GContextTypes } from \"../../types\";\r\nimport Finance from \"../adds/Finance\";\r\n\r\nimport { useBranches, useServices, useSuppliers } from \"../../hooks\";\r\nimport { roles } from \"../../common\";\r\nimport useCompany from \"../../hooks/useCompany\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport Appointments from \"../adds/Appointments\";\r\nimport { CalendarContext } from \"../../contexts/calendar\";\r\nimport { initCalendar, calendarReducer } from \"../../contexts\";\r\nimport SalesReport from \"../reports/SalesReport\";\r\nimport useAccounts from \"../../hooks/useAccounts\";\r\nimport FinanceReport from \"../reports/FinanceReport\";\r\nimport {\r\n  eventsReportReducer,\r\n  initEventsReportContext,\r\n} from \"../../contexts/eventsreport/salesReducer\";\r\nimport EventsReport from \"../reports/EventsReport\";\r\nimport CustomerReport from \"../reports/CustomerReport\";\r\nimport EventsReportContext from \"../../contexts/eventsreport\";\r\nimport {\r\n  calendarReportReducer,\r\n  initCalendarReportContext,\r\n} from \"../../contexts/calendarReport/eventsReducer\";\r\nimport CalendarReportContext from \"../../contexts/calendarReport\";\r\nimport Expenses from \"../adds/Expenses\";\r\nimport { filterMenu, getparentAccounts } from \"../../common/helpers\";\r\nimport PurchaseReport from \"../reports/PurchaseReport\";\r\nimport ExpensesReport from \"../reports/ExpensesReport\";\r\nimport Resourses from \"../adds/Resourses\";\r\nimport Receipt from \"../adds/Receipt\";\r\nimport FinanceAll from \"../adds/FinanceAll\";\r\nimport Tasks from \"../adds/Tasks\";\r\nimport {\r\n  initTasksContext,\r\n  tasksReducer,\r\n} from \"../../contexts/tasks/tasksReducer\";\r\nimport TasksContext from \"../../contexts/tasks\";\r\nimport DocumentsReport from \"../reports/DocumentsReport\";\r\nimport {\r\n  documentsReportReducer,\r\n  initDocumentsReportContext,\r\n} from \"../../contexts/documentsReport/documentsReducer\";\r\nimport DocumentsReportContext from \"../../contexts/documentsReport\";\r\nimport ServicesReportContext from \"../../contexts/servicesReport\";\r\nimport ServicesReport from \"../reports/ServicesReport\";\r\nimport {\r\n  initServicesReportContext,\r\n  servicesReportReducer,\r\n} from \"../../contexts/servicesReport/servicesReducer\";\r\nimport ManageEmployees from \"../adds/ManageEmployees\";\r\nimport ManageDepartments from \"../adds/ManageDepartments\";\r\nimport EmployeesCalendar from \"../calendar/EmployeesCalendar\";\r\n// import { webFrame } from \"electron\";\r\n\r\nconst Content = () => {\r\n  // webFrame.setZoomFactor(0.9);\r\n  // webFrame.setZoomFactor(1);\r\n\r\n  const classes = layoutClasses();\r\n  const [menuitem, setMenuitem] = useState(mainmenu[0]);\r\n  const [isEditor, setIsEditor] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const { branches } = useBranches();\r\n  const { services, refreshservice, addService, editService } = useServices();\r\n  const { company, editCompany, refreshcompany } = useCompany();\r\n  const { suppliers } = useSuppliers();\r\n  const { accounts, refreshAccount } = useAccounts();\r\n\r\n  const {\r\n    store: { user, calendar, network },\r\n    dispatch,\r\n    translate: { words, isRTL },\r\n  }: GContextTypes = useContext(GlobalContext);\r\n  const logout = () => {\r\n    dispatch({ type: \"logout\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCalPOSEditor = roles.isCalEditor() || roles.isPOSEditor();\r\n    setIsEditor(isCalPOSEditor);\r\n  }, []);\r\n\r\n  const [calendarStore, calendarDispatch] = useReducer(\r\n    calendarReducer,\r\n    initCalendar\r\n  );\r\n\r\n  const [eventsStore, eventsDispatch] = useReducer(\r\n    eventsReducer,\r\n    initEventsContext\r\n  );\r\n  const [documentsStore, documentsDispatch] = useReducer(\r\n    documentsReportReducer,\r\n    initDocumentsReportContext\r\n  );\r\n  const [servicesStore, servicesDispatch] = useReducer(\r\n    servicesReportReducer,\r\n    initServicesReportContext\r\n  );\r\n  const [tasksStore, tasksDispatch] = useReducer(\r\n    tasksReducer,\r\n    initTasksContext\r\n  );\r\n  const [salesStore, salesDispatch] = useReducer(\r\n    salesReducer,\r\n    initSalesContext\r\n  );\r\n  const [salesReportStore, salesReportDispatch] = useReducer(\r\n    salesReportReducer,\r\n    initSalesReportContext\r\n  );\r\n  const [purchaseReportStore, purchaseReportDispatch] = useReducer(\r\n    purchaseReportReducer,\r\n    initPurchaseReportContext\r\n  );\r\n  const [eventsReportStore, eventsReportDispatch] = useReducer(\r\n    eventsReportReducer,\r\n    initEventsReportContext\r\n  );\r\n\r\n  const [financeStore, financeDispatch] = useReducer(\r\n    financeReducer,\r\n    initFinanceContext\r\n  );\r\n  const [receiptStore, receiptDispatch] = useReducer(\r\n    receiptReducer,\r\n    initReceiptContext\r\n  );\r\n  const [expensesStore, expensesDispatch] = useReducer(\r\n    expensesReducer,\r\n    initExpensesContext\r\n  );\r\n  const [expensesReportStore, expensesReportDispatch] = useReducer(\r\n    expensesReportReducer,\r\n    initExpensesReportContext\r\n  );\r\n  const [customerReportStore, customerReportDispatch] = useReducer(\r\n    customerReportReducer,\r\n    initCustomerReportContext\r\n  );\r\n  const [calendarReportStore, calendarReportDispatch] = useReducer(\r\n    calendarReportReducer,\r\n    initCalendarReportContext\r\n  );\r\n\r\n  let systems: any;\r\n  const barnch = branches.filter((br: any) => br.basename === user.branch);\r\n  if (barnch && barnch.length > 0) {\r\n    systems = barnch?.[0]?.systems;\r\n  }\r\n\r\n  const menu = systems ? filterMenu(systems) : [];\r\n  const accs = user.isSuperAdmin\r\n    ? accounts\r\n    : accounts.filter((acc: any) => acc.branch === user.branch);\r\n  const mainaccounts = getparentAccounts(systems);\r\n  const filteredAccounts =\r\n    accs?.length > 0\r\n      ? accs.filter((acc: any) => mainaccounts.includes(acc.parentcode))\r\n      : [];\r\n  filteredAccounts.sort((a: any, b: any) => a.code - b.code);\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      dir={isRTL ? \"rtl\" : undefined}\r\n      display=\"flex\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: fade(theme.palette.info.light, 0.05),\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppDrawer\r\n        isRTL={isRTL}\r\n        setMenuitem={setMenuitem}\r\n        menuitem={menuitem}\r\n        user={user}\r\n        branches={branches}\r\n        menu={menu}\r\n        logout={logout}\r\n        network={network}\r\n      ></AppDrawer>\r\n      <main className={classes.content}>\r\n        <div>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            component={() => (\r\n              <Landing\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                user={user}\r\n                theme={theme}\r\n              ></Landing>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendar\"\r\n            component={() => (\r\n              <CalendarContext.Provider\r\n                value={{ state: calendarStore, dispatch: calendarDispatch }}\r\n              >\r\n                <MainCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  company={company}\r\n                  services={services}\r\n                  addService={addService}\r\n                  editService={editService}\r\n                ></MainCalendar>\r\n              </CalendarContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/calendarempl\"\r\n            component={() => (\r\n              <CalendarReportContext.Provider\r\n                value={{\r\n                  state: calendarReportStore,\r\n                  dispatch: calendarReportDispatch,\r\n                }}\r\n              >\r\n                <EmployeesCalendar\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  theme={theme}\r\n                  isEditor={isEditor}\r\n                  calendar={calendar}\r\n                  services={services}\r\n                  company={company}\r\n                ></EmployeesCalendar>\r\n              </CalendarReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/sales\"\r\n            component={() => (\r\n              <SalesContext.Provider\r\n                value={{ state: salesStore, dispatch: salesDispatch }}\r\n              >\r\n                <Invoices\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Invoices>\r\n              </SalesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tasks\"\r\n            component={() => (\r\n              <TasksContext.Provider\r\n                value={{ state: tasksStore, dispatch: tasksDispatch }}\r\n              >\r\n                <Tasks\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Tasks>\r\n              </TasksContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/appointments\"\r\n            component={() => (\r\n              <EventsContext.Provider\r\n                value={{ state: eventsStore, dispatch: eventsDispatch }}\r\n              >\r\n                <Appointments\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                  company={company}\r\n                  servicesproducts={services}\r\n                ></Appointments>\r\n              </EventsContext.Provider>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/cash\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <Finance\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Finance>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/receipts\"\r\n            component={() => (\r\n              <ReceiptContext.Provider\r\n                value={{ state: receiptStore, dispatch: receiptDispatch }}\r\n              >\r\n                <Receipt\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Receipt>\r\n              </ReceiptContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expenses\"\r\n            component={() => (\r\n              <ExpensesContext.Provider\r\n                value={{ state: expensesStore, dispatch: expensesDispatch }}\r\n              >\r\n                <Expenses\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></Expenses>\r\n              </ExpensesContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financeall\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{ state: financeStore, dispatch: financeDispatch }}\r\n              >\r\n                <FinanceAll\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  theme={theme}\r\n                ></FinanceAll>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customers\"\r\n            component={() => (\r\n              <Customers\r\n                isRTL={isRTL}\r\n                words={words}\r\n                theme={theme}\r\n                menuitem={menuitem}\r\n                isEditor={isEditor}\r\n                company={company}\r\n                servicesproducts={services}\r\n              ></Customers>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users\"\r\n            component={() => (\r\n              <Users\r\n                words={words}\r\n                isEditor={isEditor}\r\n                menuitem={menuitem}\r\n                theme={theme}\r\n                isRTL={isRTL}\r\n              ></Users>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/accounts\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshAccount}\r\n              >\r\n                <Accounts accounts={accs}></Accounts>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/options\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshcompany}\r\n                editCompany={editCompany}\r\n                company={company}\r\n              >\r\n                <Options></Options>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/departments\"\r\n            component={() => (\r\n              <Departments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Departments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/managedepartments\"\r\n            component={() => (\r\n              <ManageDepartments\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageDepartments>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/employees\"\r\n            component={() => (\r\n              <Employees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Employees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/manageemployees\"\r\n            component={() => (\r\n              <ManageEmployees\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                servicesproducts={services}\r\n                company={company}\r\n              ></ManageEmployees>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/resourses\"\r\n            component={() => (\r\n              <Resourses\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n              ></Resourses>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/services\"\r\n            component={() => (\r\n              <PageLayout\r\n                menuitem={menuitem}\r\n                isRTL={isRTL}\r\n                words={words}\r\n                isEditor={isEditor}\r\n                theme={theme}\r\n                refresh={refreshservice}\r\n              >\r\n                <Services></Services>\r\n              </PageLayout>\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/calreports\"\r\n            component={() => (\r\n              <EventsReportContext.Provider\r\n                value={{\r\n                  state: eventsReportStore,\r\n                  dispatch: eventsReportDispatch,\r\n                }}\r\n              >\r\n                <EventsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></EventsReport>\r\n              </EventsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/docreports\"\r\n            component={() => (\r\n              <DocumentsReportContext.Provider\r\n                value={{\r\n                  state: documentsStore,\r\n                  dispatch: documentsDispatch,\r\n                }}\r\n              >\r\n                <DocumentsReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></DocumentsReport>\r\n              </DocumentsReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicesreports\"\r\n            component={() => (\r\n              <ServicesReportContext.Provider\r\n                value={{\r\n                  state: servicesStore,\r\n                  dispatch: servicesDispatch,\r\n                }}\r\n              >\r\n                <ServicesReport\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  theme={theme}\r\n                ></ServicesReport>\r\n              </ServicesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/salesreport\"\r\n            component={() => (\r\n              <SalesReportContext.Provider\r\n                value={{\r\n                  state: salesReportStore,\r\n                  dispatch: salesReportDispatch,\r\n                }}\r\n              >\r\n                <SalesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></SalesReport>\r\n              </SalesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/purchasereport\"\r\n            component={() => (\r\n              <PurchaseReportContext.Provider\r\n                value={{\r\n                  state: purchaseReportStore,\r\n                  dispatch: purchaseReportDispatch,\r\n                }}\r\n              >\r\n                <PurchaseReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  suppliers={suppliers}\r\n                  categories={[]}\r\n                  company={company}\r\n                ></PurchaseReport>\r\n              </PurchaseReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/financereport\"\r\n            component={() => (\r\n              <FinanceContext.Provider\r\n                value={{\r\n                  state: financeStore,\r\n                  dispatch: financeDispatch,\r\n                }}\r\n              >\r\n                <FinanceReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></FinanceReport>\r\n              </FinanceContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/expensesreport\"\r\n            component={() => (\r\n              <ExpensesReportContext.Provider\r\n                value={{\r\n                  state: expensesReportStore,\r\n                  dispatch: expensesReportDispatch,\r\n                }}\r\n              >\r\n                <ExpensesReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></ExpensesReport>\r\n              </ExpensesReportContext.Provider>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/customerreport\"\r\n            component={() => (\r\n              <CustomerReportContext.Provider\r\n                value={{\r\n                  state: customerReportStore,\r\n                  dispatch: customerReportDispatch,\r\n                }}\r\n              >\r\n                <CustomerReport\r\n                  isRTL={isRTL}\r\n                  words={words}\r\n                  isEditor={isEditor}\r\n                  menuitem={menuitem}\r\n                  theme={theme}\r\n                  services={services}\r\n                  categories={[]}\r\n                  company={company}\r\n                  mainaccounts={filteredAccounts}\r\n                ></CustomerReport>\r\n              </CustomerReportContext.Provider>\r\n            )}\r\n          />\r\n        </div>\r\n      </main>\r\n    </Box>\r\n  );\r\n};\r\nexport default Content;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getSuppliers,\r\n  createSupplier,\r\n  deleteSupplier,\r\n  updateSupplier,\r\n} from \"../graphql\";\r\nimport { getStoreItem } from \"../store\";\r\n\r\nexport default () => {\r\n  const store = getStoreItem(\"store\");\r\n  const { lang } = store;\r\n  const isRTL = lang === \"ar\" ? true : false;\r\n  const [getCusts, custData]: any = useLazyQuery(getSuppliers, {\r\n    variables: { isRTL },\r\n  });\r\n\r\n  const [addSupplier] = useMutation(createSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [editSupplier] = useMutation(updateSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n  const [removeSupplier] = useMutation(deleteSupplier, {\r\n    refetchQueries: [{ query: getSuppliers, variables: { isRTL } }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCusts();\r\n  }, [getCusts]);\r\n\r\n  const suppliers = custData?.data?.[\"getSuppliers\"]?.data || [];\r\n  const refreshsupplier = () => custData?.refetch();\r\n  return {\r\n    suppliers,\r\n    refreshsupplier,\r\n    addSupplier,\r\n    editSupplier,\r\n    removeSupplier,\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../login\";\r\nimport { GlobalContext } from \"../../contexts\";\r\nimport Content from \"./Content\";\r\nimport { jadwalready } from \"../../common\";\r\n\r\nconst Layout = () => {\r\n  const { store } = useContext(GlobalContext);\r\n  const user = store?.user;\r\n  const lang = store?.lang;\r\n\r\n  jadwalready();\r\n\r\n  return (\r\n    <Router>\r\n      {!user && <Login lang={lang}></Login>}\r\n      {user && <Content></Content>}\r\n    </Router>\r\n  );\r\n};\r\nexport default Layout;\r\n","/* eslint-disable import/first */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nrequire(\"dotenv\").config();\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { createThem } from \"./themes\";\r\nimport { client } from \"./graphql\";\r\nimport { getStoreItem, setStoreItem } from \"./store\";\r\nimport { Layout } from \"./pages/main\";\r\nimport { initStore, storeReducer } from \"./store\";\r\nimport { GlobalContext } from \"./contexts\";\r\nimport { useTranslate } from \"./hooks\";\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  const storeState = getStoreItem(\"store\", initStore);\r\n  const [store, dispatch] = useReducer(\r\n    storeReducer,\r\n    storeState ? storeState : initStore\r\n  );\r\n  const theme = createThem({ lang: store.lang, themeId: store.themeId });\r\n  const translate = useTranslate(store.lang);\r\n  useEffect(() => {\r\n    setStoreItem(\"store\", store);\r\n  }, [store]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <StylesProvider jss={jss}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalContext.Provider value={{ store, dispatch, translate }}>\r\n            <Layout></Layout>\r\n          </GlobalContext.Provider>\r\n        </ThemeProvider>\r\n      </StylesProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { palettes } from \"./palettes\";\r\nimport { themeArData, themeEnData } from \"./themes\";\r\n\r\nexport const createThem = ({ lang, themeId }: any) => {\r\n  const themeData = lang === \"ar\" ? themeArData : themeEnData;\r\n  const paletteData = palettes[Number(themeId)];\r\n\r\n  // @ts-ignore\r\n  const theme: any = createMuiTheme({\r\n    ...paletteData,\r\n    ...themeData,\r\n  });\r\n  return theme;\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n//TODO: not used\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState, useEffect } from \"react\";\r\nimport { en, ar, translation } from \"../languages\";\r\n\r\nexport default (lang: any) => {\r\n  const transD = lang === \"ar\" ? translation(ar) : translation(en);\r\n  const [translate, setTranslate] = useState(transD);\r\n\r\n  useEffect(() => {\r\n    setTranslate(transD);\r\n  }, [lang]);\r\n\r\n  return translate;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/first */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}